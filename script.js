(self.webpackChunk_N_E = self.webpackChunk_N_E || []).push([[888], {
    8679: function(t, e, n) {
        "use strict";
        var r = n(9864)
          , i = {
            childContextTypes: !0,
            contextType: !0,
            contextTypes: !0,
            defaultProps: !0,
            displayName: !0,
            getDefaultProps: !0,
            getDerivedStateFromError: !0,
            getDerivedStateFromProps: !0,
            mixins: !0,
            propTypes: !0,
            type: !0
        }
          , a = {
            name: !0,
            length: !0,
            prototype: !0,
            caller: !0,
            callee: !0,
            arguments: !0,
            arity: !0
        }
          , o = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0
        }
          , s = {};
        function l(t) {
            return r.isMemo(t) ? o : s[t.$$typeof] || i
        }
        s[r.ForwardRef] = {
            $$typeof: !0,
            render: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0
        },
        s[r.Memo] = o;
        var u = Object.defineProperty
          , c = Object.getOwnPropertyNames
          , h = Object.getOwnPropertySymbols
          , d = Object.getOwnPropertyDescriptor
          , f = Object.getPrototypeOf
          , p = Object.prototype;
        t.exports = function t(e, n, r) {
            if ("string" != typeof n) {
                if (p) {
                    var i = f(n);
                    i && i !== p && t(e, i, r)
                }
                var o = c(n);
                h && (o = o.concat(h(n)));
                for (var s = l(e), m = l(n), y = 0; y < o.length; ++y) {
                    var g = o[y];
                    if (!a[g] && !(r && r[g]) && !(m && m[g]) && !(s && s[g])) {
                        var v = d(n, g);
                        try {
                            u(e, g, v)
                        } catch (t) {}
                    }
                }
            }
            return e
        }
    },
    6840: function(t, e, n) {
        (window.__NEXT_P = window.__NEXT_P || []).push(["/_app", function() {
            return n(3870)
        }
        ])
    },
    8179: function(t, e, n) {
        "use strict";
        n.d(e, {
            J: function() {
                return r
            }
        });
        let r = "production"
    },
    128: function(t, e, n) {
        "use strict";
        n.d(e, {
            $e: function() {
                return c
            },
            Tb: function() {
                return i
            },
            av: function() {
                return u
            },
            e: function() {
                return o
            },
            n_: function() {
                return s
            },
            uT: function() {
                return a
            },
            v: function() {
                return l
            }
        });
        var r = n(3859);
        function i(t, e) {
            return (0,
            r.Gd)().captureException(t, {
                captureContext: e
            })
        }
        function a(t, e) {
            let n = "string" == typeof e ? e : void 0
              , i = "string" != typeof e ? {
                captureContext: e
            } : void 0;
            return (0,
            r.Gd)().captureMessage(t, n, i)
        }
        function o(t) {
            (0,
            r.Gd)().configureScope(t)
        }
        function s(t) {
            (0,
            r.Gd)().addBreadcrumb(t)
        }
        function l(t, e) {
            (0,
            r.Gd)().setContext(t, e)
        }
        function u(t) {
            (0,
            r.Gd)().setUser(t)
        }
        function c(t) {
            (0,
            r.Gd)().withScope(t)
        }
    },
    3859: function(t, e, n) {
        "use strict";
        n.d(e, {
            Gd: function() {
                return f
            },
            cu: function() {
                return h
            }
        });
        var r = n(8002)
          , i = n(3834)
          , a = n(5120)
          , o = n(21)
          , s = n(8179)
          , l = n(9839)
          , u = n(1261);
        class c {
            isOlderThan(t) {
                return this._version < t
            }
            bindClient(t) {
                let e = this.getStackTop();
                e.client = t,
                t && t.setupIntegrations && t.setupIntegrations()
            }
            pushScope() {
                let t = l.s.clone(this.getScope());
                return this.getStack().push({
                    client: this.getClient(),
                    scope: t
                }),
                t
            }
            popScope() {
                return !(this.getStack().length <= 1) && !!this.getStack().pop()
            }
            withScope(t) {
                let e = this.pushScope();
                try {
                    t(e)
                } finally {
                    this.popScope()
                }
            }
            getClient() {
                return this.getStackTop().client
            }
            getScope() {
                return this.getStackTop().scope
            }
            getStack() {
                return this._stack
            }
            getStackTop() {
                return this._stack[this._stack.length - 1]
            }
            captureException(t, e) {
                let n = this._lastEventId = e && e.event_id ? e.event_id : (0,
                r.DM)()
                  , i = Error("Sentry syntheticException");
                return this._withClient( (r, a) => {
                    r.captureException(t, {
                        originalException: t,
                        syntheticException: i,
                        ...e,
                        event_id: n
                    }, a)
                }
                ),
                n
            }
            captureMessage(t, e, n) {
                let i = this._lastEventId = n && n.event_id ? n.event_id : (0,
                r.DM)()
                  , a = Error(t);
                return this._withClient( (r, o) => {
                    r.captureMessage(t, e, {
                        originalException: t,
                        syntheticException: a,
                        ...n,
                        event_id: i
                    }, o)
                }
                ),
                i
            }
            captureEvent(t, e) {
                let n = e && e.event_id ? e.event_id : (0,
                r.DM)();
                return t.type || (this._lastEventId = n),
                this._withClient( (r, i) => {
                    r.captureEvent(t, {
                        ...e,
                        event_id: n
                    }, i)
                }
                ),
                n
            }
            lastEventId() {
                return this._lastEventId
            }
            addBreadcrumb(t, e) {
                let {scope: n, client: r} = this.getStackTop();
                if (!r)
                    return;
                let {beforeBreadcrumb: o=null, maxBreadcrumbs: s=100} = r.getOptions && r.getOptions() || {};
                if (s <= 0)
                    return;
                let l = (0,
                i.yW)()
                  , u = {
                    timestamp: l,
                    ...t
                }
                  , c = o ? (0,
                a.Cf)( () => o(u, e)) : u;
                null !== c && (r.emit && r.emit("beforeAddBreadcrumb", c, e),
                n.addBreadcrumb(c, s))
            }
            setUser(t) {
                this.getScope().setUser(t)
            }
            setTags(t) {
                this.getScope().setTags(t)
            }
            setExtras(t) {
                this.getScope().setExtras(t)
            }
            setTag(t, e) {
                this.getScope().setTag(t, e)
            }
            setExtra(t, e) {
                this.getScope().setExtra(t, e)
            }
            setContext(t, e) {
                this.getScope().setContext(t, e)
            }
            configureScope(t) {
                let {scope: e, client: n} = this.getStackTop();
                n && t(e)
            }
            run(t) {
                let e = d(this);
                try {
                    t(this)
                } finally {
                    d(e)
                }
            }
            getIntegration(t) {
                let e = this.getClient();
                if (!e)
                    return null;
                try {
                    return e.getIntegration(t)
                } catch (t) {
                    return null
                }
            }
            startTransaction(t, e) {
                let n = this._callExtensionMethod("startTransaction", t, e);
                return n
            }
            traceHeaders() {
                return this._callExtensionMethod("traceHeaders")
            }
            captureSession() {
                let t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                if (t)
                    return this.endSession();
                this._sendSessionUpdate()
            }
            endSession() {
                let t = this.getStackTop()
                  , e = t.scope
                  , n = e.getSession();
                n && (0,
                u.RJ)(n),
                this._sendSessionUpdate(),
                e.setSession()
            }
            startSession(t) {
                let {scope: e, client: n} = this.getStackTop()
                  , {release: r, environment: i=s.J} = n && n.getOptions() || {}
                  , {userAgent: a} = o.n2.navigator || {}
                  , l = (0,
                u.Hv)({
                    release: r,
                    environment: i,
                    user: e.getUser(),
                    ...a && {
                        userAgent: a
                    },
                    ...t
                })
                  , c = e.getSession && e.getSession();
                return c && "ok" === c.status && (0,
                u.CT)(c, {
                    status: "exited"
                }),
                this.endSession(),
                e.setSession(l),
                l
            }
            shouldSendDefaultPii() {
                let t = this.getClient()
                  , e = t && t.getOptions();
                return !!(e && e.sendDefaultPii)
            }
            _sendSessionUpdate() {
                let {scope: t, client: e} = this.getStackTop()
                  , n = t.getSession();
                n && e && e.captureSession && e.captureSession(n)
            }
            _withClient(t) {
                let {scope: e, client: n} = this.getStackTop();
                n && t(n, e)
            }
            _callExtensionMethod(t) {
                for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                    n[r - 1] = arguments[r];
                let i = h()
                  , a = i.__SENTRY__;
                if (a && a.extensions && "function" == typeof a.extensions[t])
                    return a.extensions[t].apply(this, n)
            }
            constructor(t, e=new l.s, n=4) {
                this._version = n,
                this._stack = [{
                    scope: e
                }],
                t && this.bindClient(t)
            }
        }
        function h() {
            return o.n2.__SENTRY__ = o.n2.__SENTRY__ || {
                extensions: {},
                hub: void 0
            },
            o.n2
        }
        function d(t) {
            let e = h()
              , n = p(e);
            return m(e, t),
            n
        }
        function f() {
            let t = h();
            if (t.__SENTRY__ && t.__SENTRY__.acs) {
                let e = t.__SENTRY__.acs.getCurrentHub();
                if (e)
                    return e
            }
            return function() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : h();
                return (!(t && t.__SENTRY__ && t.__SENTRY__.hub) || p(t).isOlderThan(4)) && m(t, new c),
                p(t)
            }(t)
        }
        function p(t) {
            return (0,
            o.YO)("hub", () => new c, t)
        }
        function m(t, e) {
            if (!t)
                return !1;
            let n = t.__SENTRY__ = t.__SENTRY__ || {};
            return n.hub = e,
            !0
        }
    },
    9839: function(t, e, n) {
        "use strict";
        n.d(e, {
            c: function() {
                return h
            },
            s: function() {
                return u
            }
        });
        var r = n(2135)
          , i = n(3834)
          , a = n(7884)
          , o = n(8002)
          , s = n(21)
          , l = n(1261);
        class u {
            static clone(t) {
                let e = new u;
                return t && (e._breadcrumbs = [...t._breadcrumbs],
                e._tags = {
                    ...t._tags
                },
                e._extra = {
                    ...t._extra
                },
                e._contexts = {
                    ...t._contexts
                },
                e._user = t._user,
                e._level = t._level,
                e._span = t._span,
                e._session = t._session,
                e._transactionName = t._transactionName,
                e._fingerprint = t._fingerprint,
                e._eventProcessors = [...t._eventProcessors],
                e._requestSession = t._requestSession,
                e._attachments = [...t._attachments],
                e._sdkProcessingMetadata = {
                    ...t._sdkProcessingMetadata
                },
                e._propagationContext = {
                    ...t._propagationContext
                }),
                e
            }
            addScopeListener(t) {
                this._scopeListeners.push(t)
            }
            addEventProcessor(t) {
                return this._eventProcessors.push(t),
                this
            }
            setUser(t) {
                return this._user = t || {},
                this._session && (0,
                l.CT)(this._session, {
                    user: t
                }),
                this._notifyScopeListeners(),
                this
            }
            getUser() {
                return this._user
            }
            getRequestSession() {
                return this._requestSession
            }
            setRequestSession(t) {
                return this._requestSession = t,
                this
            }
            setTags(t) {
                return this._tags = {
                    ...this._tags,
                    ...t
                },
                this._notifyScopeListeners(),
                this
            }
            setTag(t, e) {
                return this._tags = {
                    ...this._tags,
                    [t]: e
                },
                this._notifyScopeListeners(),
                this
            }
            setExtras(t) {
                return this._extra = {
                    ...this._extra,
                    ...t
                },
                this._notifyScopeListeners(),
                this
            }
            setExtra(t, e) {
                return this._extra = {
                    ...this._extra,
                    [t]: e
                },
                this._notifyScopeListeners(),
                this
            }
            setFingerprint(t) {
                return this._fingerprint = t,
                this._notifyScopeListeners(),
                this
            }
            setLevel(t) {
                return this._level = t,
                this._notifyScopeListeners(),
                this
            }
            setTransactionName(t) {
                return this._transactionName = t,
                this._notifyScopeListeners(),
                this
            }
            setContext(t, e) {
                return null === e ? delete this._contexts[t] : this._contexts[t] = e,
                this._notifyScopeListeners(),
                this
            }
            setSpan(t) {
                return this._span = t,
                this._notifyScopeListeners(),
                this
            }
            getSpan() {
                return this._span
            }
            getTransaction() {
                let t = this.getSpan();
                return t && t.transaction
            }
            setSession(t) {
                return t ? this._session = t : delete this._session,
                this._notifyScopeListeners(),
                this
            }
            getSession() {
                return this._session
            }
            update(t) {
                if (!t)
                    return this;
                if ("function" == typeof t) {
                    let e = t(this);
                    return e instanceof u ? e : this
                }
                return t instanceof u ? (this._tags = {
                    ...this._tags,
                    ...t._tags
                },
                this._extra = {
                    ...this._extra,
                    ...t._extra
                },
                this._contexts = {
                    ...this._contexts,
                    ...t._contexts
                },
                t._user && Object.keys(t._user).length && (this._user = t._user),
                t._level && (this._level = t._level),
                t._fingerprint && (this._fingerprint = t._fingerprint),
                t._requestSession && (this._requestSession = t._requestSession),
                t._propagationContext && (this._propagationContext = t._propagationContext)) : (0,
                r.PO)(t) && (this._tags = {
                    ...this._tags,
                    ...t.tags
                },
                this._extra = {
                    ...this._extra,
                    ...t.extra
                },
                this._contexts = {
                    ...this._contexts,
                    ...t.contexts
                },
                t.user && (this._user = t.user),
                t.level && (this._level = t.level),
                t.fingerprint && (this._fingerprint = t.fingerprint),
                t.requestSession && (this._requestSession = t.requestSession),
                t.propagationContext && (this._propagationContext = t.propagationContext)),
                this
            }
            clear() {
                return this._breadcrumbs = [],
                this._tags = {},
                this._extra = {},
                this._user = {},
                this._contexts = {},
                this._level = void 0,
                this._transactionName = void 0,
                this._fingerprint = void 0,
                this._requestSession = void 0,
                this._span = void 0,
                this._session = void 0,
                this._notifyScopeListeners(),
                this._attachments = [],
                this._propagationContext = d(),
                this
            }
            addBreadcrumb(t, e) {
                let n = "number" == typeof e ? e : 100;
                if (n <= 0)
                    return this;
                let r = {
                    timestamp: (0,
                    i.yW)(),
                    ...t
                };
                return this._breadcrumbs = [...this._breadcrumbs, r].slice(-n),
                this._notifyScopeListeners(),
                this
            }
            getLastBreadcrumb() {
                return this._breadcrumbs[this._breadcrumbs.length - 1]
            }
            clearBreadcrumbs() {
                return this._breadcrumbs = [],
                this._notifyScopeListeners(),
                this
            }
            addAttachment(t) {
                return this._attachments.push(t),
                this
            }
            getAttachments() {
                return this._attachments
            }
            clearAttachments() {
                return this._attachments = [],
                this
            }
            applyToEvent(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (this._extra && Object.keys(this._extra).length && (t.extra = {
                    ...this._extra,
                    ...t.extra
                }),
                this._tags && Object.keys(this._tags).length && (t.tags = {
                    ...this._tags,
                    ...t.tags
                }),
                this._user && Object.keys(this._user).length && (t.user = {
                    ...this._user,
                    ...t.user
                }),
                this._contexts && Object.keys(this._contexts).length && (t.contexts = {
                    ...this._contexts,
                    ...t.contexts
                }),
                this._level && (t.level = this._level),
                this._transactionName && (t.transaction = this._transactionName),
                this._span) {
                    t.contexts = {
                        trace: this._span.getTraceContext(),
                        ...t.contexts
                    };
                    let e = this._span.transaction;
                    if (e) {
                        t.sdkProcessingMetadata = {
                            dynamicSamplingContext: e.getDynamicSamplingContext(),
                            ...t.sdkProcessingMetadata
                        };
                        let n = e.name;
                        n && (t.tags = {
                            transaction: n,
                            ...t.tags
                        })
                    }
                }
                return this._applyFingerprint(t),
                t.breadcrumbs = [...t.breadcrumbs || [], ...this._breadcrumbs],
                t.breadcrumbs = t.breadcrumbs.length > 0 ? t.breadcrumbs : void 0,
                t.sdkProcessingMetadata = {
                    ...t.sdkProcessingMetadata,
                    ...this._sdkProcessingMetadata,
                    propagationContext: this._propagationContext
                },
                this._notifyEventProcessors([...c(), ...this._eventProcessors], t, e)
            }
            setSDKProcessingMetadata(t) {
                return this._sdkProcessingMetadata = {
                    ...this._sdkProcessingMetadata,
                    ...t
                },
                this
            }
            setPropagationContext(t) {
                return this._propagationContext = t,
                this
            }
            getPropagationContext() {
                return this._propagationContext
            }
            _notifyEventProcessors(t, e, n) {
                let i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                return new a.cW( (a, o) => {
                    let s = t[i];
                    if (null === e || "function" != typeof s)
                        a(e);
                    else {
                        let l = s({
                            ...e
                        }, n);
                        (0,
                        r.J8)(l) ? l.then(e => this._notifyEventProcessors(t, e, n, i + 1).then(a)).then(null, o) : this._notifyEventProcessors(t, l, n, i + 1).then(a).then(null, o)
                    }
                }
                )
            }
            _notifyScopeListeners() {
                this._notifyingListeners || (this._notifyingListeners = !0,
                this._scopeListeners.forEach(t => {
                    t(this)
                }
                ),
                this._notifyingListeners = !1)
            }
            _applyFingerprint(t) {
                t.fingerprint = t.fingerprint ? (0,
                o.lE)(t.fingerprint) : [],
                this._fingerprint && (t.fingerprint = t.fingerprint.concat(this._fingerprint)),
                t.fingerprint && !t.fingerprint.length && delete t.fingerprint
            }
            constructor() {
                this._notifyingListeners = !1,
                this._scopeListeners = [],
                this._eventProcessors = [],
                this._breadcrumbs = [],
                this._attachments = [],
                this._user = {},
                this._tags = {},
                this._extra = {},
                this._contexts = {},
                this._sdkProcessingMetadata = {},
                this._propagationContext = d()
            }
        }
        function c() {
            return (0,
            s.YO)("globalEventProcessors", () => [])
        }
        function h(t) {
            c().push(t)
        }
        function d() {
            return {
                traceId: (0,
                o.DM)(),
                spanId: (0,
                o.DM)().substring(16),
                sampled: !1
            }
        }
    },
    1261: function(t, e, n) {
        "use strict";
        n.d(e, {
            CT: function() {
                return s
            },
            Hv: function() {
                return o
            },
            RJ: function() {
                return l
            }
        });
        var r = n(3834)
          , i = n(8002)
          , a = n(738);
        function o(t) {
            let e = (0,
            r.ph)()
              , n = {
                sid: (0,
                i.DM)(),
                init: !0,
                timestamp: e,
                started: e,
                duration: 0,
                status: "ok",
                errors: 0,
                ignoreDuration: !1,
                toJSON: () => (0,
                a.Jr)({
                    sid: "".concat(n.sid),
                    init: n.init,
                    started: new Date(1e3 * n.started).toISOString(),
                    timestamp: new Date(1e3 * n.timestamp).toISOString(),
                    status: n.status,
                    errors: n.errors,
                    did: "number" == typeof n.did || "string" == typeof n.did ? "".concat(n.did) : void 0,
                    duration: n.duration,
                    attrs: {
                        release: n.release,
                        environment: n.environment,
                        ip_address: n.ipAddress,
                        user_agent: n.userAgent
                    }
                })
            };
            return t && s(n, t),
            n
        }
        function s(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            if (!e.user || (!t.ipAddress && e.user.ip_address && (t.ipAddress = e.user.ip_address),
            t.did || e.did || (t.did = e.user.id || e.user.email || e.user.username)),
            t.timestamp = e.timestamp || (0,
            r.ph)(),
            e.ignoreDuration && (t.ignoreDuration = e.ignoreDuration),
            e.sid && (t.sid = 32 === e.sid.length ? e.sid : (0,
            i.DM)()),
            void 0 !== e.init && (t.init = e.init),
            !t.did && e.did && (t.did = "".concat(e.did)),
            "number" == typeof e.started && (t.started = e.started),
            t.ignoreDuration)
                t.duration = void 0;
            else if ("number" == typeof e.duration)
                t.duration = e.duration;
            else {
                let e = t.timestamp - t.started;
                t.duration = e >= 0 ? e : 0
            }
            e.release && (t.release = e.release),
            e.environment && (t.environment = e.environment),
            !t.ipAddress && e.ipAddress && (t.ipAddress = e.ipAddress),
            !t.userAgent && e.userAgent && (t.userAgent = e.userAgent),
            "number" == typeof e.errors && (t.errors = e.errors),
            e.status && (t.status = e.status)
        }
        function l(t, e) {
            let n = {};
            e ? n = {
                status: e
            } : "ok" === t.status && (n = {
                status: "exited"
            }),
            s(t, n)
        }
    },
    2913: function(t, e, n) {
        "use strict";
        n.d(e, {
            R: function() {
                return h
            }
        });
        var r = n(8002)
          , i = n(3834)
          , a = n(7884)
          , o = n(5086)
          , s = n(21)
          , l = n(679)
          , u = n(8179)
          , c = n(9839);
        function h(t, e, n, h) {
            let {normalizeDepth: f=3, normalizeMaxBreadth: p=1e3} = t
              , m = {
                ...e,
                event_id: e.event_id || n.event_id || (0,
                r.DM)(),
                timestamp: e.timestamp || (0,
                i.yW)()
            }
              , y = n.integrations || t.integrations.map(t => t.name);
            (function(t, e) {
                let {environment: n, release: r, dist: i, maxValueLength: a=250} = e;
                "environment"in t || (t.environment = "environment"in e ? n : u.J),
                void 0 === t.release && void 0 !== r && (t.release = r),
                void 0 === t.dist && void 0 !== i && (t.dist = i),
                t.message && (t.message = (0,
                o.$G)(t.message, a));
                let s = t.exception && t.exception.values && t.exception.values[0];
                s && s.value && (s.value = (0,
                o.$G)(s.value, a));
                let l = t.request;
                l && l.url && (l.url = (0,
                o.$G)(l.url, a))
            }
            )(m, t),
            y.length > 0 && (m.sdk = m.sdk || {},
            m.sdk.integrations = [...m.sdk.integrations || [], ...y]),
            void 0 === e.type && function(t, e) {
                let n;
                let r = s.n2._sentryDebugIds;
                if (!r)
                    return;
                let i = d.get(e);
                i ? n = i : (n = new Map,
                d.set(e, n));
                let a = Object.keys(r).reduce( (t, i) => {
                    let a;
                    let o = n.get(i);
                    o ? a = o : (a = e(i),
                    n.set(i, a));
                    for (let e = a.length - 1; e >= 0; e--) {
                        let n = a[e];
                        if (n.filename) {
                            t[n.filename] = r[i];
                            break
                        }
                    }
                    return t
                }
                , {});
                try {
                    t.exception.values.forEach(t => {
                        t.stacktrace.frames.forEach(t => {
                            t.filename && (t.debug_id = a[t.filename])
                        }
                        )
                    }
                    )
                } catch (t) {}
            }(m, t.stackParser);
            let g = h;
            n.captureContext && (g = c.s.clone(g).update(n.captureContext));
            let v = (0,
            a.WD)(m);
            if (g) {
                if (g.getAttachments) {
                    let t = [...n.attachments || [], ...g.getAttachments()];
                    t.length && (n.attachments = t)
                }
                v = g.applyToEvent(m, n)
            }
            return v.then(t => (t && function(t) {
                let e = {};
                try {
                    t.exception.values.forEach(t => {
                        t.stacktrace.frames.forEach(t => {
                            t.debug_id && (t.abs_path ? e[t.abs_path] = t.debug_id : t.filename && (e[t.filename] = t.debug_id),
                            delete t.debug_id)
                        }
                        )
                    }
                    )
                } catch (t) {}
                if (0 === Object.keys(e).length)
                    return;
                t.debug_meta = t.debug_meta || {},
                t.debug_meta.images = t.debug_meta.images || [];
                let n = t.debug_meta.images;
                Object.keys(e).forEach(t => {
                    n.push({
                        type: "sourcemap",
                        code_file: t,
                        debug_id: e[t]
                    })
                }
                )
            }(t),
            "number" == typeof f && f > 0) ? function(t, e, n) {
                if (!t)
                    return null;
                let r = {
                    ...t,
                    ...t.breadcrumbs && {
                        breadcrumbs: t.breadcrumbs.map(t => ({
                            ...t,
                            ...t.data && {
                                data: (0,
                                l.Fv)(t.data, e, n)
                            }
                        }))
                    },
                    ...t.user && {
                        user: (0,
                        l.Fv)(t.user, e, n)
                    },
                    ...t.contexts && {
                        contexts: (0,
                        l.Fv)(t.contexts, e, n)
                    },
                    ...t.extra && {
                        extra: (0,
                        l.Fv)(t.extra, e, n)
                    }
                };
                return t.contexts && t.contexts.trace && r.contexts && (r.contexts.trace = t.contexts.trace,
                t.contexts.trace.data && (r.contexts.trace.data = (0,
                l.Fv)(t.contexts.trace.data, e, n))),
                t.spans && (r.spans = t.spans.map(t => (t.data && (t.data = (0,
                l.Fv)(t.data, e, n)),
                t))),
                r
            }(t, f, p) : t)
        }
        let d = new WeakMap
    },
    1406: function(t, e, n) {
        "use strict";
        let r, i, a, o, s, l;
        n.d(e, {
            n_: function() {
                return K.n_
            },
            Tb: function() {
                return K.Tb
            },
            uT: function() {
                return K.uT
            },
            S1: function() {
                return eX
            },
            av: function() {
                return K.av
            }
        });
        var u = {};
        n.r(u),
        n.d(u, {
            FunctionToString: function() {
                return x
            },
            InboundFilters: function() {
                return w
            }
        });
        var c = {};
        n.r(c),
        n.d(c, {
            Breadcrumbs: function() {
                return tl
            },
            Dedupe: function() {
                return tR
            },
            GlobalHandlers: function() {
                return tp
            },
            HttpContext: function() {
                return tA
            },
            LinkedErrors: function() {
                return tC
            },
            TryCatch: function() {
                return tw
            }
        });
        var h = n(3859);
        function d(t) {
            if ("boolean" == typeof __SENTRY_TRACING__ && !__SENTRY_TRACING__)
                return !1;
            let e = (0,
            h.Gd)().getClient()
              , n = t || e && e.getOptions();
            return !!n && (n.enableTracing || "tracesSampleRate"in n || "tracesSampler"in n)
        }
        let f = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^/]+?|)(\.[^./]*|))(?:[/]*)$/;
        function p() {
            for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            let r = ""
              , i = !1;
            for (let t = e.length - 1; t >= -1 && !i; t--) {
                let n = t >= 0 ? e[t] : "/";
                n && (r = "".concat(n, "/").concat(r),
                i = "/" === n.charAt(0))
            }
            return r = (function(t, e) {
                let n = 0;
                for (let e = t.length - 1; e >= 0; e--) {
                    let r = t[e];
                    "." === r ? t.splice(e, 1) : ".." === r ? (t.splice(e, 1),
                    n++) : n && (t.splice(e, 1),
                    n--)
                }
                if (e)
                    for (; n--; n)
                        t.unshift("..");
                return t
            }
            )(r.split("/").filter(t => !!t), !i).join("/"),
            (i ? "/" : "") + r || "."
        }
        function m(t) {
            let e = 0;
            for (; e < t.length && "" === t[e]; e++)
                ;
            let n = t.length - 1;
            for (; n >= 0 && "" === t[n]; n--)
                ;
            return e > n ? [] : t.slice(e, n - e + 1)
        }
        class y {
            static __initStatic() {
                this.id = "RewriteFrames"
            }
            setupOnce(t, e) {
                t(t => {
                    let n = e().getIntegration(y);
                    return n ? n.process(t) : t
                }
                )
            }
            process(t) {
                let e = t;
                return t.exception && Array.isArray(t.exception.values) && (e = this._processExceptionsEvent(e)),
                e
            }
            __init() {
                this._iteratee = t => {
                    if (!t.filename)
                        return t;
                    let e = /^[a-zA-Z]:\\/.test(t.filename) || t.filename.includes("\\") && !t.filename.includes("/")
                      , n = /^\//.test(t.filename);
                    if (e || n) {
                        var r;
                        let n;
                        let i = e ? t.filename.replace(/^[a-zA-Z]:/, "").replace(/\\/g, "/") : t.filename
                          , a = this._root ? function(t, e) {
                            t = p(t).slice(1),
                            e = p(e).slice(1);
                            let n = m(t.split("/"))
                              , r = m(e.split("/"))
                              , i = Math.min(n.length, r.length)
                              , a = i;
                            for (let t = 0; t < i; t++)
                                if (n[t] !== r[t]) {
                                    a = t;
                                    break
                                }
                            let o = [];
                            for (let t = a; t < n.length; t++)
                                o.push("..");
                            return (o = o.concat(r.slice(a))).join("/")
                        }(this._root, i) : (n = function(t) {
                            let e = f.exec(t);
                            return e ? e.slice(1) : []
                        }(i)[2],
                        r && n.slice(-1 * r.length) === r && (n = n.slice(0, n.length - r.length)),
                        n);
                        t.filename = "".concat(this._prefix).concat(a)
                    }
                    return t
                }
            }
            _processExceptionsEvent(t) {
                try {
                    return {
                        ...t,
                        exception: {
                            ...t.exception,
                            values: t.exception.values.map(t => ({
                                ...t,
                                ...t.stacktrace && {
                                    stacktrace: this._processStacktrace(t.stacktrace)
                                }
                            }))
                        }
                    }
                } catch (e) {
                    return t
                }
            }
            _processStacktrace(t) {
                return {
                    ...t,
                    frames: t && t.frames && t.frames.map(t => this._iteratee(t))
                }
            }
            constructor(t={}) {
                y.prototype.__init.call(this),
                this.name = y.id,
                t.root && (this._root = t.root),
                this._prefix = t.prefix || "app:///",
                t.iteratee && (this._iteratee = t.iteratee)
            }
        }
        y.__initStatic();
        let g = "7.61.1";
        var v = n(5086);
        let _ = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/]
          , b = [/^.*healthcheck.*$/, /^.*healthy.*$/, /^.*live.*$/, /^.*ready.*$/, /^.*heartbeat.*$/, /^.*\/health$/, /^.*\/healthz$/];
        class w {
            static __initStatic() {
                this.id = "InboundFilters"
            }
            setupOnce(t, e) {
                let n = t => {
                    let n = e();
                    if (n) {
                        let e = n.getIntegration(w);
                        if (e) {
                            var r;
                            let i = n.getClient()
                              , a = i ? i.getOptions() : {}
                              , o = function() {
                                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                                  , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                                return {
                                    allowUrls: [...t.allowUrls || [], ...e.allowUrls || []],
                                    denyUrls: [...t.denyUrls || [], ...e.denyUrls || []],
                                    ignoreErrors: [...t.ignoreErrors || [], ...e.ignoreErrors || [], ...t.disableErrorDefaults ? [] : _],
                                    ignoreTransactions: [...t.ignoreTransactions || [], ...e.ignoreTransactions || [], ...t.disableTransactionDefaults ? [] : b],
                                    ignoreInternal: void 0 === t.ignoreInternal || t.ignoreInternal
                                }
                            }(e._options, a);
                            return o.ignoreInternal && function(t) {
                                try {
                                    return "SentryError" === t.exception.values[0].type
                                } catch (t) {}
                                return !1
                            }(t) || (r = o.ignoreErrors,
                            !t.type && r && r.length && (function(t) {
                                if (t.message)
                                    return [t.message];
                                if (t.exception) {
                                    let {values: e} = t.exception;
                                    try {
                                        let {type: t="", value: n=""} = e && e[e.length - 1] || {};
                                        return ["".concat(n), "".concat(t, ": ").concat(n)]
                                    } catch (t) {}
                                }
                                return []
                            }
                            )(t).some(t => (0,
                            v.U0)(t, r))) || function(t, e) {
                                if ("transaction" !== t.type || !e || !e.length)
                                    return !1;
                                let n = t.transaction;
                                return !!n && (0,
                                v.U0)(n, e)
                            }(t, o.ignoreTransactions) || function(t, e) {
                                if (!e || !e.length)
                                    return !1;
                                let n = S(t);
                                return !!n && (0,
                                v.U0)(n, e)
                            }(t, o.denyUrls) || !function(t, e) {
                                if (!e || !e.length)
                                    return !0;
                                let n = S(t);
                                return !n || (0,
                                v.U0)(n, e)
                            }(t, o.allowUrls) ? null : t
                        }
                    }
                    return t
                }
                ;
                n.id = this.name,
                t(n)
            }
            constructor(t={}) {
                this.name = w.id,
                this._options = t
            }
        }
        function S(t) {
            try {
                let e;
                try {
                    e = t.exception.values[0].stacktrace.frames
                } catch (t) {}
                return e ? function() {
                    let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    for (let e = t.length - 1; e >= 0; e--) {
                        let n = t[e];
                        if (n && "<anonymous>" !== n.filename && "[native code]" !== n.filename)
                            return n.filename || null
                    }
                    return null
                }(e) : null
            } catch (t) {
                return null
            }
        }
        w.__initStatic();
        var k = n(738);
        class x {
            static __initStatic() {
                this.id = "FunctionToString"
            }
            setupOnce() {
                r = Function.prototype.toString;
                try {
                    Function.prototype.toString = function() {
                        for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)
                            e[n] = arguments[n];
                        let i = (0,
                        k.HK)(this) || this;
                        return r.apply(i, e)
                    }
                } catch (t) {}
            }
            constructor() {
                this.name = x.id
            }
        }
        x.__initStatic();
        var E = n(8002)
          , T = n(9839);
        let O = [];
        function C(t, e) {
            e[t.name] = t,
            -1 === O.indexOf(t.name) && (t.setupOnce(T.c, h.Gd),
            O.push(t.name))
        }
        var A = n(9598)
          , R = n(5961)
          , D = n(5677)
          , I = n(2135)
          , P = n(7884)
          , M = n(697);
        class N extends Error {
            constructor(t, e="warn") {
                super(t),
                this.message = t,
                this.name = new.target.prototype.constructor.name,
                Object.setPrototypeOf(this, new.target.prototype),
                this.logLevel = e
            }
        }
        var L = n(9419)
          , j = n(1261)
          , F = n(8179);
        function V(t, e, n) {
            let r = e.getOptions()
              , {publicKey: i} = e.getDsn() || {}
              , {segment: a} = n && n.getUser() || {}
              , o = (0,
            k.Jr)({
                environment: r.environment || F.J,
                release: r.release,
                user_segment: a,
                public_key: i,
                trace_id: t
            });
            return e.emit && e.emit("createDsc", o),
            o
        }
        var z = n(2913);
        class q {
            captureException(t, e, n) {
                if ((0,
                E.YO)(t))
                    return;
                let r = e && e.event_id;
                return this._process(this.eventFromException(t, e).then(t => this._captureEvent(t, e, n)).then(t => {
                    r = t
                }
                )),
                r
            }
            captureMessage(t, e, n, r) {
                let i = n && n.event_id
                  , a = (0,
                I.pt)(t) ? this.eventFromMessage(String(t), e, n) : this.eventFromException(t, n);
                return this._process(a.then(t => this._captureEvent(t, n, r)).then(t => {
                    i = t
                }
                )),
                i
            }
            captureEvent(t, e, n) {
                if (e && e.originalException && (0,
                E.YO)(e.originalException))
                    return;
                let r = e && e.event_id;
                return this._process(this._captureEvent(t, e, n).then(t => {
                    r = t
                }
                )),
                r
            }
            captureSession(t) {
                this._isEnabled() && ("string" != typeof t.release || (this.sendSession(t),
                (0,
                j.CT)(t, {
                    init: !1
                })))
            }
            getDsn() {
                return this._dsn
            }
            getOptions() {
                return this._options
            }
            getSdkMetadata() {
                return this._options._metadata
            }
            getTransport() {
                return this._transport
            }
            flush(t) {
                let e = this._transport;
                return e ? this._isClientDoneProcessing(t).then(n => e.flush(t).then(t => n && t)) : (0,
                P.WD)(!0)
            }
            close(t) {
                return this.flush(t).then(t => (this.getOptions().enabled = !1,
                t))
            }
            setupIntegrations() {
                this._isEnabled() && !this._integrationsInitialized && (this._integrations = function(t) {
                    let e = {};
                    return t.forEach(t => {
                        t && C(t, e)
                    }
                    ),
                    e
                }(this._options.integrations),
                this._integrationsInitialized = !0)
            }
            getIntegrationById(t) {
                return this._integrations[t]
            }
            getIntegration(t) {
                try {
                    return this._integrations[t.id] || null
                } catch (t) {
                    return null
                }
            }
            addIntegration(t) {
                C(t, this._integrations)
            }
            sendEvent(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (this._dsn) {
                    let n = function(t, e, n, r) {
                        var i;
                        let a = (0,
                        M.HY)(n)
                          , o = t.type && "replay_event" !== t.type ? t.type : "event";
                        (i = n && n.sdk) && (t.sdk = t.sdk || {},
                        t.sdk.name = t.sdk.name || i.name,
                        t.sdk.version = t.sdk.version || i.version,
                        t.sdk.integrations = [...t.sdk.integrations || [], ...i.integrations || []],
                        t.sdk.packages = [...t.sdk.packages || [], ...i.packages || []]);
                        let s = (0,
                        M.Cd)(t, a, r, e);
                        delete t.sdkProcessingMetadata;
                        let l = [{
                            type: o
                        }, t];
                        return (0,
                        M.Jd)(s, [l])
                    }(t, this._dsn, this._options._metadata, this._options.tunnel);
                    for (let t of e.attachments || [])
                        n = (0,
                        M.BO)(n, (0,
                        M.zQ)(t, this._options.transportOptions && this._options.transportOptions.textEncoder));
                    let r = this._sendEnvelope(n);
                    r && r.then(e => this.emit("afterSendEvent", t, e), null)
                }
            }
            sendSession(t) {
                if (this._dsn) {
                    let e = function(t, e, n, r) {
                        let i = (0,
                        M.HY)(n)
                          , a = {
                            sent_at: new Date().toISOString(),
                            ...i && {
                                sdk: i
                            },
                            ...!!r && {
                                dsn: (0,
                                L.RA)(e)
                            }
                        }
                          , o = "aggregates"in t ? [{
                            type: "sessions"
                        }, t] : [{
                            type: "session"
                        }, t.toJSON()];
                        return (0,
                        M.Jd)(a, [o])
                    }(t, this._dsn, this._options._metadata, this._options.tunnel);
                    this._sendEnvelope(e)
                }
            }
            recordDroppedEvent(t, e, n) {
                if (this._options.sendClientReports) {
                    let n = "".concat(t, ":").concat(e);
                    this._outcomes[n] = this._outcomes[n] + 1 || 1
                }
            }
            on(t, e) {
                this._hooks[t] || (this._hooks[t] = []),
                this._hooks[t].push(e)
            }
            emit(t) {
                for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                    n[r - 1] = arguments[r];
                this._hooks[t] && this._hooks[t].forEach(t => t(...n))
            }
            _updateSessionFromEvent(t, e) {
                let n = !1
                  , r = !1
                  , i = e.exception && e.exception.values;
                if (i)
                    for (let t of (r = !0,
                    i)) {
                        let e = t.mechanism;
                        if (e && !1 === e.handled) {
                            n = !0;
                            break
                        }
                    }
                let a = "ok" === t.status
                  , o = a && 0 === t.errors || a && n;
                o && ((0,
                j.CT)(t, {
                    ...n && {
                        status: "crashed"
                    },
                    errors: t.errors || Number(r || n)
                }),
                this.captureSession(t))
            }
            _isClientDoneProcessing(t) {
                return new P.cW(e => {
                    let n = 0
                      , r = setInterval( () => {
                        0 == this._numProcessing ? (clearInterval(r),
                        e(!0)) : (n += 1,
                        t && n >= t && (clearInterval(r),
                        e(!1)))
                    }
                    , 1)
                }
                )
            }
            _isEnabled() {
                return !1 !== this.getOptions().enabled && void 0 !== this._dsn
            }
            _prepareEvent(t, e, n) {
                let r = this.getOptions()
                  , i = Object.keys(this._integrations);
                return !e.integrations && i.length > 0 && (e.integrations = i),
                (0,
                z.R)(r, t, e, n).then(t => {
                    if (null === t)
                        return t;
                    let {propagationContext: e} = t.sdkProcessingMetadata || {}
                      , r = t.contexts && t.contexts.trace;
                    if (!r && e) {
                        let {traceId: r, spanId: i, parentSpanId: a, dsc: o} = e;
                        t.contexts = {
                            trace: {
                                trace_id: r,
                                span_id: i,
                                parent_span_id: a
                            },
                            ...t.contexts
                        };
                        let s = o || V(r, this, n);
                        t.sdkProcessingMetadata = {
                            dynamicSamplingContext: s,
                            ...t.sdkProcessingMetadata
                        }
                    }
                    return t
                }
                )
            }
            _captureEvent(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = arguments.length > 2 ? arguments[2] : void 0;
                return this._processEvent(t, e, n).then(t => t.event_id, t => {}
                )
            }
            _processEvent(t, e, n) {
                let r = this.getOptions()
                  , {sampleRate: i} = r;
                if (!this._isEnabled())
                    return (0,
                    P.$2)(new N("SDK not enabled, will not capture event.","log"));
                let a = B(t)
                  , o = U(t)
                  , s = t.type || "error"
                  , l = "before send for type `".concat(s, "`");
                if (o && "number" == typeof i && Math.random() > i)
                    return this.recordDroppedEvent("sample_rate", "error", t),
                    (0,
                    P.$2)(new N("Discarding event because it's not included in the random sample (sampling rate = ".concat(i, ")"),"log"));
                let u = "replay_event" === s ? "replay" : s;
                return this._prepareEvent(t, e, n).then(n => {
                    if (null === n)
                        throw this.recordDroppedEvent("event_processor", u, t),
                        new N("An event processor returned `null`, will not send event.","log");
                    let i = e.data && !0 === e.data.__sentry__;
                    if (i)
                        return n;
                    let a = function(t, e, n) {
                        let {beforeSend: r, beforeSendTransaction: i} = t;
                        return U(e) && r ? r(e, n) : B(e) && i ? i(e, n) : e
                    }(r, n, e);
                    return function(t, e) {
                        let n = "".concat(e, " must return `null` or a valid event.");
                        if ((0,
                        I.J8)(t))
                            return t.then(t => {
                                if (!(0,
                                I.PO)(t) && null !== t)
                                    throw new N(n);
                                return t
                            }
                            , t => {
                                throw new N("".concat(e, " rejected with ").concat(t))
                            }
                            );
                        if (!(0,
                        I.PO)(t) && null !== t)
                            throw new N(n);
                        return t
                    }(a, l)
                }
                ).then(r => {
                    if (null === r)
                        throw this.recordDroppedEvent("before_send", u, t),
                        new N("".concat(l, " returned `null`, will not send event."),"log");
                    let i = n && n.getSession();
                    !a && i && this._updateSessionFromEvent(i, r);
                    let o = r.transaction_info;
                    return a && o && r.transaction !== t.transaction && (r.transaction_info = {
                        ...o,
                        source: "custom"
                    }),
                    this.sendEvent(r, e),
                    r
                }
                ).then(null, t => {
                    if (t instanceof N)
                        throw t;
                    throw this.captureException(t, {
                        data: {
                            __sentry__: !0
                        },
                        originalException: t
                    }),
                    new N("Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: ".concat(t))
                }
                )
            }
            _process(t) {
                this._numProcessing++,
                t.then(t => (this._numProcessing--,
                t), t => (this._numProcessing--,
                t))
            }
            _sendEnvelope(t) {
                if (this._transport && this._dsn)
                    return this.emit("beforeEnvelope", t),
                    this._transport.send(t).then(null, t => {}
                    )
            }
            _clearOutcomes() {
                let t = this._outcomes;
                return this._outcomes = {},
                Object.keys(t).map(e => {
                    let[n,r] = e.split(":");
                    return {
                        reason: n,
                        category: r,
                        quantity: t[e]
                    }
                }
                )
            }
            constructor(t) {
                if (this._options = t,
                this._integrations = {},
                this._integrationsInitialized = !1,
                this._numProcessing = 0,
                this._outcomes = {},
                this._hooks = {},
                t.dsn && (this._dsn = (0,
                L.vK)(t.dsn)),
                this._dsn) {
                    let e = function(t) {
                        let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                          , n = "string" == typeof e ? e : e.tunnel
                          , r = "string" != typeof e && e._metadata ? e._metadata.sdk : void 0;
                        return n || "".concat("".concat(function(t) {
                            let e = t.protocol ? "".concat(t.protocol, ":") : ""
                              , n = t.port ? ":".concat(t.port) : "";
                            return "".concat(e, "//").concat(t.host).concat(n).concat(t.path ? "/".concat(t.path) : "", "/api/")
                        }(t)).concat(t.projectId, "/envelope/"), "?").concat((0,
                        k._j)({
                            sentry_key: t.publicKey,
                            sentry_version: "7",
                            ...r && {
                                sentry_client: "".concat(r.name, "/").concat(r.version)
                            }
                        }))
                    }(this._dsn, t);
                    this._transport = t.transport({
                        recordDroppedEvent: this.recordDroppedEvent.bind(this),
                        ...t.transportOptions,
                        url: e
                    })
                }
            }
        }
        function U(t) {
            return void 0 === t.type
        }
        function B(t) {
            return "transaction" === t.type
        }
        var G = n(3834)
          , W = n(3772)
          , H = n(679);
        function Q(t, e) {
            let n = Y(t, e)
              , r = {
                type: e && e.name,
                value: function(t) {
                    let e = t && t.message;
                    return e ? e.error && "string" == typeof e.error.message ? e.error.message : e : "No error message"
                }(e)
            };
            return n.length && (r.stacktrace = {
                frames: n
            }),
            void 0 === r.type && "" === r.value && (r.value = "Unrecoverable error caught"),
            r
        }
        function $(t, e) {
            return {
                exception: {
                    values: [Q(t, e)]
                }
            }
        }
        function Y(t, e) {
            let n = e.stacktrace || e.stack || ""
              , r = function(t) {
                if (t) {
                    if ("number" == typeof t.framesToPop)
                        return t.framesToPop;
                    if (Z.test(t.message))
                        return 1
                }
                return 0
            }(e);
            try {
                return t(n, r)
            } catch (t) {}
            return []
        }
        let Z = /Minified React error #\d+;/i;
        function J(t, e, n, r, i) {
            let a;
            if ((0,
            I.VW)(e) && e.error)
                return $(t, e.error);
            if ((0,
            I.TX)(e) || (0,
            I.fm)(e)) {
                if ("stack"in e)
                    a = $(t, e);
                else {
                    let i = e.name || ((0,
                    I.TX)(e) ? "DOMError" : "DOMException")
                      , o = e.message ? "".concat(i, ": ").concat(e.message) : i;
                    a = X(t, o, n, r),
                    (0,
                    E.Db)(a, o)
                }
                return "code"in e && (a.tags = {
                    ...a.tags,
                    "DOMException.code": "".concat(e.code)
                }),
                a
            }
            return (0,
            I.VZ)(e) ? $(t, e) : (0,
            I.PO)(e) || (0,
            I.cO)(e) ? (a = function(t, e, n, r) {
                let i = (0,
                h.Gd)()
                  , a = i.getClient()
                  , o = a && a.getOptions().normalizeDepth
                  , s = {
                    exception: {
                        values: [{
                            type: (0,
                            I.cO)(e) ? e.constructor.name : r ? "UnhandledRejection" : "Error",
                            value: function(t, e) {
                                let {isUnhandledRejection: n} = e
                                  , r = (0,
                                k.zf)(t)
                                  , i = n ? "promise rejection" : "exception";
                                if ((0,
                                I.VW)(t))
                                    return "Event `ErrorEvent` captured as ".concat(i, " with message `").concat(t.message, "`");
                                if ((0,
                                I.cO)(t)) {
                                    let e = function(t) {
                                        try {
                                            let e = Object.getPrototypeOf(t);
                                            return e ? e.constructor.name : void 0
                                        } catch (t) {}
                                    }(t);
                                    return "Event `".concat(e, "` (type=").concat(t.type, ") captured as ").concat(i)
                                }
                                return "Object captured as ".concat(i, " with keys: ").concat(r)
                            }(e, {
                                isUnhandledRejection: r
                            })
                        }]
                    },
                    extra: {
                        __serialized__: (0,
                        H.Qy)(e, o)
                    }
                };
                if (n) {
                    let e = Y(t, n);
                    e.length && (s.exception.values[0].stacktrace = {
                        frames: e
                    })
                }
                return s
            }(t, e, n, i),
            (0,
            E.EG)(a, {
                synthetic: !0
            }),
            a) : (a = X(t, e, n, r),
            (0,
            E.Db)(a, "".concat(e), void 0),
            (0,
            E.EG)(a, {
                synthetic: !0
            }),
            a)
        }
        function X(t, e, n, r) {
            let i = {
                message: e
            };
            if (r && n) {
                let r = Y(t, n);
                r.length && (i.exception = {
                    values: [{
                        value: e,
                        stacktrace: {
                            frames: r
                        }
                    }]
                })
            }
            return i
        }
        var K = n(128)
          , tt = n(21);
        let te = tt.n2
          , tn = 0;
        function tr(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = arguments.length > 2 ? arguments[2] : void 0;
            if ("function" != typeof t)
                return t;
            try {
                let e = t.__sentry_wrapped__;
                if (e)
                    return e;
                if ((0,
                k.HK)(t))
                    return t
            } catch (e) {
                return t
            }
            let r = function() {
                let r = Array.prototype.slice.call(arguments);
                try {
                    n && "function" == typeof n && n.apply(this, arguments);
                    let i = r.map(t => tr(t, e));
                    return t.apply(this, i)
                } catch (t) {
                    throw tn++,
                    setTimeout( () => {
                        tn--
                    }
                    ),
                    (0,
                    K.$e)(n => {
                        n.addEventProcessor(t => (e.mechanism && ((0,
                        E.Db)(t, void 0, void 0),
                        (0,
                        E.EG)(t, e.mechanism)),
                        t.extra = {
                            ...t.extra,
                            arguments: r
                        },
                        t)),
                        (0,
                        K.Tb)(t)
                    }
                    ),
                    t
                }
            };
            try {
                for (let e in t)
                    Object.prototype.hasOwnProperty.call(t, e) && (r[e] = t[e])
            } catch (t) {}
            (0,
            k.$Q)(r, t),
            (0,
            k.xp)(t, "__sentry_wrapped__", r);
            try {
                let e = Object.getOwnPropertyDescriptor(r, "name");
                e.configurable && Object.defineProperty(r, "name", {
                    get: () => t.name
                })
            } catch (t) {}
            return r
        }
        var ti = n(6212);
        let ta = ["fatal", "error", "warning", "log", "info", "debug"];
        function to(t) {
            if (!t)
                return {};
            let e = t.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
            if (!e)
                return {};
            let n = e[6] || ""
              , r = e[8] || "";
            return {
                host: e[4],
                path: e[5],
                protocol: e[2],
                search: n,
                hash: r,
                relative: e[5] + n + r
            }
        }
        let ts = "Breadcrumbs";
        class tl {
            static __initStatic() {
                this.id = ts
            }
            setupOnce() {
                var t;
                this.options.console && (0,
                D.oq)("console", tu),
                this.options.dom && (0,
                D.oq)("dom", (t = this.options.dom,
                function(e) {
                    let n;
                    let r = "object" == typeof t ? t.serializeAttribute : void 0
                      , i = "object" == typeof t && "number" == typeof t.maxStringLength ? t.maxStringLength : void 0;
                    i && i > 1024 && (i = 1024),
                    "string" == typeof r && (r = [r]);
                    try {
                        let t = e.event;
                        n = t && t.target ? (0,
                        ti.Rt)(t.target, {
                            keyAttrs: r,
                            maxStringLength: i
                        }) : (0,
                        ti.Rt)(t, {
                            keyAttrs: r,
                            maxStringLength: i
                        })
                    } catch (t) {
                        n = "<unknown>"
                    }
                    0 !== n.length && (0,
                    h.Gd)().addBreadcrumb({
                        category: "ui.".concat(e.name),
                        message: n
                    }, {
                        event: e.event,
                        name: e.name,
                        global: e.global
                    })
                }
                )),
                this.options.xhr && (0,
                D.oq)("xhr", tc),
                this.options.fetch && (0,
                D.oq)("fetch", th),
                this.options.history && (0,
                D.oq)("history", td)
            }
            addSentryBreadcrumb(t) {
                this.options.sentry && (0,
                h.Gd)().addBreadcrumb({
                    category: "sentry.".concat("transaction" === t.type ? "transaction" : "event"),
                    event_id: t.event_id,
                    level: t.level,
                    message: (0,
                    E.jH)(t)
                }, {
                    event: t
                })
            }
            constructor(t) {
                this.name = tl.id,
                this.options = {
                    console: !0,
                    dom: !0,
                    fetch: !0,
                    history: !0,
                    sentry: !0,
                    xhr: !0,
                    ...t
                }
            }
        }
        function tu(t) {
            var e;
            for (let e = 0; e < t.args.length; e++)
                if ("ref=Ref<" === t.args[e]) {
                    t.args[e + 1] = "viewRef";
                    break
                }
            let n = {
                category: "console",
                data: {
                    arguments: t.args,
                    logger: "console"
                },
                level: "warn" === (e = t.level) ? "warning" : ta.includes(e) ? e : "log",
                message: (0,
                v.nK)(t.args, " ")
            };
            if ("assert" === t.level) {
                if (!1 !== t.args[0])
                    return;
                n.message = "Assertion failed: ".concat((0,
                v.nK)(t.args.slice(1), " ") || "console.assert"),
                n.data.arguments = t.args.slice(1)
            }
            (0,
            h.Gd)().addBreadcrumb(n, {
                input: t.args,
                level: t.level
            })
        }
        function tc(t) {
            let {startTimestamp: e, endTimestamp: n} = t
              , r = t.xhr[D.xU];
            if (!e || !n || !r)
                return;
            let {method: i, url: a, status_code: o, body: s} = r
              , l = {
                xhr: t.xhr,
                input: s,
                startTimestamp: e,
                endTimestamp: n
            };
            (0,
            h.Gd)().addBreadcrumb({
                category: "xhr",
                data: {
                    method: i,
                    url: a,
                    status_code: o
                },
                type: "http"
            }, l)
        }
        function th(t) {
            let {startTimestamp: e, endTimestamp: n} = t;
            if (!(!n || t.fetchData.url.match(/sentry_key/) && "POST" === t.fetchData.method)) {
                if (t.error) {
                    let r = t.fetchData
                      , i = {
                        data: t.error,
                        input: t.args,
                        startTimestamp: e,
                        endTimestamp: n
                    };
                    (0,
                    h.Gd)().addBreadcrumb({
                        category: "fetch",
                        data: r,
                        level: "error",
                        type: "http"
                    }, i)
                } else {
                    let r = {
                        ...t.fetchData,
                        status_code: t.response && t.response.status
                    }
                      , i = {
                        input: t.args,
                        response: t.response,
                        startTimestamp: e,
                        endTimestamp: n
                    };
                    (0,
                    h.Gd)().addBreadcrumb({
                        category: "fetch",
                        data: r,
                        type: "http"
                    }, i)
                }
            }
        }
        function td(t) {
            let e = t.from
              , n = t.to
              , r = to(te.location.href)
              , i = to(e)
              , a = to(n);
            i.path || (i = r),
            r.protocol === a.protocol && r.host === a.host && (n = a.relative),
            r.protocol === i.protocol && r.host === i.host && (e = i.relative),
            (0,
            h.Gd)().addBreadcrumb({
                category: "navigation",
                data: {
                    from: e,
                    to: n
                }
            })
        }
        tl.__initStatic();
        class tf extends q {
            eventFromException(t, e) {
                return function(t, e, n, r) {
                    let i = n && n.syntheticException || void 0
                      , a = J(t, e, i, r);
                    return (0,
                    E.EG)(a),
                    a.level = "error",
                    n && n.event_id && (a.event_id = n.event_id),
                    (0,
                    P.WD)(a)
                }(this._options.stackParser, t, e, this._options.attachStacktrace)
            }
            eventFromMessage(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "info"
                  , n = arguments.length > 2 ? arguments[2] : void 0;
                return function(t, e) {
                    let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "info"
                      , r = arguments.length > 3 ? arguments[3] : void 0
                      , i = arguments.length > 4 ? arguments[4] : void 0
                      , a = r && r.syntheticException || void 0
                      , o = X(t, e, a, i);
                    return o.level = n,
                    r && r.event_id && (o.event_id = r.event_id),
                    (0,
                    P.WD)(o)
                }(this._options.stackParser, t, e, n, this._options.attachStacktrace)
            }
            sendEvent(t, e) {
                let n = this.getIntegrationById(ts);
                n && n.addSentryBreadcrumb && n.addSentryBreadcrumb(t),
                super.sendEvent(t, e)
            }
            captureUserFeedback(t) {
                if (!this._isEnabled())
                    return;
                let e = function(t, e) {
                    let {metadata: n, tunnel: r, dsn: i} = e
                      , a = {
                        event_id: t.event_id,
                        sent_at: new Date().toISOString(),
                        ...n && n.sdk && {
                            sdk: {
                                name: n.sdk.name,
                                version: n.sdk.version
                            }
                        },
                        ...!!r && !!i && {
                            dsn: (0,
                            L.RA)(i)
                        }
                    }
                      , o = [{
                        type: "user_report"
                    }, t];
                    return (0,
                    M.Jd)(a, [o])
                }(t, {
                    metadata: this.getSdkMetadata(),
                    dsn: this.getDsn(),
                    tunnel: this.getOptions().tunnel
                });
                this._sendEnvelope(e)
            }
            _prepareEvent(t, e, n) {
                return t.platform = t.platform || "javascript",
                super._prepareEvent(t, e, n)
            }
            _flushOutcomes() {
                let t = this._clearOutcomes();
                if (0 === t.length || !this._dsn)
                    return;
                let e = function(t, e, n) {
                    let r = [{
                        type: "client_report"
                    }, {
                        timestamp: (0,
                        G.yW)(),
                        discarded_events: t
                    }];
                    return (0,
                    M.Jd)(e ? {
                        dsn: e
                    } : {}, [r])
                }(t, this._options.tunnel && (0,
                L.RA)(this._dsn));
                this._sendEnvelope(e)
            }
            constructor(t) {
                let e = te.SENTRY_SDK_SOURCE || (0,
                W.S)();
                t._metadata = t._metadata || {},
                t._metadata.sdk = t._metadata.sdk || {
                    name: "sentry.javascript.browser",
                    packages: [{
                        name: "".concat(e, ":@sentry/browser"),
                        version: g
                    }],
                    version: g
                },
                super(t),
                t.sendClientReports && te.document && te.document.addEventListener("visibilitychange", () => {
                    "hidden" === te.document.visibilityState && this._flushOutcomes()
                }
                )
            }
        }
        class tp {
            static __initStatic() {
                this.id = "GlobalHandlers"
            }
            setupOnce() {
                Error.stackTraceLimit = 50;
                let t = this._options;
                for (let e in t) {
                    let n = this._installFunc[e];
                    n && t[e] && (n(),
                    this._installFunc[e] = void 0)
                }
            }
            constructor(t) {
                this.name = tp.id,
                this._options = {
                    onerror: !0,
                    onunhandledrejection: !0,
                    ...t
                },
                this._installFunc = {
                    onerror: tm,
                    onunhandledrejection: ty
                }
            }
        }
        function tm() {
            (0,
            D.oq)("error", t => {
                let[e,n,r] = t_();
                if (!e.getIntegration(tp))
                    return;
                let {msg: i, url: a, line: o, column: s, error: l} = t;
                if (tn > 0 || l && l.__sentry_own_request__)
                    return;
                let u = void 0 === l && (0,
                I.HD)(i) ? function(t, e, n, r) {
                    let i = (0,
                    I.VW)(t) ? t.message : t
                      , a = "Error"
                      , o = i.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);
                    o && (a = o[1],
                    i = o[2]);
                    let s = {
                        exception: {
                            values: [{
                                type: a,
                                value: i
                            }]
                        }
                    };
                    return tg(s, e, n, r)
                }(i, a, o, s) : tg(J(n, l || i, void 0, r, !1), a, o, s);
                u.level = "error",
                tv(e, l, u, "onerror")
            }
            )
        }
        function ty() {
            (0,
            D.oq)("unhandledrejection", t => {
                var e;
                let[n,r,i] = t_();
                if (!n.getIntegration(tp))
                    return;
                let a = t;
                try {
                    "reason"in t ? a = t.reason : "detail"in t && "reason"in t.detail && (a = t.detail.reason)
                } catch (t) {}
                if (tn > 0 || a && a.__sentry_own_request__)
                    return !0;
                let o = (0,
                I.pt)(a) ? (e = a,
                {
                    exception: {
                        values: [{
                            type: "UnhandledRejection",
                            value: "Non-Error promise rejection captured with value: ".concat(String(e))
                        }]
                    }
                }) : J(r, a, void 0, i, !0);
                o.level = "error",
                tv(n, a, o, "onunhandledrejection")
            }
            )
        }
        function tg(t, e, n, r) {
            let i = t.exception = t.exception || {}
              , a = i.values = i.values || []
              , o = a[0] = a[0] || {}
              , s = o.stacktrace = o.stacktrace || {}
              , l = s.frames = s.frames || []
              , u = isNaN(parseInt(r, 10)) ? void 0 : r
              , c = isNaN(parseInt(n, 10)) ? void 0 : n
              , h = (0,
            I.HD)(e) && e.length > 0 ? e : (0,
            ti.l4)();
            return 0 === l.length && l.push({
                colno: u,
                filename: h,
                function: "?",
                in_app: !0,
                lineno: c
            }),
            t
        }
        function tv(t, e, n, r) {
            (0,
            E.EG)(n, {
                handled: !1,
                type: r
            }),
            t.captureEvent(n, {
                originalException: e
            })
        }
        function t_() {
            let t = (0,
            h.Gd)()
              , e = t.getClient()
              , n = e && e.getOptions() || {
                stackParser: () => [],
                attachStacktrace: !1
            };
            return [t, n.stackParser, n.attachStacktrace]
        }
        tp.__initStatic();
        let tb = ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"];
        class tw {
            static __initStatic() {
                this.id = "TryCatch"
            }
            setupOnce() {
                this._options.setTimeout && (0,
                k.hl)(te, "setTimeout", tS),
                this._options.setInterval && (0,
                k.hl)(te, "setInterval", tS),
                this._options.requestAnimationFrame && (0,
                k.hl)(te, "requestAnimationFrame", tk),
                this._options.XMLHttpRequest && "XMLHttpRequest"in te && (0,
                k.hl)(XMLHttpRequest.prototype, "send", tx);
                let t = this._options.eventTarget;
                if (t) {
                    let e = Array.isArray(t) ? t : tb;
                    e.forEach(tE)
                }
            }
            constructor(t) {
                this.name = tw.id,
                this._options = {
                    XMLHttpRequest: !0,
                    eventTarget: !0,
                    requestAnimationFrame: !0,
                    setInterval: !0,
                    setTimeout: !0,
                    ...t
                }
            }
        }
        function tS(t) {
            return function() {
                for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                    n[r] = arguments[r];
                let i = n[0];
                return n[0] = tr(i, {
                    mechanism: {
                        data: {
                            function: (0,
                            A.$P)(t)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                }),
                t.apply(this, n)
            }
        }
        function tk(t) {
            return function(e) {
                return t.apply(this, [tr(e, {
                    mechanism: {
                        data: {
                            function: "requestAnimationFrame",
                            handler: (0,
                            A.$P)(t)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                })])
            }
        }
        function tx(t) {
            return function() {
                for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                    n[r] = arguments[r];
                let i = this;
                return ["onload", "onerror", "onprogress", "onreadystatechange"].forEach(t => {
                    t in i && "function" == typeof i[t] && (0,
                    k.hl)(i, t, function(e) {
                        let n = {
                            mechanism: {
                                data: {
                                    function: t,
                                    handler: (0,
                                    A.$P)(e)
                                },
                                handled: !0,
                                type: "instrument"
                            }
                        }
                          , r = (0,
                        k.HK)(e);
                        return r && (n.mechanism.data.handler = (0,
                        A.$P)(r)),
                        tr(e, n)
                    })
                }
                ),
                t.apply(this, n)
            }
        }
        function tE(t) {
            let e = te[t] && te[t].prototype;
            e && e.hasOwnProperty && e.hasOwnProperty("addEventListener") && ((0,
            k.hl)(e, "addEventListener", function(e) {
                return function(n, r, i) {
                    try {
                        "function" == typeof r.handleEvent && (r.handleEvent = tr(r.handleEvent, {
                            mechanism: {
                                data: {
                                    function: "handleEvent",
                                    handler: (0,
                                    A.$P)(r),
                                    target: t
                                },
                                handled: !0,
                                type: "instrument"
                            }
                        }))
                    } catch (t) {}
                    return e.apply(this, [n, tr(r, {
                        mechanism: {
                            data: {
                                function: "addEventListener",
                                handler: (0,
                                A.$P)(r),
                                target: t
                            },
                            handled: !0,
                            type: "instrument"
                        }
                    }), i])
                }
            }),
            (0,
            k.hl)(e, "removeEventListener", function(t) {
                return function(e, n, r) {
                    try {
                        let i = n && n.__sentry_wrapped__;
                        i && t.call(this, e, i, r)
                    } catch (t) {}
                    return t.call(this, e, n, r)
                }
            }))
        }
        function tT(t, e) {
            t.mechanism = t.mechanism || {
                type: "generic",
                handled: !0
            },
            t.mechanism = {
                ...t.mechanism,
                is_exception_group: !0,
                exception_id: e
            }
        }
        function tO(t, e, n, r) {
            t.mechanism = t.mechanism || {
                type: "generic",
                handled: !0
            },
            t.mechanism = {
                ...t.mechanism,
                type: "chained",
                source: e,
                exception_id: n,
                parent_id: r
            }
        }
        tw.__initStatic();
        class tC {
            static __initStatic() {
                this.id = "LinkedErrors"
            }
            setupOnce(t, e) {
                t( (t, n) => {
                    let r = e()
                      , i = r.getClient()
                      , a = r.getIntegration(tC);
                    if (!i || !a)
                        return t;
                    let o = i.getOptions();
                    return !function(t, e) {
                        let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 250
                          , r = arguments.length > 3 ? arguments[3] : void 0
                          , i = arguments.length > 4 ? arguments[4] : void 0
                          , a = arguments.length > 5 ? arguments[5] : void 0
                          , o = arguments.length > 6 ? arguments[6] : void 0;
                        if (!a.exception || !a.exception.values || !o || !(0,
                        I.V9)(o.originalException, Error))
                            return;
                        let s = a.exception.values.length > 0 ? a.exception.values[a.exception.values.length - 1] : void 0;
                        s && (a.exception.values = (function t(e, n, r, i, a, o, s, l) {
                            if (o.length >= r + 1)
                                return o;
                            let u = [...o];
                            if ((0,
                            I.V9)(i[a], Error)) {
                                tT(s, l);
                                let o = e(n, i[a])
                                  , c = u.length;
                                tO(o, a, c, l),
                                u = t(e, n, r, i[a], a, [o, ...u], o, c)
                            }
                            return Array.isArray(i.errors) && i.errors.forEach( (i, o) => {
                                if ((0,
                                I.V9)(i, Error)) {
                                    tT(s, l);
                                    let c = e(n, i)
                                      , h = u.length;
                                    tO(c, "errors[".concat(o, "]"), h, l),
                                    u = t(e, n, r, i, a, [c, ...u], c, h)
                                }
                            }
                            ),
                            u
                        }
                        )(t, e, i, o.originalException, r, a.exception.values, s, 0).map(t => (t.value && (t.value = (0,
                        v.$G)(t.value, n)),
                        t)))
                    }(Q, o.stackParser, o.maxValueLength, a._key, a._limit, t, n),
                    t
                }
                )
            }
            constructor(t={}) {
                this.name = tC.id,
                this._key = t.key || "cause",
                this._limit = t.limit || 5
            }
        }
        tC.__initStatic();
        class tA {
            static __initStatic() {
                this.id = "HttpContext"
            }
            setupOnce() {
                (0,
                T.c)(t => {
                    if ((0,
                    h.Gd)().getIntegration(tA)) {
                        if (!te.navigator && !te.location && !te.document)
                            return t;
                        let e = t.request && t.request.url || te.location && te.location.href
                          , {referrer: n} = te.document || {}
                          , {userAgent: r} = te.navigator || {}
                          , i = {
                            ...t.request && t.request.headers,
                            ...n && {
                                Referer: n
                            },
                            ...r && {
                                "User-Agent": r
                            }
                        }
                          , a = {
                            ...t.request,
                            ...e && {
                                url: e
                            },
                            headers: i
                        };
                        return {
                            ...t,
                            request: a
                        }
                    }
                    return t
                }
                )
            }
            constructor() {
                this.name = tA.id
            }
        }
        tA.__initStatic();
        class tR {
            static __initStatic() {
                this.id = "Dedupe"
            }
            setupOnce(t, e) {
                let n = t => {
                    if (t.type)
                        return t;
                    let n = e().getIntegration(tR);
                    if (n) {
                        try {
                            var r;
                            if ((r = n._previousEvent) && (function(t, e) {
                                let n = t.message
                                  , r = e.message;
                                return !!((n || r) && (!n || r) && (n || !r) && n === r && tI(t, e) && tD(t, e))
                            }(t, r) || function(t, e) {
                                let n = tP(e)
                                  , r = tP(t);
                                return !!(n && r && n.type === r.type && n.value === r.value && tI(t, e) && tD(t, e))
                            }(t, r)))
                                return null
                        } catch (t) {}
                        return n._previousEvent = t
                    }
                    return t
                }
                ;
                n.id = this.name,
                t(n)
            }
            constructor() {
                this.name = tR.id
            }
        }
        function tD(t, e) {
            let n = tM(t)
              , r = tM(e);
            if (!n && !r)
                return !0;
            if (n && !r || !n && r || r.length !== n.length)
                return !1;
            for (let t = 0; t < r.length; t++) {
                let e = r[t]
                  , i = n[t];
                if (e.filename !== i.filename || e.lineno !== i.lineno || e.colno !== i.colno || e.function !== i.function)
                    return !1
            }
            return !0
        }
        function tI(t, e) {
            let n = t.fingerprint
              , r = e.fingerprint;
            if (!n && !r)
                return !0;
            if (n && !r || !n && r)
                return !1;
            try {
                return !(n.join("") !== r.join(""))
            } catch (t) {
                return !1
            }
        }
        function tP(t) {
            return t.exception && t.exception.values && t.exception.values[0]
        }
        function tM(t) {
            let e = t.exception;
            if (e)
                try {
                    return e.values[0].stacktrace.frames
                } catch (t) {}
        }
        function tN(t, e, n, r) {
            let i = {
                filename: t,
                function: e,
                in_app: !0
            };
            return void 0 !== n && (i.lineno = n),
            void 0 !== r && (i.colno = r),
            i
        }
        tR.__initStatic();
        let tL = /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i
          , tj = /\((\S*)(?::(\d+))(?::(\d+))\)/
          , tF = [30, t => {
            let e = tL.exec(t);
            if (e) {
                let t = e[2] && 0 === e[2].indexOf("eval");
                if (t) {
                    let t = tj.exec(e[2]);
                    t && (e[2] = t[1],
                    e[3] = t[2],
                    e[4] = t[3])
                }
                let[n,r] = tW(e[1] || "?", e[2]);
                return tN(r, n, e[3] ? +e[3] : void 0, e[4] ? +e[4] : void 0)
            }
        }
        ]
          , tV = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i
          , tz = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i
          , tq = [50, t => {
            let e = tV.exec(t);
            if (e) {
                let t = e[3] && e[3].indexOf(" > eval") > -1;
                if (t) {
                    let t = tz.exec(e[3]);
                    t && (e[1] = e[1] || "eval",
                    e[3] = t[1],
                    e[4] = t[2],
                    e[5] = "")
                }
                let n = e[3]
                  , r = e[1] || "?";
                return [r,n] = tW(r, n),
                tN(n, r, e[4] ? +e[4] : void 0, e[5] ? +e[5] : void 0)
            }
        }
        ]
          , tU = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i
          , tB = [40, t => {
            let e = tU.exec(t);
            return e ? tN(e[2], e[1] || "?", +e[3], e[4] ? +e[4] : void 0) : void 0
        }
        ]
          , tG = (0,
        A.pE)(...[tF, tq, tB])
          , tW = (t, e) => {
            let n = -1 !== t.indexOf("safari-extension")
              , r = -1 !== t.indexOf("safari-web-extension");
            return n || r ? [-1 !== t.indexOf("@") ? t.split("@")[0] : "?", n ? "safari-extension:".concat(e) : "safari-web-extension:".concat(e)] : [t, e]
        }
        ;
        function tH(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(t) {
                let e = [];
                function n(t) {
                    return e.splice(e.indexOf(t), 1)[0]
                }
                return {
                    $: e,
                    add: function(r) {
                        if (!(void 0 === t || e.length < t))
                            return (0,
                            P.$2)(new N("Not adding Promise because buffer limit was reached."));
                        let i = r();
                        return -1 === e.indexOf(i) && e.push(i),
                        i.then( () => n(i)).then(null, () => n(i).then(null, () => {}
                        )),
                        i
                    },
                    drain: function(t) {
                        return new P.cW( (n, r) => {
                            let i = e.length;
                            if (!i)
                                return n(!0);
                            let a = setTimeout( () => {
                                t && t > 0 && n(!1)
                            }
                            , t);
                            e.forEach(t => {
                                (0,
                                P.WD)(t).then( () => {
                                    --i || (clearTimeout(a),
                                    n(!0))
                                }
                                , r)
                            }
                            )
                        }
                        )
                    }
                }
            }(t.bufferSize || 30)
              , r = {};
            function i(i) {
                let a = [];
                if ((0,
                M.gv)(i, (e, n) => {
                    let i = (0,
                    M.mL)(n);
                    if (function(t, e) {
                        let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Date.now();
                        return (t[e] || t.all || 0) > n
                    }(r, i)) {
                        let r = tQ(e, n);
                        t.recordDroppedEvent("ratelimit_backoff", i, r)
                    } else
                        a.push(e)
                }
                ),
                0 === a.length)
                    return (0,
                    P.WD)();
                let o = (0,
                M.Jd)(i[0], a)
                  , s = e => {
                    (0,
                    M.gv)(o, (n, r) => {
                        let i = tQ(n, r);
                        t.recordDroppedEvent(e, (0,
                        M.mL)(r), i)
                    }
                    )
                }
                ;
                return n.add( () => e({
                    body: (0,
                    M.V$)(o, t.textEncoder)
                }).then(t => (void 0 !== t.statusCode && (t.statusCode < 200 || t.statusCode),
                r = function(t, e) {
                    let {statusCode: n, headers: r} = e
                      , i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Date.now()
                      , a = {
                        ...t
                    }
                      , o = r && r["x-sentry-rate-limits"]
                      , s = r && r["retry-after"];
                    if (o)
                        for (let t of o.trim().split(",")) {
                            let[e,n] = t.split(":", 2)
                              , r = parseInt(e, 10)
                              , o = (isNaN(r) ? 60 : r) * 1e3;
                            if (n)
                                for (let t of n.split(";"))
                                    a[t] = i + o;
                            else
                                a.all = i + o
                        }
                    else
                        s ? a.all = i + function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Date.now()
                              , n = parseInt("".concat(t), 10);
                            if (!isNaN(n))
                                return 1e3 * n;
                            let r = Date.parse("".concat(t));
                            return isNaN(r) ? 6e4 : r - e
                        }(s, i) : 429 === n && (a.all = i + 6e4);
                    return a
                }(r, t),
                t), t => {
                    throw s("network_error"),
                    t
                }
                )).then(t => t, t => {
                    if (t instanceof N)
                        return s("queue_overflow"),
                        (0,
                        P.WD)();
                    throw t
                }
                )
            }
            return i.__sentry__baseTransport__ = !0,
            {
                send: i,
                flush: t => n.drain(t)
            }
        }
        function tQ(t, e) {
            if ("event" === e || "transaction" === e)
                return Array.isArray(t) ? t[1] : void 0
        }
        function t$(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {
                if (o)
                    return o;
                if ((0,
                R.Du)(te.fetch))
                    return o = te.fetch.bind(te);
                let t = te.document
                  , e = te.fetch;
                if (t && "function" == typeof t.createElement)
                    try {
                        let n = t.createElement("iframe");
                        n.hidden = !0,
                        t.head.appendChild(n);
                        let r = n.contentWindow;
                        r && r.fetch && (e = r.fetch),
                        t.head.removeChild(n)
                    } catch (t) {}
                return o = e.bind(te)
            }()
              , n = 0
              , r = 0;
            return tH(t, function(i) {
                let a = i.body.length;
                n += a,
                r++;
                let s = {
                    body: i.body,
                    method: "POST",
                    referrerPolicy: "origin",
                    headers: t.headers,
                    keepalive: n <= 6e4 && r < 15,
                    ...t.fetchOptions
                };
                try {
                    return e(t.url, s).then(t => (n -= a,
                    r--,
                    {
                        statusCode: t.status,
                        headers: {
                            "x-sentry-rate-limits": t.headers.get("X-Sentry-Rate-Limits"),
                            "retry-after": t.headers.get("Retry-After")
                        }
                    }))
                } catch (t) {
                    return o = void 0,
                    n -= a,
                    r--,
                    (0,
                    P.$2)(t)
                }
            })
        }
        function tY(t) {
            return tH(t, function(e) {
                return new P.cW( (n, r) => {
                    let i = new XMLHttpRequest;
                    for (let e in i.onerror = r,
                    i.onreadystatechange = () => {
                        4 === i.readyState && n({
                            statusCode: i.status,
                            headers: {
                                "x-sentry-rate-limits": i.getResponseHeader("X-Sentry-Rate-Limits"),
                                "retry-after": i.getResponseHeader("Retry-After")
                            }
                        })
                    }
                    ,
                    i.open("POST", t.url),
                    t.headers)
                        Object.prototype.hasOwnProperty.call(t.headers, e) && i.setRequestHeader(e, t.headers[e]);
                    i.send(e.body)
                }
                )
            })
        }
        let tZ = [new w, new x, new tw, new tl, new tp, new tC, new tR, new tA];
        function tJ(t) {
            t.startSession({
                ignoreDuration: !0
            }),
            t.captureSession()
        }
        let tX = "baggage"
          , tK = "sentry-"
          , t0 = /^sentry-/;
        function t1(t) {
            if (!t)
                return;
            let e = Object.entries(t).reduce( (t, e) => {
                let[n,r] = e;
                return r && (t["".concat(tK).concat(n)] = r),
                t
            }
            , {});
            return function(t) {
                if (0 !== Object.keys(t).length)
                    return Object.entries(t).reduce( (t, e, n) => {
                        let[r,i] = e
                          , a = "".concat(encodeURIComponent(r), "=").concat(encodeURIComponent(i))
                          , o = 0 === n ? a : "".concat(t, ",").concat(a);
                        return o.length > 8192 ? t : o
                    }
                    , "")
            }(e)
        }
        function t2(t) {
            return t.split(",").map(t => t.split("=").map(t => decodeURIComponent(t.trim()))).reduce( (t, e) => {
                let[n,r] = e;
                return t[n] = r,
                t
            }
            , {})
        }
        let t5 = RegExp("^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$");
        function t3(t, e) {
            let n = function(t) {
                let e;
                if (!t)
                    return;
                let n = t.match(t5);
                if (n)
                    return "1" === n[3] ? e = !0 : "0" === n[3] && (e = !1),
                    {
                        traceId: n[1],
                        parentSampled: e,
                        parentSpanId: n[2]
                    }
            }(t)
              , r = function(t) {
                if (!(0,
                I.HD)(t) && !Array.isArray(t))
                    return;
                let e = {};
                if (Array.isArray(t))
                    e = t.reduce( (t, e) => {
                        let n = t2(e);
                        return {
                            ...t,
                            ...n
                        }
                    }
                    , {});
                else {
                    if (!t)
                        return;
                    e = t2(t)
                }
                let n = Object.entries(e).reduce( (t, e) => {
                    let[n,r] = e;
                    if (n.match(t0)) {
                        let e = n.slice(tK.length);
                        t[e] = r
                    }
                    return t
                }
                , {});
                return Object.keys(n).length > 0 ? n : void 0
            }(e)
              , {traceId: i, parentSpanId: a, parentSampled: o} = n || {}
              , s = {
                traceId: i || (0,
                E.DM)(),
                spanId: (0,
                E.DM)().substring(16),
                sampled: void 0 !== o && o
            };
            return a && (s.parentSpanId = a),
            r && (s.dsc = r),
            {
                traceparentData: n,
                dynamicSamplingContext: r,
                propagationContext: s
            }
        }
        function t6() {
            let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0,
            E.DM)()
              , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (0,
            E.DM)().substring(16)
              , n = arguments.length > 2 ? arguments[2] : void 0
              , r = "";
            return void 0 !== n && (r = n ? "-1" : "-0"),
            "".concat(t, "-").concat(e).concat(r)
        }
        class t4 {
            add(t) {
                this.spans.length > this._maxlen ? t.spanRecorder = void 0 : this.spans.push(t)
            }
            constructor(t=1e3) {
                this._maxlen = t,
                this.spans = []
            }
        }
        class t8 {
            startChild(t) {
                let e = new t8({
                    ...t,
                    parentSpanId: this.spanId,
                    sampled: this.sampled,
                    traceId: this.traceId
                });
                return e.spanRecorder = this.spanRecorder,
                e.spanRecorder && e.spanRecorder.add(e),
                e.transaction = this.transaction,
                e
            }
            setTag(t, e) {
                return this.tags = {
                    ...this.tags,
                    [t]: e
                },
                this
            }
            setData(t, e) {
                return this.data = {
                    ...this.data,
                    [t]: e
                },
                this
            }
            setStatus(t) {
                return this.status = t,
                this
            }
            setHttpStatus(t) {
                this.setTag("http.status_code", String(t)),
                this.setData("http.response.status_code", t);
                let e = function(t) {
                    if (t < 400 && t >= 100)
                        return "ok";
                    if (t >= 400 && t < 500)
                        switch (t) {
                        case 401:
                            return "unauthenticated";
                        case 403:
                            return "permission_denied";
                        case 404:
                            return "not_found";
                        case 409:
                            return "already_exists";
                        case 413:
                            return "failed_precondition";
                        case 429:
                            return "resource_exhausted";
                        default:
                            return "invalid_argument"
                        }
                    if (t >= 500 && t < 600)
                        switch (t) {
                        case 501:
                            return "unimplemented";
                        case 503:
                            return "unavailable";
                        case 504:
                            return "deadline_exceeded";
                        default:
                            return "internal_error"
                        }
                    return "unknown_error"
                }(t);
                return "unknown_error" !== e && this.setStatus(e),
                this
            }
            isSuccess() {
                return "ok" === this.status
            }
            finish(t) {
                this.endTimestamp = "number" == typeof t ? t : (0,
                G.ph)()
            }
            toTraceparent() {
                return t6(this.traceId, this.spanId, this.sampled)
            }
            toContext() {
                return (0,
                k.Jr)({
                    data: this.data,
                    description: this.description,
                    endTimestamp: this.endTimestamp,
                    op: this.op,
                    parentSpanId: this.parentSpanId,
                    sampled: this.sampled,
                    spanId: this.spanId,
                    startTimestamp: this.startTimestamp,
                    status: this.status,
                    tags: this.tags,
                    traceId: this.traceId
                })
            }
            updateWithContext(t) {
                return this.data = t.data || {},
                this.description = t.description,
                this.endTimestamp = t.endTimestamp,
                this.op = t.op,
                this.parentSpanId = t.parentSpanId,
                this.sampled = t.sampled,
                this.spanId = t.spanId || this.spanId,
                this.startTimestamp = t.startTimestamp || this.startTimestamp,
                this.status = t.status,
                this.tags = t.tags || {},
                this.traceId = t.traceId || this.traceId,
                this
            }
            getTraceContext() {
                return (0,
                k.Jr)({
                    data: Object.keys(this.data).length > 0 ? this.data : void 0,
                    description: this.description,
                    op: this.op,
                    parent_span_id: this.parentSpanId,
                    span_id: this.spanId,
                    status: this.status,
                    tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
                    trace_id: this.traceId
                })
            }
            toJSON() {
                return (0,
                k.Jr)({
                    data: Object.keys(this.data).length > 0 ? this.data : void 0,
                    description: this.description,
                    op: this.op,
                    parent_span_id: this.parentSpanId,
                    span_id: this.spanId,
                    start_timestamp: this.startTimestamp,
                    status: this.status,
                    tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
                    timestamp: this.endTimestamp,
                    trace_id: this.traceId
                })
            }
            constructor(t) {
                if (this.traceId = (0,
                E.DM)(),
                this.spanId = (0,
                E.DM)().substring(16),
                this.startTimestamp = (0,
                G.ph)(),
                this.tags = {},
                this.data = {},
                this.instrumenter = "sentry",
                !t)
                    return this;
                t.traceId && (this.traceId = t.traceId),
                t.spanId && (this.spanId = t.spanId),
                t.parentSpanId && (this.parentSpanId = t.parentSpanId),
                "sampled"in t && (this.sampled = t.sampled),
                t.op && (this.op = t.op),
                t.description && (this.description = t.description),
                t.data && (this.data = t.data),
                t.tags && (this.tags = t.tags),
                t.status && (this.status = t.status),
                t.startTimestamp && (this.startTimestamp = t.startTimestamp),
                t.endTimestamp && (this.endTimestamp = t.endTimestamp),
                t.instrumenter && (this.instrumenter = t.instrumenter)
            }
        }
        class t9 extends t8 {
            get name() {
                return this._name
            }
            set name(t) {
                this.setName(t)
            }
            setName(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "custom";
                this._name = t,
                this.metadata.source = e
            }
            initSpanRecorder() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1e3;
                this.spanRecorder || (this.spanRecorder = new t4(t)),
                this.spanRecorder.add(this)
            }
            setContext(t, e) {
                null === e ? delete this._contexts[t] : this._contexts[t] = e
            }
            setMeasurement(t, e) {
                let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                this._measurements[t] = {
                    value: e,
                    unit: n
                }
            }
            setMetadata(t) {
                this.metadata = {
                    ...this.metadata,
                    ...t
                }
            }
            finish(t) {
                if (void 0 !== this.endTimestamp)
                    return;
                this.name || (this.name = "<unlabeled transaction>"),
                super.finish(t);
                let e = this._hub.getClient();
                if (e && e.emit && e.emit("finishTransaction", this),
                !0 !== this.sampled) {
                    e && e.recordDroppedEvent("sample_rate", "transaction");
                    return
                }
                let n = this.spanRecorder ? this.spanRecorder.spans.filter(t => t !== this && t.endTimestamp) : [];
                this._trimEnd && n.length > 0 && (this.endTimestamp = n.reduce( (t, e) => t.endTimestamp && e.endTimestamp ? t.endTimestamp > e.endTimestamp ? t : e : t).endTimestamp);
                let r = this.metadata
                  , i = {
                    contexts: {
                        ...this._contexts,
                        trace: this.getTraceContext()
                    },
                    spans: n,
                    start_timestamp: this.startTimestamp,
                    tags: this.tags,
                    timestamp: this.endTimestamp,
                    transaction: this.name,
                    type: "transaction",
                    sdkProcessingMetadata: {
                        ...r,
                        dynamicSamplingContext: this.getDynamicSamplingContext()
                    },
                    ...r.source && {
                        transaction_info: {
                            source: r.source
                        }
                    }
                }
                  , a = Object.keys(this._measurements).length > 0;
                return a && (i.measurements = this._measurements),
                this._hub.captureEvent(i)
            }
            toContext() {
                let t = super.toContext();
                return (0,
                k.Jr)({
                    ...t,
                    name: this.name,
                    trimEnd: this._trimEnd
                })
            }
            updateWithContext(t) {
                return super.updateWithContext(t),
                this.name = t.name || "",
                this._trimEnd = t.trimEnd,
                this
            }
            getDynamicSamplingContext() {
                if (this._frozenDynamicSamplingContext)
                    return this._frozenDynamicSamplingContext;
                let t = this._hub || (0,
                h.Gd)()
                  , e = t.getClient();
                if (!e)
                    return {};
                let n = t.getScope()
                  , r = V(this.traceId, e, n)
                  , i = this.metadata.sampleRate;
                void 0 !== i && (r.sample_rate = "".concat(i));
                let a = this.metadata.source;
                return a && "url" !== a && (r.transaction = this.name),
                void 0 !== this.sampled && (r.sampled = String(this.sampled)),
                r
            }
            setHub(t) {
                this._hub = t
            }
            constructor(t, e) {
                super(t),
                this._measurements = {},
                this._contexts = {},
                this._hub = e || (0,
                h.Gd)(),
                this._name = t.name || "",
                this.metadata = {
                    source: "custom",
                    ...t.metadata,
                    spanMetadata: {}
                },
                this._trimEnd = t.trimEnd,
                this.transaction = this;
                let n = this.metadata.dynamicSamplingContext;
                n && (this._frozenDynamicSamplingContext = {
                    ...n
                })
            }
        }
        let t7 = {
            idleTimeout: 1e3,
            finalTimeout: 3e4,
            heartbeatInterval: 5e3
        };
        class et extends t4 {
            add(t) {
                t.spanId !== this.transactionSpanId && (t.finish = e => {
                    t.endTimestamp = "number" == typeof e ? e : (0,
                    G.ph)(),
                    this._popActivity(t.spanId)
                }
                ,
                void 0 === t.endTimestamp && this._pushActivity(t.spanId)),
                super.add(t)
            }
            constructor(t, e, n, r) {
                super(r),
                this._pushActivity = t,
                this._popActivity = e,
                this.transactionSpanId = n
            }
        }
        class ee extends t9 {
            finish() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : (0,
                G.ph)();
                if (this._finished = !0,
                this.activities = {},
                "ui.action.click" === this.op && this.setTag("finishReason", this._finishReason),
                this.spanRecorder) {
                    for (let e of this._beforeFinishCallbacks)
                        e(this, t);
                    this.spanRecorder.spans = this.spanRecorder.spans.filter(e => {
                        if (e.spanId === this.spanId)
                            return !0;
                        e.endTimestamp || (e.endTimestamp = t,
                        e.setStatus("cancelled"));
                        let n = e.startTimestamp < t
                          , r = (this._finalTimeout + this._idleTimeout) / 1e3
                          , i = e.endTimestamp - this.startTimestamp < r;
                        return n && i
                    }
                    )
                }
                if (this._onScope) {
                    let t = this._idleHub.getScope();
                    t.getTransaction() === this && t.setSpan(void 0)
                }
                return super.finish(t)
            }
            registerBeforeFinishCallback(t) {
                this._beforeFinishCallbacks.push(t)
            }
            initSpanRecorder(t) {
                this.spanRecorder || (this.spanRecorder = new et(t => {
                    this._finished || this._pushActivity(t)
                }
                ,t => {
                    this._finished || this._popActivity(t)
                }
                ,this.spanId,t),
                this._pingHeartbeat()),
                this.spanRecorder.add(this)
            }
            cancelIdleTimeout(t) {
                let {restartOnChildSpanChange: e} = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    restartOnChildSpanChange: !0
                };
                this._idleTimeoutCanceledPermanently = !1 === e,
                this._idleTimeoutID && (clearTimeout(this._idleTimeoutID),
                this._idleTimeoutID = void 0,
                0 === Object.keys(this.activities).length && this._idleTimeoutCanceledPermanently && (this._finishReason = "cancelled",
                this.finish(t)))
            }
            setFinishReason(t) {
                this._finishReason = t
            }
            _restartIdleTimeout(t) {
                this.cancelIdleTimeout(),
                this._idleTimeoutID = setTimeout( () => {
                    this._finished || 0 !== Object.keys(this.activities).length || (this._finishReason = "idleTimeout",
                    this.finish(t))
                }
                , this._idleTimeout)
            }
            _pushActivity(t) {
                this.cancelIdleTimeout(void 0, {
                    restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently
                }),
                this.activities[t] = !0
            }
            _popActivity(t) {
                if (this.activities[t] && delete this.activities[t],
                0 === Object.keys(this.activities).length) {
                    let t = (0,
                    G.ph)();
                    this._idleTimeoutCanceledPermanently ? (this._finishReason = "cancelled",
                    this.finish(t)) : this._restartIdleTimeout(t + this._idleTimeout / 1e3)
                }
            }
            _beat() {
                if (this._finished)
                    return;
                let t = Object.keys(this.activities).join("");
                t === this._prevHeartbeatString ? this._heartbeatCounter++ : this._heartbeatCounter = 1,
                this._prevHeartbeatString = t,
                this._heartbeatCounter >= 3 ? (this.setStatus("deadline_exceeded"),
                this._finishReason = "heartbeatFailed",
                this.finish()) : this._pingHeartbeat()
            }
            _pingHeartbeat() {
                setTimeout( () => {
                    this._beat()
                }
                , this._heartbeatInterval)
            }
            constructor(t, e, n=t7.idleTimeout, r=t7.finalTimeout, i=t7.heartbeatInterval, a=!1) {
                super(t, e),
                this._idleHub = e,
                this._idleTimeout = n,
                this._finalTimeout = r,
                this._heartbeatInterval = i,
                this._onScope = a,
                this.activities = {},
                this._heartbeatCounter = 0,
                this._finished = !1,
                this._idleTimeoutCanceledPermanently = !1,
                this._beforeFinishCallbacks = [],
                this._finishReason = "externalFinish",
                a && e.configureScope(t => t.setSpan(this)),
                this._restartIdleTimeout(),
                setTimeout( () => {
                    this._finished || (this.setStatus("deadline_exceeded"),
                    this._finishReason = "finalTimeout",
                    this.finish())
                }
                , this._finalTimeout)
            }
        }
        function en(t) {
            let e = t || (0,
            h.Gd)()
              , n = e.getScope();
            return n.getTransaction()
        }
        let er = !1;
        function ei() {
            let t = en();
            t && t.setStatus("internal_error")
        }
        function ea() {
            let t = this.getScope()
              , e = t.getSpan();
            return e ? {
                "sentry-trace": e.toTraceparent()
            } : {}
        }
        function eo(t, e, n) {
            var r;
            let i;
            return d(e) ? void 0 !== t.sampled ? (t.setMetadata({
                sampleRate: Number(t.sampled)
            }),
            t) : ("function" == typeof e.tracesSampler ? (i = e.tracesSampler(n),
            t.setMetadata({
                sampleRate: Number(i)
            })) : void 0 !== n.parentSampled ? i = n.parentSampled : void 0 !== e.tracesSampleRate ? (i = e.tracesSampleRate,
            t.setMetadata({
                sampleRate: Number(i)
            })) : (i = 1,
            t.setMetadata({
                sampleRate: i
            })),
            r = i,
            (0,
            I.i2)(r) || "number" != typeof r && "boolean" != typeof r || r < 0 || r > 1 || !i) ? (t.sampled = !1,
            t) : (t.sampled = Math.random() < i,
            t.sampled,
            t) : (t.sampled = !1,
            t)
        }
        function es(t, e) {
            let n = this.getClient()
              , r = n && n.getOptions() || {}
              , i = r.instrumenter || "sentry"
              , a = t.instrumenter || "sentry";
            i !== a && (t.sampled = !1);
            let o = new t9(t,this);
            return (o = eo(o, r, {
                parentSampled: t.parentSampled,
                transactionContext: t,
                ...e
            })).sampled && o.initSpanRecorder(r._experiments && r._experiments.maxSpans),
            n && n.emit && n.emit("startTransaction", o),
            o
        }
        function el(t, e, n, r, i, a, o) {
            let s = t.getClient()
              , l = s && s.getOptions() || {}
              , u = new ee(e,t,n,r,o,i);
            return (u = eo(u, l, {
                parentSampled: e.parentSampled,
                transactionContext: e,
                ...a
            })).sampled && u.initSpanRecorder(l._experiments && l._experiments.maxSpans),
            s && s.emit && s.emit("startTransaction", u),
            u
        }
        ei.tag = "sentry_tracingErrorCallback";
        let eu = tt.n2
          , ec = (t, e, n) => {
            let r, i;
            return a => {
                e.value >= 0 && (a || n) && ((i = e.value - (r || 0)) || void 0 === r) && (r = e.value,
                e.delta = i,
                t(e))
            }
        }
          , eh = () => "v3-".concat(Date.now(), "-").concat(Math.floor(Math.random() * (9e12 - 1)) + 1e12)
          , ed = () => {
            let t = eu.performance.timing
              , e = eu.performance.navigation.type
              , n = {
                entryType: "navigation",
                startTime: 0,
                type: 2 == e ? "back_forward" : 1 === e ? "reload" : "navigate"
            };
            for (let e in t)
                "navigationStart" !== e && "toJSON" !== e && (n[e] = Math.max(t[e] - t.navigationStart, 0));
            return n
        }
          , ef = () => eu.__WEB_VITALS_POLYFILL__ ? eu.performance && (performance.getEntriesByType && performance.getEntriesByType("navigation")[0] || ed()) : eu.performance && performance.getEntriesByType && performance.getEntriesByType("navigation")[0]
          , ep = () => {
            let t = ef();
            return t && t.activationStart || 0
        }
          , em = (t, e) => {
            let n = ef()
              , r = "navigate";
            return n && (r = eu.document.prerendering || ep() > 0 ? "prerender" : n.type.replace(/_/g, "-")),
            {
                name: t,
                value: void 0 === e ? -1 : e,
                rating: "good",
                delta: 0,
                entries: [],
                id: eh(),
                navigationType: r
            }
        }
          , ey = (t, e, n) => {
            try {
                if (PerformanceObserver.supportedEntryTypes.includes(t)) {
                    let r = new PerformanceObserver(t => {
                        e(t.getEntries())
                    }
                    );
                    return r.observe(Object.assign({
                        type: t,
                        buffered: !0
                    }, n || {})),
                    r
                }
            } catch (t) {}
        }
          , eg = (t, e) => {
            let n = r => {
                ("pagehide" === r.type || "hidden" === eu.document.visibilityState) && (t(r),
                e && (removeEventListener("visibilitychange", n, !0),
                removeEventListener("pagehide", n, !0)))
            }
            ;
            addEventListener("visibilitychange", n, !0),
            addEventListener("pagehide", n, !0)
        }
          , ev = t => {
            let e;
            let n = em("CLS", 0)
              , r = 0
              , i = []
              , a = t => {
                t.forEach(t => {
                    if (!t.hadRecentInput) {
                        let a = i[0]
                          , o = i[i.length - 1];
                        r && 0 !== i.length && t.startTime - o.startTime < 1e3 && t.startTime - a.startTime < 5e3 ? (r += t.value,
                        i.push(t)) : (r = t.value,
                        i = [t]),
                        r > n.value && (n.value = r,
                        n.entries = i,
                        e && e())
                    }
                }
                )
            }
              , o = ey("layout-shift", a);
            if (o) {
                e = ec(t, n);
                let r = () => {
                    a(o.takeRecords()),
                    e(!0)
                }
                ;
                return eg(r),
                r
            }
        }
          , e_ = -1
          , eb = () => "hidden" !== eu.document.visibilityState || eu.document.prerendering ? 1 / 0 : 0
          , ew = () => {
            eg(t => {
                let {timeStamp: e} = t;
                e_ = e
            }
            , !0)
        }
          , eS = () => (e_ < 0 && (e_ = eb(),
        ew()),
        {
            get firstHiddenTime() {
                return e_
            }
        })
          , ek = t => {
            let e;
            let n = eS()
              , r = em("FID")
              , i = t => {
                t.startTime < n.firstHiddenTime && (r.value = t.processingStart - t.startTime,
                r.entries.push(t),
                e(!0))
            }
              , a = t => {
                t.forEach(i)
            }
              , o = ey("first-input", a);
            e = ec(t, r),
            o && eg( () => {
                a(o.takeRecords()),
                o.disconnect()
            }
            , !0)
        }
          , ex = {}
          , eE = t => {
            let e;
            let n = eS()
              , r = em("LCP")
              , i = t => {
                let i = t[t.length - 1];
                if (i) {
                    let t = Math.max(i.startTime - ep(), 0);
                    t < n.firstHiddenTime && (r.value = t,
                    r.entries = [i],
                    e())
                }
            }
              , a = ey("largest-contentful-paint", i);
            if (a) {
                e = ec(t, r);
                let n = () => {
                    ex[r.id] || (i(a.takeRecords()),
                    a.disconnect(),
                    ex[r.id] = !0,
                    e(!0))
                }
                ;
                return ["keydown", "click"].forEach(t => {
                    addEventListener(t, n, {
                        once: !0,
                        capture: !0
                    })
                }
                ),
                eg(n, !0),
                n
            }
        }
        ;
        function eT(t) {
            return "number" == typeof t && isFinite(t)
        }
        function eO(t, e) {
            let {startTimestamp: n, ...r} = e;
            return n && t.startTimestamp > n && (t.startTimestamp = n),
            t.startChild({
                startTimestamp: n,
                ...r
            })
        }
        function eC(t) {
            return t / 1e3
        }
        function eA() {
            return eu && eu.addEventListener && eu.performance
        }
        let eR = 0
          , eD = {};
        function eI(t, e, n, r, i, a) {
            let o = a ? e[a] : e["".concat(n, "End")]
              , s = e["".concat(n, "Start")];
            s && o && eO(t, {
                op: "browser",
                description: i || n,
                startTimestamp: r + eC(s),
                endTimestamp: r + eC(o)
            })
        }
        let eP = ["localhost", /^\/(?!\/)/]
          , eM = {
            traceFetch: !0,
            traceXHR: !0,
            enableHTTPTimings: !0,
            tracingOrigins: eP,
            tracePropagationTargets: eP
        };
        function eN(t) {
            let e = t.data.url
              , n = new PerformanceObserver(r => {
                let i = r.getEntries();
                i.forEach(r => {
                    if (("fetch" === r.initiatorType || "xmlhttprequest" === r.initiatorType) && r.name.endsWith(e)) {
                        let e = function(t) {
                            let {name: e, version: n} = function(t) {
                                let e = "unknown"
                                  , n = "unknown"
                                  , r = "";
                                for (let i of t) {
                                    if ("/" === i) {
                                        [e,n] = t.split("/");
                                        break
                                    }
                                    if (!isNaN(Number(i))) {
                                        e = "h" === r ? "http" : r,
                                        n = t.split(r)[1];
                                        break
                                    }
                                    r += i
                                }
                                return r === t && (e = r),
                                {
                                    name: e,
                                    version: n
                                }
                            }(t.nextHopProtocol)
                              , r = [];
                            return (r.push(["network.protocol.version", n], ["network.protocol.name", e]),
                            G.Z1) ? [...r, ["http.request.redirect_start", eL(t.redirectStart)], ["http.request.fetch_start", eL(t.fetchStart)], ["http.request.domain_lookup_start", eL(t.domainLookupStart)], ["http.request.domain_lookup_end", eL(t.domainLookupEnd)], ["http.request.connect_start", eL(t.connectStart)], ["http.request.secure_connection_start", eL(t.secureConnectionStart)], ["http.request.connection_end", eL(t.connectEnd)], ["http.request.request_start", eL(t.requestStart)], ["http.request.response_start", eL(t.responseStart)], ["http.request.response_end", eL(t.responseEnd)]] : r
                        }(r);
                        e.forEach(e => t.setData(...e)),
                        n.disconnect()
                    }
                }
                )
            }
            );
            n.observe({
                entryTypes: ["resource"]
            })
        }
        function eL(t) {
            return ((G.Z1 || performance.timeOrigin) + t) / 1e3
        }
        function ej(t, e, n) {
            try {
                t.setRequestHeader("sentry-trace", e),
                n && t.setRequestHeader(tX, n)
            } catch (t) {}
        }
        let eF = {
            ...t7,
            markBackgroundTransactions: !0,
            routingInstrumentation: function(t) {
                let e, n = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1], r = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2];
                if (!eu || !eu.location)
                    return;
                let i = eu.location.href;
                n && (e = t({
                    name: eu.location.pathname,
                    startTimestamp: G.Z1 ? G.Z1 / 1e3 : void 0,
                    op: "pageload",
                    metadata: {
                        source: "url"
                    }
                })),
                r && (0,
                D.oq)("history", n => {
                    let {to: r, from: a} = n;
                    if (void 0 === a && i && -1 !== i.indexOf(r)) {
                        i = void 0;
                        return
                    }
                    a !== r && (i = void 0,
                    e && e.finish(),
                    e = t({
                        name: eu.location.pathname,
                        op: "navigation",
                        metadata: {
                            source: "url"
                        }
                    }))
                }
                )
            },
            startTransactionOnLocationChange: !0,
            startTransactionOnPageLoad: !0,
            enableLongTask: !0,
            _experiments: {},
            ...eM
        };
        class eV {
            setupOnce(t, e) {
                this._getCurrentHub = e;
                let n = e()
                  , r = n.getClient()
                  , i = r && r.getOptions()
                  , {routingInstrumentation: a, startTransactionOnLocationChange: o, startTransactionOnPageLoad: s, markBackgroundTransactions: l, traceFetch: u, traceXHR: c, shouldCreateSpanForRequest: f, enableHTTPTimings: p, _experiments: m} = this.options
                  , y = i && i.tracePropagationTargets
                  , g = y || this.options.tracePropagationTargets;
                a(t => {
                    let n = this._createRouteTransaction(t);
                    return this.options._experiments.onStartRouteTransaction && this.options._experiments.onStartRouteTransaction(n, t, e),
                    n
                }
                , s, o),
                l && eu && eu.document && eu.document.addEventListener("visibilitychange", () => {
                    let t = en();
                    eu.document.hidden && t && (t.status || t.setStatus("cancelled"),
                    t.setTag("visibilitychange", "document.hidden"),
                    t.finish())
                }
                ),
                m.enableInteractions && this._registerInteractionListener(),
                function(t) {
                    let {traceFetch: e, traceXHR: n, tracePropagationTargets: r, tracingOrigins: i, shouldCreateSpanForRequest: a, enableHTTPTimings: o} = {
                        traceFetch: eM.traceFetch,
                        traceXHR: eM.traceXHR,
                        ...t
                    }
                      , s = "function" == typeof a ? a : t => !0
                      , l = t => {
                        var e;
                        return e = r || i,
                        (0,
                        v.U0)(t, e || eP)
                    }
                      , u = {};
                    e && (0,
                    D.oq)("fetch", t => {
                        let e = function(t, e, n, r) {
                            if (!d() || !t.fetchData)
                                return;
                            let i = e(t.fetchData.url);
                            if (t.endTimestamp && i) {
                                let e = t.fetchData.__span;
                                if (!e)
                                    return;
                                let n = r[e];
                                if (n) {
                                    if (t.response) {
                                        n.setHttpStatus(t.response.status);
                                        let e = t.response && t.response.headers && t.response.headers.get("content-length")
                                          , r = parseInt(e);
                                        r > 0 && n.setData("http.response_content_length", r)
                                    } else
                                        t.error && n.setStatus("internal_error");
                                    n.finish(),
                                    delete r[e]
                                }
                                return
                            }
                            let a = (0,
                            h.Gd)()
                              , o = a.getScope()
                              , s = a.getClient()
                              , l = o.getSpan()
                              , {method: u, url: c} = t.fetchData
                              , f = i && l ? l.startChild({
                                data: {
                                    url: c,
                                    type: "fetch",
                                    "http.method": u
                                },
                                description: "".concat(u, " ").concat(c),
                                op: "http.client"
                            }) : void 0;
                            if (f && (t.fetchData.__span = f.spanId,
                            r[f.spanId] = f),
                            n(t.fetchData.url) && s) {
                                let e = t.args[0];
                                t.args[1] = t.args[1] || {};
                                let n = t.args[1];
                                n.headers = function(t, e, n, r, i) {
                                    let a = i || n.getSpan()
                                      , o = a && a.transaction
                                      , {traceId: s, sampled: l, dsc: u} = n.getPropagationContext()
                                      , c = a ? a.toTraceparent() : t6(s, void 0, l)
                                      , h = o ? o.getDynamicSamplingContext() : u || V(s, e, n)
                                      , d = t1(h)
                                      , f = "undefined" != typeof Request && (0,
                                    I.V9)(t, Request) ? t.headers : r.headers;
                                    if (!f)
                                        return {
                                            "sentry-trace": c,
                                            baggage: d
                                        };
                                    if ("undefined" != typeof Headers && (0,
                                    I.V9)(f, Headers)) {
                                        let t = new Headers(f);
                                        return t.append("sentry-trace", c),
                                        d && t.append(tX, d),
                                        t
                                    }
                                    if (Array.isArray(f)) {
                                        let t = [...f, ["sentry-trace", c]];
                                        return d && t.push([tX, d]),
                                        t
                                    }
                                    {
                                        let t = "baggage"in f ? f.baggage : void 0
                                          , e = [];
                                        return Array.isArray(t) ? e.push(...t) : t && e.push(t),
                                        d && e.push(d),
                                        {
                                            ...f,
                                            "sentry-trace": c,
                                            baggage: e.length > 0 ? e.join(",") : void 0
                                        }
                                    }
                                }(e, s, o, n, f)
                            }
                            return f
                        }(t, s, l, u);
                        o && e && eN(e)
                    }
                    ),
                    n && (0,
                    D.oq)("xhr", t => {
                        let e = function(t, e, n, r) {
                            let i = t.xhr
                              , a = i && i[D.xU];
                            if (!d() || i && i.__sentry_own_request__ || !i || !a)
                                return;
                            let o = e(a.url);
                            if (t.endTimestamp && o) {
                                let t = i.__sentry_xhr_span_id__;
                                if (!t)
                                    return;
                                let e = r[t];
                                e && (e.setHttpStatus(a.status_code),
                                e.finish(),
                                delete r[t]);
                                return
                            }
                            let s = (0,
                            h.Gd)()
                              , l = s.getScope()
                              , u = l.getSpan()
                              , c = o && u ? u.startChild({
                                data: {
                                    ...a.data,
                                    type: "xhr",
                                    "http.method": a.method,
                                    url: a.url
                                },
                                description: "".concat(a.method, " ").concat(a.url),
                                op: "http.client"
                            }) : void 0;
                            if (c && (i.__sentry_xhr_span_id__ = c.spanId,
                            r[i.__sentry_xhr_span_id__] = c),
                            i.setRequestHeader && n(a.url)) {
                                if (c) {
                                    let t = c && c.transaction
                                      , e = t && t.getDynamicSamplingContext()
                                      , n = t1(e);
                                    ej(i, c.toTraceparent(), n)
                                } else {
                                    let t = s.getClient()
                                      , {traceId: e, sampled: n, dsc: r} = l.getPropagationContext()
                                      , a = t6(e, void 0, n)
                                      , o = r || (t ? V(e, t, l) : void 0)
                                      , u = t1(o);
                                    ej(i, a, u)
                                }
                            }
                            return c
                        }(t, s, l, u);
                        o && e && eN(e)
                    }
                    )
                }({
                    traceFetch: u,
                    traceXHR: c,
                    tracePropagationTargets: g,
                    shouldCreateSpanForRequest: f,
                    enableHTTPTimings: p
                })
            }
            _createRouteTransaction(t) {
                if (!this._getCurrentHub)
                    return;
                let e = this._getCurrentHub()
                  , {beforeNavigate: n, idleTimeout: r, finalTimeout: o, heartbeatInterval: s} = this.options
                  , l = "pageload" === t.op
                  , u = l ? ez("sentry-trace") : ""
                  , c = l ? ez("baggage") : ""
                  , {traceparentData: h, dynamicSamplingContext: d, propagationContext: f} = t3(u, c)
                  , p = {
                    ...t,
                    ...h,
                    metadata: {
                        ...t.metadata,
                        dynamicSamplingContext: h && !d ? {} : d
                    },
                    trimEnd: !0
                }
                  , m = "function" == typeof n ? n(p) : p
                  , y = void 0 === m ? {
                    ...p,
                    sampled: !1
                } : m;
                y.metadata = y.name !== p.name ? {
                    ...y.metadata,
                    source: "custom"
                } : y.metadata,
                this._latestRouteName = y.name,
                this._latestRouteSource = y.metadata && y.metadata.source,
                y.sampled;
                let {location: g} = eu
                  , v = el(e, y, r, o, !0, {
                    location: g
                }, s)
                  , _ = e.getScope();
                return l && h ? _.setPropagationContext(f) : _.setPropagationContext({
                    traceId: v.traceId,
                    spanId: v.spanId,
                    parentSpanId: v.parentSpanId,
                    sampled: !!v.sampled
                }),
                v.registerBeforeFinishCallback(t => {
                    this._collectWebVitals(),
                    function(t) {
                        let e, n;
                        let r = eA();
                        if (!r || !eu.performance.getEntries || !G.Z1)
                            return;
                        let o = eC(G.Z1)
                          , s = r.getEntries();
                        if (s.slice(eR).forEach(r => {
                            let i = eC(r.startTime)
                              , a = eC(r.duration);
                            if ("navigation" !== t.op || !(o + i < t.startTimestamp))
                                switch (r.entryType) {
                                case "navigation":
                                    ["unloadEvent", "redirect", "domContentLoadedEvent", "loadEvent", "connect"].forEach(e => {
                                        eI(t, r, e, o)
                                    }
                                    ),
                                    eI(t, r, "secureConnection", o, "TLS/SSL", "connectEnd"),
                                    eI(t, r, "fetch", o, "cache", "domainLookupStart"),
                                    eI(t, r, "domainLookup", o, "DNS"),
                                    eO(t, {
                                        op: "browser",
                                        description: "request",
                                        startTimestamp: o + eC(r.requestStart),
                                        endTimestamp: o + eC(r.responseEnd)
                                    }),
                                    eO(t, {
                                        op: "browser",
                                        description: "response",
                                        startTimestamp: o + eC(r.responseStart),
                                        endTimestamp: o + eC(r.responseEnd)
                                    }),
                                    e = o + eC(r.responseStart),
                                    n = o + eC(r.requestStart);
                                    break;
                                case "mark":
                                case "paint":
                                case "measure":
                                    {
                                        (function(t, e, n, r, i) {
                                            let a = i + n;
                                            eO(t, {
                                                description: e.name,
                                                endTimestamp: a + r,
                                                op: e.entryType,
                                                startTimestamp: a
                                            })
                                        }
                                        )(t, r, i, a, o);
                                        let e = eS()
                                          , n = r.startTime < e.firstHiddenTime;
                                        "first-paint" === r.name && n && (eD.fp = {
                                            value: r.startTime,
                                            unit: "millisecond"
                                        }),
                                        "first-contentful-paint" === r.name && n && (eD.fcp = {
                                            value: r.startTime,
                                            unit: "millisecond"
                                        });
                                        break
                                    }
                                case "resource":
                                    {
                                        let e = r.name.replace(eu.location.origin, "");
                                        (function(t, e, n, r, i, a) {
                                            if ("xmlhttprequest" === e.initiatorType || "fetch" === e.initiatorType)
                                                return;
                                            let o = {};
                                            "transferSize"in e && (o["http.response_transfer_size"] = e.transferSize),
                                            "encodedBodySize"in e && (o["http.response_content_length"] = e.encodedBodySize),
                                            "decodedBodySize"in e && (o["http.decoded_response_content_length"] = e.decodedBodySize),
                                            "renderBlockingStatus"in e && (o["resource.render_blocking_status"] = e.renderBlockingStatus);
                                            let s = a + r
                                              , l = s + i;
                                            eO(t, {
                                                description: n,
                                                endTimestamp: l,
                                                op: e.initiatorType ? "resource.".concat(e.initiatorType) : "resource.other",
                                                startTimestamp: s,
                                                data: o
                                            })
                                        }
                                        )(t, r, e, i, a, o)
                                    }
                                }
                        }
                        ),
                        eR = Math.max(s.length - 1, 0),
                        function(t) {
                            let e = eu.navigator;
                            if (!e)
                                return;
                            let n = e.connection;
                            n && (n.effectiveType && t.setTag("effectiveConnectionType", n.effectiveType),
                            n.type && t.setTag("connectionType", n.type),
                            eT(n.rtt) && (eD["connection.rtt"] = {
                                value: n.rtt,
                                unit: "millisecond"
                            })),
                            eT(e.deviceMemory) && t.setTag("deviceMemory", "".concat(e.deviceMemory, " GB")),
                            eT(e.hardwareConcurrency) && t.setTag("hardwareConcurrency", String(e.hardwareConcurrency))
                        }(t),
                        "pageload" === t.op) {
                            "number" == typeof e && (eD.ttfb = {
                                value: (e - t.startTimestamp) * 1e3,
                                unit: "millisecond"
                            },
                            "number" == typeof n && n <= e && (eD["ttfb.requestTime"] = {
                                value: (e - n) * 1e3,
                                unit: "millisecond"
                            })),
                            ["fcp", "fp", "lcp"].forEach(e => {
                                if (!eD[e] || o >= t.startTimestamp)
                                    return;
                                let n = eD[e].value
                                  , r = o + eC(n)
                                  , i = Math.abs((r - t.startTimestamp) * 1e3);
                                eD[e].value = i
                            }
                            );
                            let r = eD["mark.fid"];
                            r && eD.fid && (eO(t, {
                                description: "first input delay",
                                endTimestamp: r.value + eC(eD.fid.value),
                                op: "ui.action",
                                startTimestamp: r.value
                            }),
                            delete eD["mark.fid"]),
                            "fcp"in eD || delete eD.cls,
                            Object.keys(eD).forEach(e => {
                                t.setMeasurement(e, eD[e].value, eD[e].unit)
                            }
                            ),
                            i && (i.element && t.setTag("lcp.element", (0,
                            ti.Rt)(i.element)),
                            i.id && t.setTag("lcp.id", i.id),
                            i.url && t.setTag("lcp.url", i.url.trim().slice(0, 200)),
                            t.setTag("lcp.size", i.size)),
                            a && a.sources && a.sources.forEach( (e, n) => t.setTag("cls.source.".concat(n + 1), (0,
                            ti.Rt)(e.node)))
                        }
                        i = void 0,
                        a = void 0,
                        eD = {}
                    }(t)
                }
                ),
                v
            }
            _registerInteractionListener() {
                let t;
                let e = () => {
                    let {idleTimeout: e, finalTimeout: n, heartbeatInterval: r} = this.options
                      , i = en();
                    if (i && i.op && ["navigation", "pageload"].includes(i.op) || (t && (t.setFinishReason("interactionInterrupted"),
                    t.finish(),
                    t = void 0),
                    !this._getCurrentHub || !this._latestRouteName))
                        return;
                    let a = this._getCurrentHub()
                      , {location: o} = eu
                      , s = {
                        name: this._latestRouteName,
                        op: "ui.action.click",
                        trimEnd: !0,
                        metadata: {
                            source: this._latestRouteSource || "url"
                        }
                    };
                    t = el(a, s, e, n, !0, {
                        location: o
                    }, r)
                }
                ;
                ["click"].forEach(t => {
                    addEventListener(t, e, {
                        once: !1,
                        capture: !0
                    })
                }
                )
            }
            constructor(t) {
                this.name = "BrowserTracing",
                this._hasSetTracePropagationTargets = !1,
                function() {
                    let t = (0,
                    h.cu)();
                    t.__SENTRY__ && (t.__SENTRY__.extensions = t.__SENTRY__.extensions || {},
                    t.__SENTRY__.extensions.startTransaction || (t.__SENTRY__.extensions.startTransaction = es),
                    t.__SENTRY__.extensions.traceHeaders || (t.__SENTRY__.extensions.traceHeaders = ea),
                    er || (er = !0,
                    (0,
                    D.oq)("error", ei),
                    (0,
                    D.oq)("unhandledrejection", ei)))
                }(),
                this.options = {
                    ...eF,
                    ...t
                },
                void 0 !== this.options._experiments.enableLongTask && (this.options.enableLongTask = this.options._experiments.enableLongTask),
                t && !t.tracePropagationTargets && t.tracingOrigins && (this.options.tracePropagationTargets = t.tracingOrigins),
                this._collectWebVitals = function() {
                    let t = eA();
                    if (t && G.Z1) {
                        t.mark && eu.performance.mark("sentry-tracing-init"),
                        ek(t => {
                            let e = t.entries.pop();
                            if (!e)
                                return;
                            let n = eC(G.Z1)
                              , r = eC(e.startTime);
                            eD.fid = {
                                value: t.value,
                                unit: "millisecond"
                            },
                            eD["mark.fid"] = {
                                value: n + r,
                                unit: "second"
                            }
                        }
                        );
                        let e = ev(t => {
                            let e = t.entries.pop();
                            e && (eD.cls = {
                                value: t.value,
                                unit: ""
                            },
                            a = e)
                        }
                        )
                          , n = eE(t => {
                            let e = t.entries.pop();
                            e && (eD.lcp = {
                                value: t.value,
                                unit: "millisecond"
                            },
                            i = e)
                        }
                        );
                        return () => {
                            e && e(),
                            n && n()
                        }
                    }
                    return () => void 0
                }(),
                this.options.enableLongTask && ey("longtask", t => {
                    for (let e of t) {
                        let t = en();
                        if (!t)
                            return;
                        let n = eC(G.Z1 + e.startTime)
                          , r = eC(e.duration);
                        t.startChild({
                            description: "Main UI thread blocked",
                            op: "ui.long-task",
                            startTimestamp: n,
                            endTimestamp: n + r
                        })
                    }
                }
                ),
                this.options._experiments.enableInteractions && ey("event", t => {
                    for (let e of t) {
                        let t = en();
                        if (!t)
                            return;
                        if ("click" === e.name) {
                            let n = eC(G.Z1 + e.startTime)
                              , r = eC(e.duration);
                            t.startChild({
                                description: (0,
                                ti.Rt)(e.target),
                                op: "ui.interaction.".concat(e.name),
                                startTimestamp: n,
                                endTimestamp: n + r
                            })
                        }
                    }
                }
                , {
                    durationThreshold: 0
                })
            }
        }
        function ez(t) {
            let e = (0,
            ti.qT)("meta[name=".concat(t, "]"));
            return e ? e.getAttribute("content") : void 0
        }
        let eq = {};
        function eU(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
            return Array.isArray(e) ? eB(t, e, n) : r => {
                let i = e(r);
                if (t.allowExclusionByUser) {
                    let e = i.find(e => e.name === t.name);
                    if (!e)
                        return i
                }
                return eB(t, i, n)
            }
        }
        function eB(t, e, n) {
            let r = e.find(e => e.name === t.name);
            if (r) {
                for (let[t,e] of Object.entries(n))
                    !function t(e, n, r) {
                        let i = n.match(/([a-z_]+)\.(.*)/i);
                        if (null === i)
                            e[n] = r;
                        else {
                            let n = e[i[1]];
                            t(n, i[2], r)
                        }
                    }(r, t, e);
                return e
            }
            return [...e, t]
        }
        te.Sentry && te.Sentry.Integrations && te.Sentry.Integrations;
        var eG = n(4155)
          , eW = n(1163)
          , eH = n.n(eW);
        let eQ = {
            "routing.instrumentation": "next-router"
        }
          , e$ = (0,
        h.Gd)().getClient();
        function eY(t) {
            let e = !(arguments.length > 1) || void 0 === arguments[1] || arguments[1]
              , n = !(arguments.length > 2) || void 0 === arguments[2] || arguments[2]
              , {route: r, params: i, sentryTrace: a, baggage: o} = function() {
                let t;
                let e = te.document.getElementById("__NEXT_DATA__");
                if (e && e.innerHTML)
                    try {
                        t = JSON.parse(e.innerHTML)
                    } catch (t) {}
                if (!t)
                    return {};
                let n = {}
                  , {page: r, query: i, props: a} = t;
                return n.route = r,
                n.params = i,
                a && a.pageProps && (n.sentryTrace = a.pageProps._sentryTraceData,
                n.baggage = a.pageProps._sentryBaggage),
                n
            }()
              , {traceparentData: u, dynamicSamplingContext: c, propagationContext: d} = t3(a, o);
            (0,
            h.Gd)().getScope().setPropagationContext(d),
            l = r || te.location.pathname,
            e && (s = t({
                name: l,
                op: "pageload",
                tags: eQ,
                ...i && e$ && e$.getOptions().sendDefaultPii && {
                    data: i
                },
                ...u,
                metadata: {
                    source: r ? "route" : "url",
                    dynamicSamplingContext: u && !c ? {} : c
                }
            })),
            n && eH().events.on("routeChangeStart", e => {
                let n, r;
                let i = e.split(/[\?#]/, 1)[0]
                  , a = function(t) {
                    let e = (te.__BUILD_MANIFEST || {}).sortedPages;
                    if (e)
                        return e.find(e => {
                            let n = function(t) {
                                let e = t.split("/")
                                  , n = "";
                                e[e.length - 1].match(/^\[\[\.\.\..+\]\]$/) && (e.pop(),
                                n = "(?:/(.+?))?");
                                let r = e.map(t => t.replace(/^\[\.\.\..+\]$/, "(.+?)").replace(/^\[.*\]$/, "([^/]+?)")).join("/");
                                return new RegExp("^".concat(r).concat(n, "(?:/)?$"))
                            }(e);
                            return t.match(n)
                        }
                        )
                }(i);
                a ? (n = a,
                r = "route") : (n = i,
                r = "url");
                let o = {
                    ...eQ,
                    from: l
                };
                l = n,
                s && s.finish();
                let u = t({
                    name: n,
                    op: "navigation",
                    tags: o,
                    metadata: {
                        source: r
                    }
                });
                if (u) {
                    let t = u.startChild({
                        op: "ui.nextjs.route-change",
                        description: "Next.js Route Change"
                    })
                      , e = () => {
                        t.finish(),
                        eH().events.off("routeChangeComplete", e)
                    }
                    ;
                    eH().events.on("routeChangeComplete", e)
                }
            }
            )
        }
        let eZ = n.g
          , eJ = n.g;
        function eX(t) {
            !function(t) {
                let e = eZ.__sentryRewritesTunnelPath__;
                if (e && t.dsn) {
                    let n = (0,
                    L.U4)(t.dsn);
                    if (!n)
                        return;
                    let r = n.host.match(/^o(\d+)\.ingest\.sentry\.io$/);
                    if (r) {
                        let i = r[1]
                          , a = "".concat(e, "?o=").concat(i, "&p=").concat(n.projectId);
                        t.tunnel = a
                    }
                }
            }(t),
            t._metadata = t._metadata || {},
            t._metadata.sdk = t._metadata.sdk || {
                name: "sentry.javascript.nextjs",
                packages: ["nextjs", "react"].map(t => ({
                    name: "".concat("npm:@sentry/").concat(t),
                    version: g
                })),
                version: g
            },
            t.environment = t.environment || function(t) {
                let e = t ? "production" : eG.env.VERCEL_ENV;
                return e ? "vercel-".concat(e) : void 0
            }(!0) || "production",
            function(t) {
                let e = t.integrations || []
                  , n = eJ.__rewriteFramesAssetPrefixPath__ || ""
                  , r = new y({
                    iteratee: t => {
                        try {
                            let {origin: e} = new URL(t.filename);
                            t.filename = function(t) {
                                let e;
                                let n = t[0]
                                  , r = 1;
                                for (; r < t.length; ) {
                                    let i = t[r]
                                      , a = t[r + 1];
                                    if (r += 2,
                                    ("optionalAccess" === i || "optionalCall" === i) && null == n)
                                        return;
                                    "access" === i || "optionalAccess" === i ? (e = n,
                                    n = a(n)) : ("call" === i || "optionalCall" === i) && (n = a(function() {
                                        for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                                            r[i] = arguments[i];
                                        return n.call(e, ...r)
                                    }),
                                    e = void 0)
                                }
                                return n
                            }([t, "access", t => t.filename, "optionalAccess", t => t.replace, "call", t => t(e, "app://"), "access", t => t.replace, "call", t => t(n, "")])
                        } catch (t) {}
                        return t.filename && t.filename.startsWith("app:///_next") && (t.filename = decodeURI(t.filename)),
                        t.filename && t.filename.match(/^app:\/\/\/_next\/static\/chunks\/(main-|main-app-|polyfills-|webpack-|framework-|framework\.)[0-9a-f]+\.js$/) && (t.in_app = !1),
                        t
                    }
                });
                if (e = eU(r, e),
                ("undefined" == typeof __SENTRY_TRACING__ || __SENTRY_TRACING__) && d(t)) {
                    let t = new eV({
                        tracingOrigins: [...eM.tracingOrigins, /^(api\/)/],
                        routingInstrumentation: eY
                    });
                    e = eU(t, e, {
                        "options.routingInstrumentation": eY
                    })
                }
                t.integrations = e
            }(t),
            t._metadata = t._metadata || {},
            t._metadata.sdk = t._metadata.sdk || {
                name: "sentry.javascript.react",
                packages: [{
                    name: "npm:@sentry/react",
                    version: g
                }],
                version: g
            },
            function() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                void 0 === t.defaultIntegrations && (t.defaultIntegrations = tZ),
                void 0 === t.release && ("string" == typeof __SENTRY_RELEASE__ && (t.release = __SENTRY_RELEASE__),
                te.SENTRY_RELEASE && te.SENTRY_RELEASE.id && (t.release = te.SENTRY_RELEASE.id)),
                void 0 === t.autoSessionTracking && (t.autoSessionTracking = !0),
                void 0 === t.sendClientReports && (t.sendClientReports = !0);
                let e = {
                    ...t,
                    stackParser: (0,
                    A.Sq)(t.stackParser || tG),
                    integrations: function(t) {
                        let e;
                        let n = t.defaultIntegrations || []
                          , r = t.integrations;
                        n.forEach(t => {
                            t.isDefaultInstance = !0
                        }
                        ),
                        e = Array.isArray(r) ? [...n, ...r] : "function" == typeof r ? (0,
                        E.lE)(r(n)) : n;
                        let i = function(t) {
                            let e = {};
                            return t.forEach(t => {
                                let {name: n} = t
                                  , r = e[n];
                                r && !r.isDefaultInstance && t.isDefaultInstance || (e[n] = t)
                            }
                            ),
                            Object.keys(e).map(t => e[t])
                        }(e)
                          , a = function(t, e) {
                            for (let n = 0; n < t.length; n++)
                                if (!0 === e(t[n]))
                                    return n;
                            return -1
                        }(i, t => "Debug" === t.name);
                        if (-1 !== a) {
                            let[t] = i.splice(a, 1);
                            i.push(t)
                        }
                        return i
                    }(t),
                    transport: t.transport || ((0,
                    R.Ak)() ? t$ : tY)
                };
                (function(t, e) {
                    !0 === e.debug && console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
                    let n = (0,
                    h.Gd)()
                      , r = n.getScope();
                    r.update(e.initialScope);
                    let i = new t(e);
                    n.bindClient(i)
                }
                )(tf, e),
                t.autoSessionTracking && function() {
                    if (void 0 === te.document)
                        return;
                    let t = (0,
                    h.Gd)();
                    t.captureSession && (tJ(t),
                    (0,
                    D.oq)("history", t => {
                        let {from: e, to: n} = t;
                        void 0 === e || e === n || tJ((0,
                        h.Gd)())
                    }
                    ))
                }()
            }(t),
            (0,
            K.e)(t => {
                t.setTag("runtime", "browser");
                let e = t => "transaction" === t.type && "/404" === t.transaction ? null : t;
                e.id = "NextClient404Filter",
                t.addEventProcessor(e)
            }
            )
        }
    },
    4822: function(t, e, n) {
        "use strict";
        let r, i, a, o, s;
        var l, u, c, h, d, f, p, m, y, g, v, _, b, w, S, k, x = n(1406), E = n(3859), T = n(9839), O = n(2913), C = n(128), A = n(21), R = n(679), D = n(738), I = n(6212);
        n(5120);
        var P = n(8002)
          , M = n(5677)
          , N = n(5086)
          , L = n(3834)
          , j = n(697)
          , F = n(704)
          , V = n(4155);
        let z = A.n2
          , q = "sentryReplaySession"
          , U = "Unable to send Replay";
        function B(t) {
            let e = null == t ? void 0 : t.host;
            return !!(e && e.shadowRoot && e.shadowRoot === t)
        }
        function G(t) {
            let {maskInputOptions: e, tagName: n, type: r} = t;
            "option" === n.toLowerCase() && (n = "select");
            let i = "string" == typeof r ? r.toLowerCase() : void 0;
            return e[n.toLowerCase()] || i && e[i] || "password" === i || "input" === n && !r && e.text
        }
        function W(t) {
            let {input: e, maskInputSelector: n, unmaskInputSelector: r, maskInputOptions: i, tagName: a, type: o, value: s, maskInputFn: l} = t
              , u = s || "";
            return r && e.matches(r) || (e.hasAttribute("data-rr-is-password") && (o = "password"),
            (G({
                maskInputOptions: i,
                tagName: a,
                type: o
            }) || n && e.matches(n)) && (u = l ? l(u) : "*".repeat(u.length))),
            u
        }
        (l = y || (y = {}))[l.Document = 0] = "Document",
        l[l.DocumentType = 1] = "DocumentType",
        l[l.Element = 2] = "Element",
        l[l.Text = 3] = "Text",
        l[l.CDATA = 4] = "CDATA",
        l[l.Comment = 5] = "Comment";
        let H = "__rrweb_original__";
        function Q(t) {
            let e = t.type;
            return t.hasAttribute("data-rr-is-password") ? "password" : e ? e.toLowerCase() : null
        }
        function $(t, e, n) {
            return ("string" == typeof n && n.toLowerCase(),
            "INPUT" === e && ("radio" === n || "checkbox" === n)) ? t.getAttribute("value") || "" : t.value
        }
        let Y = 1
          , Z = RegExp("[^a-z0-9-_:]");
        function J(t) {
            return t ? t.replace(/[\S]/g, "*") : ""
        }
        function X(t) {
            try {
                let e = t.rules || t.cssRules;
                return e ? Array.from(e).map(K).join("") : null
            } catch (t) {
                return null
            }
        }
        function K(t) {
            let e = t.cssText;
            if ("styleSheet"in t)
                try {
                    e = X(t.styleSheet) || e
                } catch (t) {}
            return tt(e)
        }
        function tt(t) {
            return t.indexOf(":") > -1 ? t.replace(/(\[(?:[\w-]+)[^\\])(:(?:[\w-]+)\])/gm, "$1\\$2") : t
        }
        let te = /url\((?:(')([^']*)'|(")(.*?)"|([^)]*))\)/gm
          , tn = /^(?!www\.|(?:http|ftp)s?:\/\/|[A-Za-z]:\\|\/\/|#).*/
          , tr = /^(data:)([^,]*),(.*)/i;
        function ti(t, e) {
            return (t || "").replace(te, (t, n, r, i, a, o) => {
                let s = r || a || o
                  , l = n || i || "";
                if (!s)
                    return t;
                if (!tn.test(s) || tr.test(s))
                    return "url(".concat(l).concat(s).concat(l, ")");
                if ("/" === s[0])
                    return "url(".concat(l).concat((e.indexOf("//") > -1 ? e.split("/").slice(0, 3).join("/") : e.split("/")[0]).split("?")[0] + s).concat(l, ")");
                let u = e.split("/")
                  , c = s.split("/");
                for (let t of (u.pop(),
                c))
                    "." !== t && (".." === t ? u.pop() : u.push(t));
                return "url(".concat(l).concat(u.join("/")).concat(l, ")")
            }
            )
        }
        let ta = /^[^ \t\n\r\u000c]+/
          , to = /^[, \t\n\r\u000c]+/;
        function ts(t, e) {
            if (!e || "" === e.trim())
                return e;
            let n = t.createElement("a");
            return n.href = e,
            n.href
        }
        function tl() {
            let t = document.createElement("a");
            return t.href = "",
            t.href
        }
        function tu(t, e, n, r, i, a, o, s) {
            if (!i)
                return i;
            let l = r.toLowerCase()
              , u = n.toLowerCase();
            if ("src" === l || "href" === l || "xlink:href" === l && "#" !== i[0] || "background" === l && ("table" === u || "td" === u || "th" === u))
                return ts(t, i);
            if ("srcset" === l)
                return function(t, e) {
                    if ("" === e.trim())
                        return e;
                    let n = 0;
                    function r(t) {
                        let r;
                        let i = t.exec(e.substring(n));
                        return i ? (r = i[0],
                        n += r.length,
                        r) : ""
                    }
                    let i = [];
                    for (; r(to),
                    !(n >= e.length); ) {
                        let a = r(ta);
                        if ("," === a.slice(-1))
                            a = ts(t, a.substring(0, a.length - 1)),
                            i.push(a);
                        else {
                            let r = "";
                            a = ts(t, a);
                            let o = !1;
                            for (; ; ) {
                                let t = e.charAt(n);
                                if ("" === t) {
                                    i.push((a + r).trim());
                                    break
                                }
                                if (o)
                                    ")" === t && (o = !1);
                                else {
                                    if ("," === t) {
                                        n += 1,
                                        i.push((a + r).trim());
                                        break
                                    }
                                    "(" === t && (o = !0)
                                }
                                r += t,
                                n += 1
                            }
                        }
                    }
                    return i.join(", ")
                }(t, i);
            if ("style" === l)
                return ti(i, tl());
            if ("object" === u && "data" === l)
                return ts(t, i);
            if (a && !(o && e.matches(o)) && (["placeholder", "title", "aria-label"].indexOf(l) > -1 || "input" === u && "value" === l && e.hasAttribute("type") && ["submit", "button"].indexOf(e.getAttribute("type").toLowerCase()) > -1))
                return s ? s(i) : J(i);
            return i
        }
        function tc(t, e, n, r, i) {
            if (!t)
                return !1;
            if (t.nodeType !== t.ELEMENT_NODE)
                return tc(t.parentNode, e, n, r, i);
            if (r && (t.matches(r) || t.closest(r)))
                return !1;
            if (i)
                return !0;
            if ("string" == typeof e) {
                if (t.classList.contains(e))
                    return !0
            } else
                for (let n = 0; n < t.classList.length; n++) {
                    let r = t.classList[n];
                    if (e.test(r))
                        return !0
                }
            return !!(n && t.matches(n)) || tc(t.parentNode, e, n, r, i)
        }
        function th(t) {
            return null == t ? "" : t.toLowerCase()
        }
        function td(t, e) {
            let n;
            let {doc: a, map: o, blockClass: s, blockSelector: l, unblockSelector: u, maskTextClass: c, maskTextSelector: h, unmaskTextSelector: d, skipChild: f=!1, inlineStylesheet: p=!0, maskInputSelector: m, unmaskInputSelector: g, maskAllText: v, maskInputOptions: _={}, maskTextFn: b, maskInputFn: w, slimDOMOptions: S, dataURLOptions: k={}, inlineImages: x=!1, recordCanvas: E=!1, onSerialize: T, onIframeLoad: O, iframeLoadTimeout: C=5e3, keepIframeSrcFn: A= () => !1} = e
              , {preserveWhiteSpace: R=!0} = e
              , D = function(t, e) {
                var n, a;
                let o;
                let {doc: s, blockClass: l, blockSelector: u, unblockSelector: c, maskTextClass: h, maskTextSelector: d, unmaskTextSelector: f, inlineStylesheet: p, maskInputSelector: m, unmaskInputSelector: g, maskAllText: v, maskInputOptions: _={}, maskTextFn: b, maskInputFn: w, dataURLOptions: S={}, inlineImages: k, recordCanvas: x, keepIframeSrcFn: E} = e;
                if (s.__sn) {
                    let t = s.__sn.id;
                    o = 1 === t ? void 0 : t
                }
                switch (t.nodeType) {
                case t.DOCUMENT_NODE:
                    if ("CSS1Compat" !== t.compatMode)
                        return {
                            type: y.Document,
                            childNodes: [],
                            compatMode: t.compatMode,
                            rootId: o
                        };
                    return {
                        type: y.Document,
                        childNodes: [],
                        rootId: o
                    };
                case t.DOCUMENT_TYPE_NODE:
                    return {
                        type: y.DocumentType,
                        name: t.name,
                        publicId: t.publicId,
                        systemId: t.systemId,
                        rootId: o
                    };
                case t.ELEMENT_NODE:
                    let T = function(t, e, n, r) {
                        if (r && t.matches(r))
                            return !1;
                        if ("string" == typeof e) {
                            if (t.classList.contains(e))
                                return !0
                        } else
                            for (let n = 0; n < t.classList.length; n++) {
                                let r = t.classList[n];
                                if (e.test(r))
                                    return !0
                            }
                        return !!n && t.matches(n)
                    }(t, l, u, c)
                      , O = function(t) {
                        if (t instanceof HTMLFormElement)
                            return "form";
                        let e = t.tagName.toLowerCase().trim();
                        return Z.test(e) ? "div" : e
                    }(t)
                      , C = {};
                    for (let {name: e, value: n} of Array.from(t.attributes))
                        ("video" === O || "audio" === O) && "autoplay" === e || (C[e] = tu(s, t, O, e, n, v, f, b));
                    if ("link" === O && p) {
                        let e = Array.from(s.styleSheets).find(e => e.href === t.href)
                          , n = null;
                        e && (n = X(e)),
                        n && (delete C.rel,
                        delete C.href,
                        C._cssText = ti(n, e.href))
                    }
                    if ("style" === O && t.sheet && !(t.innerText || t.textContent || "").trim().length) {
                        let e = X(t.sheet);
                        e && (C._cssText = ti(e, tl()))
                    }
                    if ("input" === O || "textarea" === O || "select" === O || "option" === O) {
                        let e = Q(t)
                          , n = $(t, O.toUpperCase(), e)
                          , r = t.checked;
                        "submit" !== e && "button" !== e && n && (C.value = W({
                            input: t,
                            type: e,
                            tagName: O,
                            value: n,
                            maskInputSelector: m,
                            unmaskInputSelector: g,
                            maskInputOptions: _,
                            maskInputFn: w
                        })),
                        r && (C.checked = r)
                    }
                    if ("option" === O && (t.selected && !_.select ? C.selected = !0 : delete C.selected),
                    "canvas" === O && x) {
                        if ("2d" === t.__context)
                            !function(t) {
                                let e = t.getContext("2d");
                                if (!e)
                                    return !0;
                                for (let n = 0; n < t.width; n += 50)
                                    for (let r = 0; r < t.height; r += 50) {
                                        let i = e.getImageData
                                          , a = H in i ? i[H] : i
                                          , o = new Uint32Array(a.call(e, n, r, Math.min(50, t.width - n), Math.min(50, t.height - r)).data.buffer);
                                        if (o.some(t => 0 !== t))
                                            return !1
                                    }
                                return !0
                            }(t) && (C.rr_dataURL = t.toDataURL(S.type, S.quality));
                        else if (!("__context"in t)) {
                            let e = t.toDataURL(S.type, S.quality)
                              , n = document.createElement("canvas");
                            n.width = t.width,
                            n.height = t.height;
                            let r = n.toDataURL(S.type, S.quality);
                            e !== r && (C.rr_dataURL = e)
                        }
                    }
                    if ("img" === O && k) {
                        r || (i = (r = s.createElement("canvas")).getContext("2d"));
                        let e = t.crossOrigin;
                        t.crossOrigin = "anonymous";
                        let n = () => {
                            try {
                                r.width = t.naturalWidth,
                                r.height = t.naturalHeight,
                                i.drawImage(t, 0, 0),
                                C.rr_dataURL = r.toDataURL(S.type, S.quality)
                            } catch (e) {
                                console.warn("Cannot inline img src=".concat(t.currentSrc, "! Error: ").concat(e))
                            }
                            e ? C.crossOrigin = e : delete C.crossOrigin
                        }
                        ;
                        t.complete && 0 !== t.naturalWidth ? n() : t.onload = n
                    }
                    if (("audio" === O || "video" === O) && (C.rr_mediaState = t.paused ? "paused" : "played",
                    C.rr_mediaCurrentTime = t.currentTime),
                    t.scrollLeft && (C.rr_scrollLeft = t.scrollLeft),
                    t.scrollTop && (C.rr_scrollTop = t.scrollTop),
                    T) {
                        let {width: e, height: n} = t.getBoundingClientRect();
                        C = {
                            class: C.class,
                            rr_width: "".concat(e, "px"),
                            rr_height: "".concat(n, "px")
                        }
                    }
                    return "iframe" !== O || E(C.src) || (t.contentDocument || (C.rr_src = C.src),
                    delete C.src),
                    {
                        type: y.Element,
                        tagName: O,
                        attributes: C,
                        childNodes: [],
                        isSVG: !!("svg" === t.tagName || t.ownerSVGElement) || void 0,
                        needBlock: T,
                        rootId: o
                    };
                case t.TEXT_NODE:
                    let A = t.parentNode && t.parentNode.tagName
                      , R = t.textContent
                      , D = "STYLE" === A || void 0
                      , I = "SCRIPT" === A || void 0;
                    if (D && R) {
                        try {
                            t.nextSibling || t.previousSibling || (null === (n = t.parentNode.sheet) || void 0 === n ? void 0 : n.cssRules) && (R = (a = t.parentNode.sheet).cssRules ? Array.from(a.cssRules).map(t => t.cssText ? tt(t.cssText) : "").join("") : "")
                        } catch (e) {
                            console.warn("Cannot get CSS styles from text's parentNode. Error: ".concat(e), t)
                        }
                        R = ti(R, tl())
                    }
                    if (I && (R = "SCRIPT_PLACEHOLDER"),
                    "TEXTAREA" === A && R)
                        R = "";
                    else if ("OPTION" === A && R) {
                        let e = t.parentNode;
                        R = W({
                            input: e,
                            type: null,
                            tagName: A,
                            value: R,
                            maskInputSelector: m,
                            unmaskInputSelector: g,
                            maskInputOptions: _,
                            maskInputFn: w
                        })
                    } else
                        !D && !I && tc(t, h, d, f, v) && R && (R = b ? b(R) : J(R));
                    return {
                        type: y.Text,
                        textContent: R || "",
                        isStyle: D,
                        rootId: o
                    };
                case t.CDATA_SECTION_NODE:
                    return {
                        type: y.CDATA,
                        textContent: "",
                        rootId: o
                    };
                case t.COMMENT_NODE:
                    return {
                        type: y.Comment,
                        textContent: t.textContent || "",
                        rootId: o
                    };
                default:
                    return !1
                }
            }(t, {
                doc: a,
                blockClass: s,
                blockSelector: l,
                unblockSelector: u,
                maskTextClass: c,
                maskTextSelector: h,
                unmaskTextSelector: d,
                inlineStylesheet: p,
                maskInputSelector: m,
                unmaskInputSelector: g,
                maskAllText: v,
                maskInputOptions: _,
                maskTextFn: b,
                maskInputFn: w,
                dataURLOptions: k,
                inlineImages: x,
                recordCanvas: E,
                keepIframeSrcFn: A
            });
            if (!D)
                return console.warn(t, "not serialized"),
                null;
            n = "__sn"in t ? t.__sn.id : !function(t, e) {
                if (e.comment && t.type === y.Comment)
                    return !0;
                if (t.type === y.Element) {
                    if (e.script && ("script" === t.tagName || "link" === t.tagName && ("preload" === t.attributes.rel || "modulepreload" === t.attributes.rel) && "script" === t.attributes.as || "link" === t.tagName && "prefetch" === t.attributes.rel && "string" == typeof t.attributes.href && t.attributes.href.endsWith(".js")) || e.headFavicon && ("link" === t.tagName && "shortcut icon" === t.attributes.rel || "meta" === t.tagName && (th(t.attributes.name).match(/^msapplication-tile(image|color)$/) || "application-name" === th(t.attributes.name) || "icon" === th(t.attributes.rel) || "apple-touch-icon" === th(t.attributes.rel) || "shortcut icon" === th(t.attributes.rel))))
                        return !0;
                    if ("meta" === t.tagName) {
                        if (e.headMetaDescKeywords && th(t.attributes.name).match(/^description|keywords$/) || e.headMetaSocial && (th(t.attributes.property).match(/^(og|twitter|fb):/) || th(t.attributes.name).match(/^(og|twitter):/) || "pinterest" === th(t.attributes.name)))
                            return !0;
                        if (e.headMetaRobots && ("robots" === th(t.attributes.name) || "googlebot" === th(t.attributes.name) || "bingbot" === th(t.attributes.name)))
                            return !0;
                        if (e.headMetaHttpEquiv && void 0 !== t.attributes["http-equiv"])
                            return !0;
                        else if (e.headMetaAuthorship && ("author" === th(t.attributes.name) || "generator" === th(t.attributes.name) || "framework" === th(t.attributes.name) || "publisher" === th(t.attributes.name) || "progid" === th(t.attributes.name) || th(t.attributes.property).match(/^article:/) || th(t.attributes.property).match(/^product:/)))
                            return !0;
                        else if (e.headMetaVerification && ("google-site-verification" === th(t.attributes.name) || "yandex-verification" === th(t.attributes.name) || "csrf-token" === th(t.attributes.name) || "p:domain_verify" === th(t.attributes.name) || "verify-v1" === th(t.attributes.name) || "verification" === th(t.attributes.name) || "shopify-checkout-api-token" === th(t.attributes.name)))
                            return !0
                    }
                }
                return !1
            }(D, S) && (R || D.type !== y.Text || D.isStyle || D.textContent.replace(/^\s+|\s+$/gm, "").length) ? Y++ : -2;
            let I = Object.assign(D, {
                id: n
            });
            if (t.__sn = I,
            -2 === n)
                return null;
            o[n] = t,
            T && T(t);
            let P = !f;
            if (I.type === y.Element && (P = P && !I.needBlock,
            delete I.needBlock,
            t.shadowRoot && (I.isShadowHost = !0)),
            (I.type === y.Document || I.type === y.Element) && P) {
                S.headWhitespace && D.type === y.Element && "head" === D.tagName && (R = !1);
                let e = {
                    doc: a,
                    map: o,
                    blockClass: s,
                    blockSelector: l,
                    unblockSelector: u,
                    maskTextClass: c,
                    maskTextSelector: h,
                    unmaskTextSelector: d,
                    skipChild: f,
                    inlineStylesheet: p,
                    maskInputSelector: m,
                    unmaskInputSelector: g,
                    maskAllText: v,
                    maskInputOptions: _,
                    maskTextFn: b,
                    maskInputFn: w,
                    slimDOMOptions: S,
                    dataURLOptions: k,
                    inlineImages: x,
                    recordCanvas: E,
                    preserveWhiteSpace: R,
                    onSerialize: T,
                    onIframeLoad: O,
                    iframeLoadTimeout: C,
                    keepIframeSrcFn: A
                };
                for (let n of Array.from(t.childNodes)) {
                    let t = td(n, e);
                    t && I.childNodes.push(t)
                }
                if (t.nodeType === t.ELEMENT_NODE && t.shadowRoot)
                    for (let n of Array.from(t.shadowRoot.childNodes)) {
                        let t = td(n, e);
                        t && (t.isShadow = !0,
                        I.childNodes.push(t))
                    }
            }
            return t.parentNode && B(t.parentNode) && (I.isShadow = !0),
            I.type === y.Element && "iframe" === I.tagName && function(t, e, n) {
                let r;
                let i = t.contentWindow;
                if (!i)
                    return;
                let a = !1;
                try {
                    r = i.document.readyState
                } catch (t) {
                    return
                }
                if ("complete" !== r) {
                    let r = setTimeout( () => {
                        a || (e(),
                        a = !0)
                    }
                    , n);
                    t.addEventListener("load", () => {
                        clearTimeout(r),
                        a = !0,
                        e()
                    }
                    );
                    return
                }
                let o = "about:blank";
                if (i.location.href !== o || t.src === o || "" === t.src) {
                    setTimeout(e, 0);
                    return
                }
                t.addEventListener("load", e)
            }(t, () => {
                let e = t.contentDocument;
                if (e && O) {
                    let n = td(e, {
                        doc: e,
                        map: o,
                        blockClass: s,
                        blockSelector: l,
                        unblockSelector: u,
                        maskTextClass: c,
                        maskTextSelector: h,
                        unmaskTextSelector: d,
                        skipChild: !1,
                        inlineStylesheet: p,
                        maskInputSelector: m,
                        unmaskInputSelector: g,
                        maskAllText: v,
                        maskInputOptions: _,
                        maskTextFn: b,
                        maskInputFn: w,
                        slimDOMOptions: S,
                        dataURLOptions: k,
                        inlineImages: x,
                        recordCanvas: E,
                        preserveWhiteSpace: R,
                        onSerialize: T,
                        onIframeLoad: O,
                        iframeLoadTimeout: C,
                        keepIframeSrcFn: A
                    });
                    n && O(t, n)
                }
            }
            , C),
            I
        }
        function tf(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : document
              , r = {
                capture: !0,
                passive: !0
            };
            return n.addEventListener(t, e, r),
            () => n.removeEventListener(t, e, r)
        }
        (u = g || (g = {}))[u.DomContentLoaded = 0] = "DomContentLoaded",
        u[u.Load = 1] = "Load",
        u[u.FullSnapshot = 2] = "FullSnapshot",
        u[u.IncrementalSnapshot = 3] = "IncrementalSnapshot",
        u[u.Meta = 4] = "Meta",
        u[u.Custom = 5] = "Custom",
        u[u.Plugin = 6] = "Plugin",
        (c = v || (v = {}))[c.Mutation = 0] = "Mutation",
        c[c.MouseMove = 1] = "MouseMove",
        c[c.MouseInteraction = 2] = "MouseInteraction",
        c[c.Scroll = 3] = "Scroll",
        c[c.ViewportResize = 4] = "ViewportResize",
        c[c.Input = 5] = "Input",
        c[c.TouchMove = 6] = "TouchMove",
        c[c.MediaInteraction = 7] = "MediaInteraction",
        c[c.StyleSheetRule = 8] = "StyleSheetRule",
        c[c.CanvasMutation = 9] = "CanvasMutation",
        c[c.Font = 10] = "Font",
        c[c.Log = 11] = "Log",
        c[c.Drag = 12] = "Drag",
        c[c.StyleDeclaration = 13] = "StyleDeclaration",
        (h = _ || (_ = {}))[h.MouseUp = 0] = "MouseUp",
        h[h.MouseDown = 1] = "MouseDown",
        h[h.Click = 2] = "Click",
        h[h.ContextMenu = 3] = "ContextMenu",
        h[h.DblClick = 4] = "DblClick",
        h[h.Focus = 5] = "Focus",
        h[h.Blur = 6] = "Blur",
        h[h.TouchStart = 7] = "TouchStart",
        h[h.TouchMove_Departed = 8] = "TouchMove_Departed",
        h[h.TouchEnd = 9] = "TouchEnd",
        h[h.TouchCancel = 10] = "TouchCancel",
        (d = b || (b = {}))[d["2D"] = 0] = "2D",
        d[d.WebGL = 1] = "WebGL",
        d[d.WebGL2 = 2] = "WebGL2",
        (f = w || (w = {}))[f.Play = 0] = "Play",
        f[f.Pause = 1] = "Pause",
        f[f.Seeked = 2] = "Seeked",
        f[f.VolumeChange = 3] = "VolumeChange",
        (p = S || (S = {})).Start = "start",
        p.Pause = "pause",
        p.Resume = "resume",
        p.Resize = "resize",
        p.Finish = "finish",
        p.FullsnapshotRebuilded = "fullsnapshot-rebuilded",
        p.LoadStylesheetStart = "load-stylesheet-start",
        p.LoadStylesheetEnd = "load-stylesheet-end",
        p.SkipStart = "skip-start",
        p.SkipEnd = "skip-end",
        p.MouseInteraction = "mouse-interaction",
        p.EventCast = "event-cast",
        p.CustomEvent = "custom-event",
        p.Flush = "flush",
        p.StateChange = "state-change",
        p.PlayBack = "play-back";
        let tp = "Please stop import mirror directly. Instead of that,\r\nnow you can use replayer.getMirror() to access the mirror instance of a replayer,\r\nor you can use record.mirror to access the mirror instance during recording."
          , tm = {
            map: {},
            getId: () => (console.error(tp),
            -1),
            getNode: () => (console.error(tp),
            null),
            removeNodeFromMap() {
                console.error(tp)
            },
            has: () => (console.error(tp),
            !1),
            reset() {
                console.error(tp)
            }
        };
        function ty(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
              , r = null
              , i = 0;
            return function(a) {
                let o = Date.now();
                i || !1 !== n.leading || (i = o);
                let s = e - (o - i)
                  , l = this
                  , u = arguments;
                s <= 0 || s > e ? (r && (clearTimeout(r),
                r = null),
                i = o,
                t.apply(l, u)) : r || !1 === n.trailing || (r = setTimeout( () => {
                    i = !1 === n.leading ? 0 : Date.now(),
                    r = null,
                    t.apply(l, u)
                }
                , s))
            }
        }
        function tg(t, e, n, r) {
            let i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : window
              , a = i.Object.getOwnPropertyDescriptor(t, e);
            return i.Object.defineProperty(t, e, r ? n : {
                set(t) {
                    setTimeout( () => {
                        n.set.call(this, t)
                    }
                    , 0),
                    a && a.set && a.set.call(this, t)
                }
            }),
            () => tg(t, e, a || {}, !0)
        }
        function tv(t, e, n) {
            try {
                if (!(e in t))
                    return () => {}
                    ;
                let r = t[e]
                  , i = n(r);
                return "function" == typeof i && (i.prototype = i.prototype || {},
                Object.defineProperties(i, {
                    __rrweb_original__: {
                        enumerable: !1,
                        value: r
                    }
                })),
                t[e] = i,
                () => {
                    t[e] = r
                }
            } catch (t) {
                return () => {}
            }
        }
        function t_() {
            return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight
        }
        function tb() {
            return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth
        }
        function tw(t, e, n, r) {
            if (!t)
                return !1;
            if (t.nodeType === t.ELEMENT_NODE) {
                let i = !1
                  , a = r && t.matches(r);
                return "string" == typeof e ? i = void 0 !== t.closest ? !a && null !== t.closest("." + e) : !a && t.classList.contains(e) : a || t.classList.forEach(t => {
                    e.test(t) && (i = !0)
                }
                ),
                !i && n && (i = t.matches(n)),
                !a && i || tw(t.parentNode, e, n, r)
            }
            return t.nodeType,
            t.TEXT_NODE,
            tw(t.parentNode, e, n, r)
        }
        function tS(t) {
            return "__sn"in t && -2 === t.__sn.id
        }
        function tk(t) {
            return !!t.changedTouches
        }
        function tx(t) {
            return "__sn"in t && t.__sn.type === y.Element && "iframe" === t.__sn.tagName
        }
        function tE(t) {
            return !!(null == t ? void 0 : t.shadowRoot)
        }
        window.Proxy && window.Reflect && (tm = new Proxy(tm,{
            get: (t, e, n) => ("map" === e && console.error(tp),
            Reflect.get(t, e, n))
        }));
        class tT {
            get(t) {
                if (t >= this.length)
                    throw Error("Position outside of list range");
                let e = this.head;
                for (let n = 0; n < t; n++)
                    e = (null == e ? void 0 : e.next) || null;
                return e
            }
            addNode(t) {
                let e = {
                    value: t,
                    previous: null,
                    next: null
                };
                if (t.__ln = e,
                t.previousSibling && "__ln"in t.previousSibling) {
                    let n = t.previousSibling.__ln.next;
                    e.next = n,
                    e.previous = t.previousSibling.__ln,
                    t.previousSibling.__ln.next = e,
                    n && (n.previous = e)
                } else if (t.nextSibling && "__ln"in t.nextSibling && t.nextSibling.__ln.previous) {
                    let n = t.nextSibling.__ln.previous;
                    e.previous = n,
                    e.next = t.nextSibling.__ln,
                    t.nextSibling.__ln.previous = e,
                    n && (n.next = e)
                } else
                    this.head && (this.head.previous = e),
                    e.next = this.head,
                    this.head = e;
                this.length++
            }
            removeNode(t) {
                let e = t.__ln;
                this.head && (e.previous ? (e.previous.next = e.next,
                e.next && (e.next.previous = e.previous)) : (this.head = e.next,
                this.head && (this.head.previous = null)),
                t.__ln && delete t.__ln,
                this.length--)
            }
            constructor() {
                this.length = 0,
                this.head = null
            }
        }
        let tO = (t, e) => "".concat(t, "@").concat(e);
        class tC {
            init(t) {
                ["mutationCb", "blockClass", "blockSelector", "unblockSelector", "maskTextClass", "maskTextSelector", "unmaskTextSelector", "maskInputSelector", "unmaskInputSelector", "inlineStylesheet", "maskAllText", "maskInputOptions", "maskTextFn", "maskInputFn", "recordCanvas", "inlineImages", "slimDOMOptions", "doc", "mirror", "iframeManager", "shadowDomManager", "canvasManager"].forEach(e => {
                    this[e] = t[e]
                }
                )
            }
            freeze() {
                this.frozen = !0,
                this.canvasManager.freeze()
            }
            unfreeze() {
                this.frozen = !1,
                this.canvasManager.unfreeze(),
                this.emit()
            }
            isFrozen() {
                return this.frozen
            }
            lock() {
                this.locked = !0,
                this.canvasManager.lock()
            }
            unlock() {
                this.locked = !1,
                this.canvasManager.unlock(),
                this.emit()
            }
            reset() {
                this.shadowDomManager.reset(),
                this.canvasManager.reset()
            }
            constructor() {
                this.frozen = !1,
                this.locked = !1,
                this.texts = [],
                this.attributes = [],
                this.removes = [],
                this.mapRemoves = [],
                this.movedMap = {},
                this.addedSet = new Set,
                this.movedSet = new Set,
                this.droppedSet = new Set,
                this.processMutations = t => {
                    t.forEach(this.processMutation),
                    this.emit()
                }
                ,
                this.emit = () => {
                    if (this.frozen || this.locked)
                        return;
                    let t = []
                      , e = new tT
                      , n = t => {
                        let e = t
                          , n = -2;
                        for (; -2 === n; )
                            n = (e = e && e.nextSibling) && this.mirror.getId(e);
                        return n
                    }
                      , r = r => {
                        var i, a, o, s, l;
                        let u = r.getRootNode ? null === (i = r.getRootNode()) || void 0 === i ? void 0 : i.host : null
                          , c = u;
                        for (; null === (o = null === (a = null == c ? void 0 : c.getRootNode) || void 0 === a ? void 0 : a.call(c)) || void 0 === o ? void 0 : o.host; )
                            c = (null === (l = null === (s = null == c ? void 0 : c.getRootNode) || void 0 === s ? void 0 : s.call(c)) || void 0 === l ? void 0 : l.host) || null;
                        let h = !this.doc.contains(r) && (!c || !this.doc.contains(c));
                        if (!r.parentNode || h)
                            return;
                        let d = B(r.parentNode) ? this.mirror.getId(u) : this.mirror.getId(r.parentNode)
                          , f = n(r);
                        if (-1 === d || -1 === f)
                            return e.addNode(r);
                        let p = td(r, {
                            doc: this.doc,
                            map: this.mirror.map,
                            blockClass: this.blockClass,
                            blockSelector: this.blockSelector,
                            unblockSelector: this.unblockSelector,
                            maskTextClass: this.maskTextClass,
                            maskTextSelector: this.maskTextSelector,
                            unmaskTextSelector: this.unmaskTextSelector,
                            maskInputSelector: this.maskInputSelector,
                            unmaskInputSelector: this.unmaskInputSelector,
                            skipChild: !0,
                            inlineStylesheet: this.inlineStylesheet,
                            maskAllText: this.maskAllText,
                            maskInputOptions: this.maskInputOptions,
                            maskTextFn: this.maskTextFn,
                            maskInputFn: this.maskInputFn,
                            slimDOMOptions: this.slimDOMOptions,
                            recordCanvas: this.recordCanvas,
                            inlineImages: this.inlineImages,
                            onSerialize: t => {
                                tx(t) && this.iframeManager.addIframe(t),
                                tE(r) && this.shadowDomManager.addShadowRoot(r.shadowRoot, document)
                            }
                            ,
                            onIframeLoad: (t, e) => {
                                this.iframeManager.attachIframe(t, e),
                                this.shadowDomManager.observeAttachShadow(t)
                            }
                        });
                        p && t.push({
                            parentId: d,
                            nextId: f,
                            node: p
                        })
                    }
                    ;
                    for (; this.mapRemoves.length; )
                        this.mirror.removeNodeFromMap(this.mapRemoves.shift());
                    for (let t of this.movedSet)
                        (!tR(this.removes, t, this.mirror) || this.movedSet.has(t.parentNode)) && r(t);
                    for (let t of this.addedSet)
                        tD(this.droppedSet, t) || tR(this.removes, t, this.mirror) ? tD(this.movedSet, t) ? r(t) : this.droppedSet.add(t) : r(t);
                    let i = null;
                    for (; e.length; ) {
                        let t = null;
                        if (i) {
                            let e = this.mirror.getId(i.value.parentNode)
                              , r = n(i.value);
                            -1 !== e && -1 !== r && (t = i)
                        }
                        if (!t)
                            for (let r = e.length - 1; r >= 0; r--) {
                                let i = e.get(r);
                                if (i) {
                                    let e = this.mirror.getId(i.value.parentNode)
                                      , r = n(i.value);
                                    if (-1 !== e && -1 !== r) {
                                        t = i;
                                        break
                                    }
                                }
                            }
                        if (!t) {
                            for (; e.head; )
                                e.removeNode(e.head.value);
                            break
                        }
                        i = t.previous,
                        e.removeNode(t.value),
                        r(t.value)
                    }
                    let a = {
                        texts: this.texts.map(t => ({
                            id: this.mirror.getId(t.node),
                            value: t.value
                        })).filter(t => this.mirror.has(t.id)),
                        attributes: this.attributes.map(t => ({
                            id: this.mirror.getId(t.node),
                            attributes: t.attributes
                        })).filter(t => this.mirror.has(t.id)),
                        removes: this.removes,
                        adds: t
                    };
                    (a.texts.length || a.attributes.length || a.removes.length || a.adds.length) && (this.texts = [],
                    this.attributes = [],
                    this.removes = [],
                    this.addedSet = new Set,
                    this.movedSet = new Set,
                    this.droppedSet = new Set,
                    this.movedMap = {},
                    this.mutationCb(a))
                }
                ,
                this.processMutation = t => {
                    if (!tS(t.target))
                        switch (t.type) {
                        case "characterData":
                            {
                                let e = t.target.textContent;
                                tw(t.target, this.blockClass, this.blockSelector, this.unblockSelector) || e === t.oldValue || this.texts.push({
                                    value: tc(t.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextSelector, this.maskAllText) && e ? this.maskTextFn ? this.maskTextFn(e) : e.replace(/[\S]/g, "*") : e,
                                    node: t.target
                                });
                                break
                            }
                        case "attributes":
                            {
                                let e = t.target
                                  , n = e.getAttribute(t.attributeName);
                                if ("value" === t.attributeName && (n = W({
                                    input: e,
                                    maskInputSelector: this.maskInputSelector,
                                    unmaskInputSelector: this.unmaskInputSelector,
                                    maskInputOptions: this.maskInputOptions,
                                    tagName: e.tagName,
                                    type: e.getAttribute("type"),
                                    value: n,
                                    maskInputFn: this.maskInputFn
                                })),
                                tw(t.target, this.blockClass, this.blockSelector, this.unblockSelector) || n === t.oldValue)
                                    return;
                                let r = this.attributes.find(e => e.node === t.target);
                                if (r || (r = {
                                    node: t.target,
                                    attributes: {}
                                },
                                this.attributes.push(r)),
                                "type" === t.attributeName && "INPUT" === e.tagName && "password" === (t.oldValue || "").toLowerCase() && e.setAttribute("data-rr-is-password", "true"),
                                "style" === t.attributeName) {
                                    let n = this.doc.createElement("span");
                                    t.oldValue && n.setAttribute("style", t.oldValue),
                                    (void 0 === r.attributes.style || null === r.attributes.style) && (r.attributes.style = {});
                                    try {
                                        let t = r.attributes.style;
                                        for (let r of Array.from(e.style)) {
                                            let i = e.style.getPropertyValue(r)
                                              , a = e.style.getPropertyPriority(r);
                                            (i !== n.style.getPropertyValue(r) || a !== n.style.getPropertyPriority(r)) && ("" === a ? t[r] = i : t[r] = [i, a])
                                        }
                                        for (let r of Array.from(n.style))
                                            "" === e.style.getPropertyValue(r) && (t[r] = !1)
                                    } catch (t) {
                                        console.warn("[rrweb] Error when parsing update to style attribute:", t)
                                    }
                                } else {
                                    let e = t.target;
                                    r.attributes[t.attributeName] = tu(this.doc, e, e.tagName, t.attributeName, n, this.maskAllText, this.unmaskTextSelector, this.maskTextFn)
                                }
                                break
                            }
                        case "childList":
                            t.addedNodes.forEach(e => this.genAdds(e, t.target)),
                            t.removedNodes.forEach(e => {
                                let n = this.mirror.getId(e)
                                  , r = B(t.target) ? this.mirror.getId(t.target.host) : this.mirror.getId(t.target);
                                tw(t.target, this.blockClass, this.blockSelector, this.unblockSelector) || tS(e) || (this.addedSet.has(e) ? (tA(this.addedSet, e),
                                this.droppedSet.add(e)) : this.addedSet.has(t.target) && -1 === n || function t(e, n) {
                                    if (B(e))
                                        return !1;
                                    let r = n.getId(e);
                                    return !n.has(r) || (!e.parentNode || e.parentNode.nodeType !== e.DOCUMENT_NODE) && (!e.parentNode || t(e.parentNode, n))
                                }(t.target, this.mirror) || (this.movedSet.has(e) && this.movedMap[tO(n, r)] ? tA(this.movedSet, e) : this.removes.push({
                                    parentId: r,
                                    id: n,
                                    isShadow: !!B(t.target) || void 0
                                })),
                                this.mapRemoves.push(e))
                            }
                            )
                        }
                }
                ,
                this.genAdds = (t, e) => {
                    if (!(e && tw(e, this.blockClass, this.blockSelector, this.unblockSelector))) {
                        if ("__sn"in t) {
                            if (tS(t))
                                return;
                            this.movedSet.add(t);
                            let n = null;
                            e && "__sn"in e && (n = e.__sn.id),
                            n && (this.movedMap[tO(t.__sn.id, n)] = !0)
                        } else
                            this.addedSet.add(t),
                            this.droppedSet.delete(t);
                        tw(t, this.blockClass, this.blockSelector, this.unblockSelector) || t.childNodes.forEach(t => this.genAdds(t))
                    }
                }
            }
        }
        function tA(t, e) {
            t.delete(e),
            e.childNodes.forEach(e => tA(t, e))
        }
        function tR(t, e, n) {
            let {parentNode: r} = e;
            if (!r)
                return !1;
            let i = n.getId(r);
            return !!t.some(t => t.id === i) || tR(t, r, n)
        }
        function tD(t, e) {
            let {parentNode: n} = e;
            return !!n && (!!t.has(n) || tD(t, n))
        }
        let tI = t => function() {
            for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                n[r] = arguments[r];
            try {
                return t(...n)
            } catch (t) {
                try {
                    t.__rrweb__ = !0
                } catch (t) {}
                throw t
            }
        }
          , tP = [];
        function tM(t) {
            try {
                if ("composedPath"in t) {
                    let e = t.composedPath();
                    if (e.length)
                        return e[0]
                } else if ("path"in t && t.path.length)
                    return t.path[0]
            } catch (t) {}
            return t && t.target
        }
        function tN(t, e) {
            var n, r;
            let i = new tC;
            tP.push(i),
            i.init(t);
            let a = window.MutationObserver || window.__rrMutationObserver
              , o = null === (r = null === (n = null == window ? void 0 : window.Zone) || void 0 === n ? void 0 : n.__symbol__) || void 0 === r ? void 0 : r.call(n, "MutationObserver");
            o && window[o] && (a = window[o]);
            let s = new a(tI(e => {
                t.onMutation && !1 === t.onMutation(e) || i.processMutations(e)
            }
            ));
            return s.observe(e, {
                attributes: !0,
                attributeOldValue: !0,
                characterData: !0,
                characterDataOldValue: !0,
                childList: !0,
                subtree: !0
            }),
            s
        }
        function tL(t) {
            let {scrollCb: e, doc: n, mirror: r, blockClass: i, blockSelector: a, unblockSelector: o, sampling: s} = t
              , l = ty(t => {
                let s = tM(t);
                if (!s || tw(s, i, a, o))
                    return;
                let l = r.getId(s);
                if (s === n) {
                    let t = n.scrollingElement || n.documentElement;
                    tI(e)({
                        id: l,
                        x: t.scrollLeft,
                        y: t.scrollTop
                    })
                } else
                    tI(e)({
                        id: l,
                        x: s.scrollLeft,
                        y: s.scrollTop
                    })
            }
            , s.scroll || 100);
            return tf("scroll", tI(l), n)
        }
        function tj(t, e) {
            let n = Object.assign({}, t);
            return e || delete n.userTriggered,
            n
        }
        let tF = ["INPUT", "TEXTAREA", "SELECT"]
          , tV = new WeakMap;
        function tz(t) {
            return function(t, e) {
                if (tU("CSSGroupingRule") && t.parentRule instanceof CSSGroupingRule || tU("CSSMediaRule") && t.parentRule instanceof CSSMediaRule || tU("CSSSupportsRule") && t.parentRule instanceof CSSSupportsRule || tU("CSSConditionRule") && t.parentRule instanceof CSSConditionRule) {
                    let n = Array.from(t.parentRule.cssRules)
                      , r = n.indexOf(t);
                    e.unshift(r)
                } else {
                    let n = Array.from(t.parentStyleSheet.cssRules)
                      , r = n.indexOf(t);
                    e.unshift(r)
                }
                return e
            }(t, [])
        }
        function tq(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , n = t.doc.defaultView;
            if (!n)
                return () => {}
                ;
            !function(t, e) {
                let {mutationCb: n, mousemoveCb: r, mouseInteractionCb: i, scrollCb: a, viewportResizeCb: o, inputCb: s, mediaInteractionCb: l, styleSheetRuleCb: u, styleDeclarationCb: c, canvasMutationCb: h, fontCb: d} = t;
                t.mutationCb = function() {
                    for (var t = arguments.length, r = Array(t), i = 0; i < t; i++)
                        r[i] = arguments[i];
                    e.mutation && e.mutation(...r),
                    n(...r)
                }
                ,
                t.mousemoveCb = function() {
                    for (var t = arguments.length, n = Array(t), i = 0; i < t; i++)
                        n[i] = arguments[i];
                    e.mousemove && e.mousemove(...n),
                    r(...n)
                }
                ,
                t.mouseInteractionCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.mouseInteraction && e.mouseInteraction(...n),
                    i(...n)
                }
                ,
                t.scrollCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.scroll && e.scroll(...n),
                    a(...n)
                }
                ,
                t.viewportResizeCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.viewportResize && e.viewportResize(...n),
                    o(...n)
                }
                ,
                t.inputCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.input && e.input(...n),
                    s(...n)
                }
                ,
                t.mediaInteractionCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.mediaInteaction && e.mediaInteaction(...n),
                    l(...n)
                }
                ,
                t.styleSheetRuleCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.styleSheetRule && e.styleSheetRule(...n),
                    u(...n)
                }
                ,
                t.styleDeclarationCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.styleDeclaration && e.styleDeclaration(...n),
                    c(...n)
                }
                ,
                t.canvasMutationCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.canvasMutation && e.canvasMutation(...n),
                    h(...n)
                }
                ,
                t.fontCb = function() {
                    for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)
                        n[r] = arguments[r];
                    e.font && e.font(...n),
                    d(...n)
                }
            }(t, e);
            let r = tN(t, t.doc)
              , i = function(t) {
                let e, {mousemoveCb: n, sampling: r, doc: i, mirror: a} = t;
                if (!1 === r.mousemove)
                    return () => {}
                    ;
                let o = "number" == typeof r.mousemove ? r.mousemove : 50
                  , s = "number" == typeof r.mousemoveCallback ? r.mousemoveCallback : 500
                  , l = []
                  , u = ty(t => {
                    let r = Date.now() - e;
                    tI(n)(l.map(t => (t.timeOffset -= r,
                    t)), t),
                    l = [],
                    e = null
                }
                , s)
                  , c = ty(t => {
                    let n = tM(t)
                      , {clientX: r, clientY: i} = tk(t) ? t.changedTouches[0] : t;
                    e || (e = Date.now()),
                    l.push({
                        x: r,
                        y: i,
                        id: a.getId(n),
                        timeOffset: Date.now() - e
                    }),
                    u("undefined" != typeof DragEvent && t instanceof DragEvent ? v.Drag : t instanceof MouseEvent ? v.MouseMove : v.TouchMove)
                }
                , o, {
                    trailing: !1
                })
                  , h = [tf("mousemove", tI(c), i), tf("touchmove", tI(c), i), tf("drag", tI(c), i)];
                return tI( () => {
                    h.forEach(t => t())
                }
                )
            }(t)
              , a = function(t) {
                let {mouseInteractionCb: e, doc: n, mirror: r, blockClass: i, blockSelector: a, unblockSelector: o, sampling: s} = t;
                if (!1 === s.mouseInteraction)
                    return () => {}
                    ;
                let l = !0 === s.mouseInteraction || void 0 === s.mouseInteraction ? {} : s.mouseInteraction
                  , u = []
                  , c = t => n => {
                    let s = tM(n);
                    if (tw(s, i, a, o))
                        return;
                    let l = tk(n) ? n.changedTouches[0] : n;
                    if (!l)
                        return;
                    let u = r.getId(s)
                      , {clientX: c, clientY: h} = l;
                    tI(e)({
                        type: _[t],
                        id: u,
                        x: c,
                        y: h
                    })
                }
                ;
                return Object.keys(_).filter(t => Number.isNaN(Number(t)) && !t.endsWith("_Departed") && !1 !== l[t]).forEach(t => {
                    let e = t.toLowerCase()
                      , r = tI(c(t));
                    u.push(tf(e, r, n))
                }
                ),
                tI( () => {
                    u.forEach(t => t())
                }
                )
            }(t)
              , o = tL(t)
              , s = function(t) {
                let {viewportResizeCb: e} = t
                  , n = -1
                  , r = -1
                  , i = ty( () => {
                    let t = t_()
                      , i = tb();
                    (n !== t || r !== i) && (tI(e)({
                        width: Number(i),
                        height: Number(t)
                    }),
                    n = t,
                    r = i)
                }
                , 200);
                return tf("resize", tI(i), window)
            }(t)
              , l = function(t) {
                let {inputCb: e, doc: n, mirror: r, blockClass: i, blockSelector: a, unblockSelector: o, ignoreClass: s, ignoreSelector: l, maskInputSelector: u, unmaskInputSelector: c, maskInputOptions: h, maskInputFn: d, sampling: f, userTriggeredOnInput: p} = t;
                function m(t) {
                    let e = tM(t)
                      , r = e && e.tagName
                      , f = t.isTrusted;
                    if ("OPTION" === r && (e = e.parentElement),
                    !e || !r || 0 > tF.indexOf(r) || tw(e, i, a, o))
                        return;
                    let m = e
                      , g = Q(m);
                    if (m.classList.contains(s) || l && m.matches(l))
                        return;
                    let v = $(m, r, g)
                      , _ = !1;
                    ("radio" === g || "checkbox" === g) && (_ = e.checked),
                    function(t) {
                        let {tagName: e, type: n, maskInputOptions: r, maskInputSelector: i} = t;
                        return i || G({
                            maskInputOptions: r,
                            tagName: e,
                            type: n
                        })
                    }({
                        maskInputOptions: h,
                        maskInputSelector: u,
                        tagName: r,
                        type: g
                    }) && (v = W({
                        input: m,
                        maskInputOptions: h,
                        maskInputSelector: u,
                        unmaskInputSelector: c,
                        tagName: r,
                        type: g,
                        value: v,
                        maskInputFn: d
                    })),
                    y(e, tI(tj)({
                        text: v,
                        isChecked: _,
                        userTriggered: f
                    }, p));
                    let b = e.name;
                    "radio" === g && b && _ && n.querySelectorAll('input[type="radio"][name="'.concat(b, '"]')).forEach(t => {
                        if (t !== e) {
                            let e = W({
                                input: t,
                                maskInputOptions: h,
                                maskInputSelector: u,
                                unmaskInputSelector: c,
                                tagName: r,
                                type: g,
                                value: $(t, r, g),
                                maskInputFn: d
                            });
                            y(t, tI(tj)({
                                text: e,
                                isChecked: !_,
                                userTriggered: !1
                            }, p))
                        }
                    }
                    )
                }
                function y(t, n) {
                    let i = tV.get(t);
                    if (!i || i.text !== n.text || i.isChecked !== n.isChecked) {
                        tV.set(t, n);
                        let i = r.getId(t);
                        e(Object.assign(Object.assign({}, n), {
                            id: i
                        }))
                    }
                }
                let g = "last" === f.input ? ["change"] : ["input", "change"]
                  , v = g.map(t => tf(t, tI(m), n))
                  , _ = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, "value")
                  , b = [[HTMLInputElement.prototype, "value"], [HTMLInputElement.prototype, "checked"], [HTMLSelectElement.prototype, "value"], [HTMLTextAreaElement.prototype, "value"], [HTMLSelectElement.prototype, "selectedIndex"], [HTMLOptionElement.prototype, "selected"]];
                return _ && _.set && v.push(...b.map(t => tg(t[0], t[1], {
                    set() {
                        tI(m)({
                            target: this
                        })
                    }
                }))),
                tI( () => {
                    v.forEach(t => t())
                }
                )
            }(t)
              , u = function(t) {
                let {mediaInteractionCb: e, blockClass: n, blockSelector: r, unblockSelector: i, mirror: a, sampling: o} = t
                  , s = t => ty(tI(o => {
                    let s = tM(o);
                    if (!s || tw(s, n, r, i))
                        return;
                    let {currentTime: l, volume: u, muted: c} = s;
                    e({
                        type: t,
                        id: a.getId(s),
                        currentTime: l,
                        volume: u,
                        muted: c
                    })
                }
                ), o.media || 500)
                  , l = [tf("play", s(0)), tf("pause", s(1)), tf("seeked", s(2)), tf("volumechange", s(3))];
                return tI( () => {
                    l.forEach(t => t())
                }
                )
            }(t)
              , c = function(t, e) {
                let {styleSheetRuleCb: n, mirror: r} = t
                  , {win: i} = e;
                if (!i.CSSStyleSheet || !i.CSSStyleSheet.prototype)
                    return () => {}
                    ;
                let a = i.CSSStyleSheet.prototype.insertRule;
                i.CSSStyleSheet.prototype.insertRule = new Proxy(a,{
                    apply: tI( (t, e, i) => {
                        let[a,o] = i
                          , s = r.getId(e.ownerNode);
                        return -1 !== s && n({
                            id: s,
                            adds: [{
                                rule: a,
                                index: o
                            }]
                        }),
                        t.apply(e, i)
                    }
                    )
                });
                let o = i.CSSStyleSheet.prototype.deleteRule;
                i.CSSStyleSheet.prototype.deleteRule = new Proxy(o,{
                    apply: tI( (t, e, i) => {
                        let[a] = i
                          , o = r.getId(e.ownerNode);
                        return -1 !== o && n({
                            id: o,
                            removes: [{
                                index: a
                            }]
                        }),
                        t.apply(e, i)
                    }
                    )
                });
                let s = {};
                tB("CSSGroupingRule") ? s.CSSGroupingRule = i.CSSGroupingRule : (tB("CSSMediaRule") && (s.CSSMediaRule = i.CSSMediaRule),
                tB("CSSConditionRule") && (s.CSSConditionRule = i.CSSConditionRule),
                tB("CSSSupportsRule") && (s.CSSSupportsRule = i.CSSSupportsRule));
                let l = {};
                return Object.entries(s).forEach(t => {
                    let[e,i] = t;
                    l[e] = {
                        insertRule: i.prototype.insertRule,
                        deleteRule: i.prototype.deleteRule
                    },
                    i.prototype.insertRule = new Proxy(l[e].insertRule,{
                        apply: tI( (t, e, i) => {
                            let[a,o] = i
                              , s = r.getId(e.parentStyleSheet.ownerNode);
                            return -1 !== s && n({
                                id: s,
                                adds: [{
                                    rule: a,
                                    index: [...tz(e), o || 0]
                                }]
                            }),
                            t.apply(e, i)
                        }
                        )
                    }),
                    i.prototype.deleteRule = new Proxy(l[e].deleteRule,{
                        apply: tI( (t, e, i) => {
                            let[a] = i
                              , o = r.getId(e.parentStyleSheet.ownerNode);
                            return -1 !== o && n({
                                id: o,
                                removes: [{
                                    index: [...tz(e), a]
                                }]
                            }),
                            t.apply(e, i)
                        }
                        )
                    })
                }
                ),
                tI( () => {
                    i.CSSStyleSheet.prototype.insertRule = a,
                    i.CSSStyleSheet.prototype.deleteRule = o,
                    Object.entries(s).forEach(t => {
                        let[e,n] = t;
                        n.prototype.insertRule = l[e].insertRule,
                        n.prototype.deleteRule = l[e].deleteRule
                    }
                    )
                }
                )
            }(t, {
                win: n
            })
              , h = function(t, e) {
                let {styleDeclarationCb: n, mirror: r} = t
                  , {win: i} = e
                  , a = i.CSSStyleDeclaration.prototype.setProperty;
                i.CSSStyleDeclaration.prototype.setProperty = new Proxy(a,{
                    apply: tI( (t, e, i) => {
                        var a, o;
                        let[s,l,u] = i
                          , c = r.getId(null === (o = null === (a = e.parentRule) || void 0 === a ? void 0 : a.parentStyleSheet) || void 0 === o ? void 0 : o.ownerNode);
                        return -1 !== c && n({
                            id: c,
                            set: {
                                property: s,
                                value: l,
                                priority: u
                            },
                            index: tz(e.parentRule)
                        }),
                        t.apply(e, i)
                    }
                    )
                });
                let o = i.CSSStyleDeclaration.prototype.removeProperty;
                return i.CSSStyleDeclaration.prototype.removeProperty = new Proxy(o,{
                    apply: tI( (t, e, i) => {
                        var a, o;
                        let[s] = i
                          , l = r.getId(null === (o = null === (a = e.parentRule) || void 0 === a ? void 0 : a.parentStyleSheet) || void 0 === o ? void 0 : o.ownerNode);
                        return -1 !== l && n({
                            id: l,
                            remove: {
                                property: s
                            },
                            index: tz(e.parentRule)
                        }),
                        t.apply(e, i)
                    }
                    )
                }),
                tI( () => {
                    i.CSSStyleDeclaration.prototype.setProperty = a,
                    i.CSSStyleDeclaration.prototype.removeProperty = o
                }
                )
            }(t, {
                win: n
            })
              , d = t.collectFonts ? function(t) {
                let {fontCb: e, doc: n} = t
                  , r = n.defaultView;
                if (!r)
                    return () => {}
                    ;
                let i = []
                  , a = new WeakMap
                  , o = r.FontFace;
                r.FontFace = function(t, e, n) {
                    let r = new o(t,e,n);
                    return a.set(r, {
                        family: t,
                        buffer: "string" != typeof e,
                        descriptors: n,
                        fontSource: "string" == typeof e ? e : JSON.stringify(Array.from(new Uint8Array(e)))
                    }),
                    r
                }
                ;
                let s = tv(n.fonts, "add", function(t) {
                    return function(n) {
                        return setTimeout( () => {
                            let t = a.get(n);
                            t && (e(t),
                            a.delete(n))
                        }
                        , 0),
                        t.apply(this, [n])
                    }
                });
                return i.push( () => {
                    r.FontFace = o
                }
                ),
                i.push(s),
                tI( () => {
                    i.forEach(t => t())
                }
                )
            }(t) : () => {}
              , f = [];
            for (let e of t.plugins)
                f.push(e.observer(e.callback, n, e.options));
            return tI( () => {
                tP.forEach(t => t.reset()),
                r.disconnect(),
                i(),
                a(),
                o(),
                s(),
                l(),
                u();
                try {
                    c(),
                    h()
                } catch (t) {}
                d(),
                f.forEach(t => t())
            }
            )
        }
        function tU(t) {
            return void 0 !== window[t]
        }
        function tB(t) {
            return !!(void 0 !== window[t] && window[t].prototype && "insertRule"in window[t].prototype && "deleteRule"in window[t].prototype)
        }
        class tG {
            addIframe(t) {
                this.iframes.set(t, !0)
            }
            addLoadListener(t) {
                this.loadListener = t
            }
            attachIframe(t, e) {
                var n;
                this.mutationCb({
                    adds: [{
                        parentId: t.__sn.id,
                        nextId: null,
                        node: e
                    }],
                    removes: [],
                    texts: [],
                    attributes: [],
                    isAttachIframe: !0
                }),
                null === (n = this.loadListener) || void 0 === n || n.call(this, t)
            }
            constructor(t) {
                this.iframes = new WeakMap,
                this.mutationCb = t.mutationCb
            }
        }
        class tW {
            addShadowRoot(t, e) {
                tN(Object.assign(Object.assign({}, this.bypassOptions), {
                    doc: e,
                    mutationCb: this.mutationCb,
                    mirror: this.mirror,
                    shadowDomManager: this
                }), t),
                tL(Object.assign(Object.assign({}, this.bypassOptions), {
                    scrollCb: this.scrollCb,
                    doc: t,
                    mirror: this.mirror
                }))
            }
            observeAttachShadow(t) {
                if (t.contentWindow) {
                    let e = this;
                    this.restorePatches.push(tv(t.contentWindow.HTMLElement.prototype, "attachShadow", function(n) {
                        return function() {
                            let r = n.apply(this, arguments);
                            return this.shadowRoot && e.addShadowRoot(this.shadowRoot, t.contentDocument),
                            r
                        }
                    }))
                }
            }
            reset() {
                this.restorePatches.forEach(t => t())
            }
            constructor(t) {
                this.restorePatches = [],
                this.mutationCb = t.mutationCb,
                this.scrollCb = t.scrollCb,
                this.bypassOptions = t.bypassOptions,
                this.mirror = t.mirror;
                let e = this;
                this.restorePatches.push(tv(HTMLElement.prototype, "attachShadow", function(t) {
                    return function() {
                        let n = t.apply(this, arguments);
                        return this.shadowRoot && e.addShadowRoot(this.shadowRoot, this.ownerDocument),
                        n
                    }
                }))
            }
        }
        for (var tH = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", tQ = "undefined" == typeof Uint8Array ? [] : new Uint8Array(256), t$ = 0; t$ < tH.length; t$++)
            tQ[tH.charCodeAt(t$)] = t$;
        var tY = function(t) {
            var e, n = new Uint8Array(t), r = n.length, i = "";
            for (e = 0; e < r; e += 3)
                i += tH[n[e] >> 2] + tH[(3 & n[e]) << 4 | n[e + 1] >> 4] + tH[(15 & n[e + 1]) << 2 | n[e + 2] >> 6] + tH[63 & n[e + 2]];
            return r % 3 == 2 ? i = i.substring(0, i.length - 1) + "=" : r % 3 == 1 && (i = i.substring(0, i.length - 2) + "=="),
            i
        };
        let tZ = new Map
          , tJ = (t, e, n) => {
            let r;
            if (!t || !(tK(t, e) || "object" == typeof t))
                return;
            let i = t.constructor.name
              , a = ((r = tZ.get(n)) || (r = new Map,
            tZ.set(n, r)),
            r.has(i) || r.set(i, []),
            r.get(i))
              , o = a.indexOf(t);
            return -1 === o && (o = a.length,
            a.push(t)),
            o
        }
          , tX = (t, e, n) => [...t].map(t => (function t(e, n, r) {
            if (e instanceof Array)
                return e.map(e => t(e, n, r));
            if (null === e)
                ;
            else if (e instanceof Float32Array || e instanceof Float64Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Uint8Array || e instanceof Uint16Array || e instanceof Int16Array || e instanceof Int8Array || e instanceof Uint8ClampedArray) {
                let t = e.constructor.name;
                return {
                    rr_type: t,
                    args: [Object.values(e)]
                }
            } else if (e instanceof ArrayBuffer) {
                let t = e.constructor.name
                  , n = tY(e);
                return {
                    rr_type: t,
                    base64: n
                }
            } else if (e instanceof DataView) {
                let i = e.constructor.name;
                return {
                    rr_type: i,
                    args: [t(e.buffer, n, r), e.byteOffset, e.byteLength]
                }
            } else if (e instanceof HTMLImageElement) {
                let t = e.constructor.name
                  , {src: n} = e;
                return {
                    rr_type: t,
                    src: n
                }
            } else if (e instanceof ImageData) {
                let i = e.constructor.name;
                return {
                    rr_type: i,
                    args: [t(e.data, n, r), e.width, e.height]
                }
            } else if (tK(e, n) || "object" == typeof e) {
                let t = e.constructor.name
                  , i = tJ(e, n, r);
                return {
                    rr_type: t,
                    index: i
                }
            }
            return e
        }
        )(t, e, n))
          , tK = (t, e) => {
            let n = ["WebGLActiveInfo", "WebGLBuffer", "WebGLFramebuffer", "WebGLProgram", "WebGLRenderbuffer", "WebGLShader", "WebGLShaderPrecisionFormat", "WebGLTexture", "WebGLUniformLocation", "WebGLVertexArrayObject", "WebGLVertexArrayObjectOES"].filter(t => "function" == typeof e[t]);
            return !!n.find(n => t instanceof e[n])
        }
        ;
        function t0(t, e, n, r, i, a, o, s) {
            let l = []
              , u = Object.getOwnPropertyNames(t);
            for (let c of u)
                try {
                    if ("function" != typeof t[c])
                        continue;
                    let u = tv(t, c, function(l) {
                        return function() {
                            for (var u = arguments.length, h = Array(u), d = 0; d < u; d++)
                                h[d] = arguments[d];
                            let f = l.apply(this, h);
                            if (tJ(f, s, t),
                            !tw(this.canvas, r, a, i)) {
                                o.getId(this.canvas);
                                let r = tX([...h], s, t)
                                  , i = {
                                    type: e,
                                    property: c,
                                    args: r
                                };
                                n(this.canvas, i)
                            }
                            return f
                        }
                    });
                    l.push(u)
                } catch (i) {
                    let r = tg(t, c, {
                        set(t) {
                            n(this.canvas, {
                                type: e,
                                property: c,
                                args: [t],
                                setter: !0
                            })
                        }
                    });
                    l.push(r)
                }
            return l
        }
        class t1 {
            reset() {
                this.pendingCanvasMutations.clear(),
                this.resetObservers && this.resetObservers()
            }
            freeze() {
                this.frozen = !0
            }
            unfreeze() {
                this.frozen = !1
            }
            lock() {
                this.locked = !0
            }
            unlock() {
                this.locked = !1
            }
            initCanvasMutationObserver(t, e, n, r) {
                this.startRAFTimestamping(),
                this.startPendingCanvasMutationFlusher();
                let i = function(t, e, n, r) {
                    let i = [];
                    try {
                        let a = tv(t.HTMLCanvasElement.prototype, "getContext", function(t) {
                            return function(i) {
                                for (var a = arguments.length, o = Array(a > 1 ? a - 1 : 0), s = 1; s < a; s++)
                                    o[s - 1] = arguments[s];
                                return tw(this, e, n, r) || "__context"in this || (this.__context = i),
                                t.apply(this, [i, ...o])
                            }
                        });
                        i.push(a)
                    } catch (t) {
                        console.error("failed to patch HTMLCanvasElement.prototype.getContext")
                    }
                    return () => {
                        i.forEach(t => t())
                    }
                }(t, e, r, n)
                  , a = function(t, e, n, r, i, a) {
                    let o = []
                      , s = Object.getOwnPropertyNames(e.CanvasRenderingContext2D.prototype);
                    for (let a of s)
                        try {
                            if ("function" != typeof e.CanvasRenderingContext2D.prototype[a])
                                continue;
                            let s = tv(e.CanvasRenderingContext2D.prototype, a, function(e) {
                                return function() {
                                    for (var o = arguments.length, s = Array(o), l = 0; l < o; l++)
                                        s[l] = arguments[l];
                                    return tw(this.canvas, n, i, r) || setTimeout( () => {
                                        let e = [...s];
                                        if ("drawImage" === a && e[0] && e[0]instanceof HTMLCanvasElement) {
                                            let t = e[0]
                                              , n = t.getContext("2d")
                                              , r = null == n ? void 0 : n.getImageData(0, 0, t.width, t.height)
                                              , i = null == r ? void 0 : r.data;
                                            e[0] = JSON.stringify(i)
                                        }
                                        t(this.canvas, {
                                            type: b["2D"],
                                            property: a,
                                            args: e
                                        })
                                    }
                                    , 0),
                                    e.apply(this, s)
                                }
                            });
                            o.push(s)
                        } catch (r) {
                            let n = tg(e.CanvasRenderingContext2D.prototype, a, {
                                set(e) {
                                    t(this.canvas, {
                                        type: b["2D"],
                                        property: a,
                                        args: [e],
                                        setter: !0
                                    })
                                }
                            });
                            o.push(n)
                        }
                    return () => {
                        o.forEach(t => t())
                    }
                }(this.processMutation.bind(this), t, e, r, n, this.mirror)
                  , o = function(t, e, n, r, i, a) {
                    let o = [];
                    return o.push(...t0(e.WebGLRenderingContext.prototype, b.WebGL, t, n, r, i, a, e)),
                    void 0 !== e.WebGL2RenderingContext && o.push(...t0(e.WebGL2RenderingContext.prototype, b.WebGL2, t, n, r, i, a, e)),
                    () => {
                        o.forEach(t => t())
                    }
                }(this.processMutation.bind(this), t, e, r, n, this.mirror);
                this.resetObservers = () => {
                    i(),
                    a(),
                    o()
                }
            }
            startPendingCanvasMutationFlusher() {
                requestAnimationFrame( () => this.flushPendingCanvasMutations())
            }
            startRAFTimestamping() {
                let t = e => {
                    this.rafStamps.latestId = e,
                    requestAnimationFrame(t)
                }
                ;
                requestAnimationFrame(t)
            }
            flushPendingCanvasMutations() {
                this.pendingCanvasMutations.forEach( (t, e) => {
                    let n = this.mirror.getId(e);
                    this.flushPendingCanvasMutationFor(e, n)
                }
                ),
                requestAnimationFrame( () => this.flushPendingCanvasMutations())
            }
            flushPendingCanvasMutationFor(t, e) {
                if (this.frozen || this.locked)
                    return;
                let n = this.pendingCanvasMutations.get(t);
                if (!n || -1 === e)
                    return;
                let r = n.map(t => {
                    let e = function(t, e) {
                        var n = {};
                        for (var r in t)
                            Object.prototype.hasOwnProperty.call(t, r) && 0 > e.indexOf(r) && (n[r] = t[r]);
                        if (null != t && "function" == typeof Object.getOwnPropertySymbols)
                            for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
                                0 > e.indexOf(r[i]) && Object.prototype.propertyIsEnumerable.call(t, r[i]) && (n[r[i]] = t[r[i]]);
                        return n
                    }(t, ["type"]);
                    return e
                }
                )
                  , {type: i} = n[0];
                this.mutationCb({
                    id: e,
                    type: i,
                    commands: r
                }),
                this.pendingCanvasMutations.delete(t)
            }
            constructor(t) {
                this.pendingCanvasMutations = new Map,
                this.rafStamps = {
                    latestId: 0,
                    invokeId: null
                },
                this.frozen = !1,
                this.locked = !1,
                this.processMutation = function(t, e) {
                    let n = this.rafStamps.invokeId && this.rafStamps.latestId !== this.rafStamps.invokeId;
                    (n || !this.rafStamps.invokeId) && (this.rafStamps.invokeId = this.rafStamps.latestId),
                    this.pendingCanvasMutations.has(t) || this.pendingCanvasMutations.set(t, []),
                    this.pendingCanvasMutations.get(t).push(e)
                }
                ,
                this.mutationCb = t.mutationCb,
                this.mirror = t.mirror,
                !0 === t.recordCanvas && this.initCanvasMutationObserver(t.win, t.blockClass, t.blockSelector, t.unblockSelector)
            }
        }
        function t2(t) {
            return Object.assign(Object.assign({}, t), {
                timestamp: Date.now()
            })
        }
        let t5 = {
            map: {},
            getId: t => t && t.__sn ? t.__sn.id : -1,
            getNode(t) {
                return this.map[t] || null
            },
            removeNodeFromMap(t) {
                let e = t.__sn && t.__sn.id;
                delete this.map[e],
                t.childNodes && t.childNodes.forEach(t => this.removeNodeFromMap(t))
            },
            has(t) {
                return this.map.hasOwnProperty(t)
            },
            reset() {
                this.map = {}
            }
        };
        function t3() {
            let t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, {emit: n, checkoutEveryNms: r, checkoutEveryNth: i, blockClass: s="rr-block", blockSelector: l=null, unblockSelector: u=null, ignoreClass: c="rr-ignore", ignoreSelector: h=null, maskTextClass: d="rr-mask", maskTextSelector: f=null, maskInputSelector: p=null, unmaskTextSelector: m=null, unmaskInputSelector: y=null, inlineStylesheet: _=!0, maskAllText: b=!1, maskAllInputs: w, maskInputOptions: S, slimDOMOptions: k, maskInputFn: x, maskTextFn: E, hooks: T, packFn: O, sampling: C={}, mousemoveWait: A, recordCanvas: R=!1, userTriggeredOnInput: D=!1, collectFonts: I=!1, inlineImages: P=!1, plugins: M, keepIframeSrcFn: N= () => !1, onMutation: L} = e;
            if (!n)
                throw Error("emit function is required");
            void 0 !== A && void 0 === C.mousemove && (C.mousemove = A);
            let j = !0 === w ? {
                color: !0,
                date: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0,
                textarea: !0,
                select: !0,
                radio: !0,
                checkbox: !0
            } : void 0 !== S ? S : {}
              , F = !0 === k || "all" === k ? {
                script: !0,
                comment: !0,
                headFavicon: !0,
                headWhitespace: !0,
                headMetaSocial: !0,
                headMetaRobots: !0,
                headMetaHttpEquiv: !0,
                headMetaVerification: !0,
                headMetaAuthorship: "all" === k,
                headMetaDescKeywords: "all" === k
            } : k || {};
            !function() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : window;
                "NodeList"in t && !t.NodeList.prototype.forEach && (t.NodeList.prototype.forEach = Array.prototype.forEach),
                "DOMTokenList"in t && !t.DOMTokenList.prototype.forEach && (t.DOMTokenList.prototype.forEach = Array.prototype.forEach),
                Node.prototype.contains || (Node.prototype.contains = function(t) {
                    if (!(0 in arguments))
                        throw TypeError("1 argument is required");
                    do
                        if (this === t)
                            return !0;
                    while (t = t && t.parentNode);
                    return !1
                }
                )
            }();
            let V = 0
              , z = t => {
                for (let e of M || [])
                    e.eventProcessor && (t = e.eventProcessor(t));
                return O && (t = O(t)),
                t
            }
            ;
            a = (e, a) => {
                var s;
                if ((null === (s = tP[0]) || void 0 === s ? void 0 : s.isFrozen()) && e.type !== g.FullSnapshot && !(e.type === g.IncrementalSnapshot && e.data.source === v.Mutation) && tP.forEach(t => t.unfreeze()),
                n(z(e), a),
                e.type === g.FullSnapshot)
                    t = e,
                    V = 0;
                else if (e.type === g.IncrementalSnapshot) {
                    if (e.data.source === v.Mutation && e.data.isAttachIframe)
                        return;
                    V++;
                    let n = i && V >= i
                      , a = r && e.timestamp - t.timestamp > r;
                    (n || a) && o(!0)
                }
            }
            ;
            let q = t => {
                a(t2({
                    type: g.IncrementalSnapshot,
                    data: Object.assign({
                        source: v.Mutation
                    }, t)
                }))
            }
              , U = t => a(t2({
                type: g.IncrementalSnapshot,
                data: Object.assign({
                    source: v.Scroll
                }, t)
            }))
              , B = t => a(t2({
                type: g.IncrementalSnapshot,
                data: Object.assign({
                    source: v.CanvasMutation
                }, t)
            }))
              , G = new tG({
                mutationCb: q
            })
              , W = new t1({
                recordCanvas: R,
                mutationCb: B,
                win: window,
                blockClass: s,
                blockSelector: l,
                unblockSelector: u,
                mirror: t5
            })
              , H = new tW({
                mutationCb: q,
                scrollCb: U,
                bypassOptions: {
                    onMutation: L,
                    blockClass: s,
                    blockSelector: l,
                    unblockSelector: u,
                    maskTextClass: d,
                    maskTextSelector: f,
                    unmaskTextSelector: m,
                    maskInputSelector: p,
                    unmaskInputSelector: y,
                    inlineStylesheet: _,
                    maskAllText: b,
                    maskInputOptions: j,
                    maskTextFn: E,
                    maskInputFn: x,
                    recordCanvas: R,
                    inlineImages: P,
                    sampling: C,
                    slimDOMOptions: F,
                    iframeManager: G,
                    canvasManager: W
                },
                mirror: t5
            });
            o = function() {
                var t, e, n, r;
                let i = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                a(t2({
                    type: g.Meta,
                    data: {
                        href: window.location.href,
                        width: tb(),
                        height: t_()
                    }
                }), i),
                tP.forEach(t => t.lock());
                let[o,c] = function(t, e) {
                    let {blockClass: n="rr-block", blockSelector: r=null, unblockSelector: i=null, maskTextClass: a="rr-mask", maskTextSelector: o=null, unmaskTextSelector: s=null, inlineStylesheet: l=!0, inlineImages: u=!1, recordCanvas: c=!1, maskInputSelector: h=null, unmaskInputSelector: d=null, maskAllText: f=!1, maskAllInputs: p=!1, maskTextFn: m, maskInputFn: y, slimDOM: g=!1, dataURLOptions: v, preserveWhiteSpace: _, onSerialize: b, onIframeLoad: w, iframeLoadTimeout: S, keepIframeSrcFn: k= () => !1} = e || {}
                      , x = {}
                      , E = !0 === p ? {
                        color: !0,
                        date: !0,
                        "datetime-local": !0,
                        email: !0,
                        month: !0,
                        number: !0,
                        range: !0,
                        search: !0,
                        tel: !0,
                        text: !0,
                        time: !0,
                        url: !0,
                        week: !0,
                        textarea: !0,
                        select: !0
                    } : !1 === p ? {} : p
                      , T = !0 === g || "all" === g ? {
                        script: !0,
                        comment: !0,
                        headFavicon: !0,
                        headWhitespace: !0,
                        headMetaDescKeywords: "all" === g,
                        headMetaSocial: !0,
                        headMetaRobots: !0,
                        headMetaHttpEquiv: !0,
                        headMetaAuthorship: !0,
                        headMetaVerification: !0
                    } : !1 === g ? {} : g;
                    return [td(t, {
                        doc: t,
                        map: x,
                        blockClass: n,
                        blockSelector: r,
                        unblockSelector: i,
                        maskTextClass: a,
                        maskTextSelector: o,
                        unmaskTextSelector: s,
                        skipChild: !1,
                        inlineStylesheet: l,
                        maskInputSelector: h,
                        unmaskInputSelector: d,
                        maskAllText: f,
                        maskInputOptions: E,
                        maskTextFn: m,
                        maskInputFn: y,
                        slimDOMOptions: T,
                        dataURLOptions: v,
                        inlineImages: u,
                        recordCanvas: c,
                        preserveWhiteSpace: _,
                        onSerialize: b,
                        onIframeLoad: w,
                        iframeLoadTimeout: S,
                        keepIframeSrcFn: k
                    }), x]
                }(document, {
                    blockClass: s,
                    blockSelector: l,
                    unblockSelector: u,
                    maskTextClass: d,
                    maskTextSelector: f,
                    unmaskTextSelector: m,
                    maskInputSelector: p,
                    unmaskInputSelector: y,
                    inlineStylesheet: _,
                    maskAllText: b,
                    maskAllInputs: j,
                    maskTextFn: E,
                    slimDOM: F,
                    recordCanvas: R,
                    inlineImages: P,
                    onSerialize: t => {
                        tx(t) && G.addIframe(t),
                        tE(t) && H.addShadowRoot(t.shadowRoot, document)
                    }
                    ,
                    onIframeLoad: (t, e) => {
                        G.attachIframe(t, e),
                        H.observeAttachShadow(t)
                    }
                    ,
                    keepIframeSrcFn: N
                });
                if (!o)
                    return console.warn("Failed to snapshot the document");
                t5.map = c,
                a(t2({
                    type: g.FullSnapshot,
                    data: {
                        node: o,
                        initialOffset: {
                            left: void 0 !== window.pageXOffset ? window.pageXOffset : (null == document ? void 0 : document.documentElement.scrollLeft) || (null === (e = null === (t = null == document ? void 0 : document.body) || void 0 === t ? void 0 : t.parentElement) || void 0 === e ? void 0 : e.scrollLeft) || (null == document ? void 0 : document.body.scrollLeft) || 0,
                            top: void 0 !== window.pageYOffset ? window.pageYOffset : (null == document ? void 0 : document.documentElement.scrollTop) || (null === (r = null === (n = null == document ? void 0 : document.body) || void 0 === n ? void 0 : n.parentElement) || void 0 === r ? void 0 : r.scrollTop) || (null == document ? void 0 : document.body.scrollTop) || 0
                        }
                    }
                })),
                tP.forEach(t => t.unlock())
            }
            ;
            try {
                let t = [];
                t.push(tf("DOMContentLoaded", () => {
                    a(t2({
                        type: g.DomContentLoaded,
                        data: {}
                    }))
                }
                ));
                let e = t => {
                    var e;
                    return tI(tq)({
                        onMutation: L,
                        mutationCb: q,
                        mousemoveCb: (t, e) => a(t2({
                            type: g.IncrementalSnapshot,
                            data: {
                                source: e,
                                positions: t
                            }
                        })),
                        mouseInteractionCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.MouseInteraction
                            }, t)
                        })),
                        scrollCb: U,
                        viewportResizeCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.ViewportResize
                            }, t)
                        })),
                        inputCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.Input
                            }, t)
                        })),
                        mediaInteractionCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.MediaInteraction
                            }, t)
                        })),
                        styleSheetRuleCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.StyleSheetRule
                            }, t)
                        })),
                        styleDeclarationCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.StyleDeclaration
                            }, t)
                        })),
                        canvasMutationCb: B,
                        fontCb: t => a(t2({
                            type: g.IncrementalSnapshot,
                            data: Object.assign({
                                source: v.Font
                            }, t)
                        })),
                        blockClass: s,
                        ignoreClass: c,
                        ignoreSelector: h,
                        maskTextClass: d,
                        maskTextSelector: f,
                        unmaskTextSelector: m,
                        maskInputSelector: p,
                        unmaskInputSelector: y,
                        maskInputOptions: j,
                        inlineStylesheet: _,
                        sampling: C,
                        recordCanvas: R,
                        inlineImages: P,
                        userTriggeredOnInput: D,
                        collectFonts: I,
                        doc: t,
                        maskAllText: b,
                        maskInputFn: x,
                        maskTextFn: E,
                        blockSelector: l,
                        unblockSelector: u,
                        slimDOMOptions: F,
                        mirror: t5,
                        iframeManager: G,
                        shadowDomManager: H,
                        canvasManager: W,
                        plugins: (null === (e = null == M ? void 0 : M.filter(t => t.observer)) || void 0 === e ? void 0 : e.map(t => ({
                            observer: t.observer,
                            options: t.options,
                            callback: e => a(t2({
                                type: g.Plugin,
                                data: {
                                    plugin: t.name,
                                    payload: e
                                }
                            }))
                        }))) || []
                    }, T)
                }
                ;
                G.addLoadListener(n => {
                    try {
                        t.push(e(n.contentDocument))
                    } catch (t) {
                        console.warn(t)
                    }
                }
                );
                let n = () => {
                    o(),
                    t.push(e(document))
                }
                ;
                return "interactive" === document.readyState || "complete" === document.readyState ? n() : t.push(tf("load", () => {
                    a(t2({
                        type: g.Load,
                        data: {}
                    })),
                    n()
                }
                , window)),
                () => {
                    t.forEach(t => t())
                }
            } catch (t) {
                console.warn(t)
            }
        }
        function t6(t) {
            return t > 9999999999 ? t : 1e3 * t
        }
        function t4(t, e) {
            "sentry.transaction" !== e.category && (["ui.click", "ui.input"].includes(e.category) ? t.triggerUserActivity() : t.checkAndHandleExpiredSession(),
            t.addUpdate( () => (t.throttledAddEvent({
                type: g.Custom,
                timestamp: 1e3 * (e.timestamp || 0),
                data: {
                    tag: "breadcrumb",
                    payload: (0,
                    R.Fv)(e, 10, 1e3)
                }
            }),
            "console" === e.category)))
        }
        function t8(t) {
            let e = t9(t);
            if (!e || !(e instanceof Element))
                return e;
            let n = e.closest("button,a");
            return n || e
        }
        function t9(t) {
            return "object" == typeof t && t && "target"in t ? t.target : t
        }
        t3.addCustomEvent = (t, e) => {
            if (!a)
                throw Error("please add custom event after start recording");
            a(t2({
                type: g.Custom,
                data: {
                    tag: t,
                    payload: e
                }
            }))
        }
        ,
        t3.freezePage = () => {
            tP.forEach(t => t.freeze())
        }
        ,
        t3.takeFullSnapshot = t => {
            if (!o)
                throw Error("please take full snapshot after start recording");
            o(t)
        }
        ,
        t3.mirror = t5;
        class t7 {
            addListeners() {
                var t;
                let e = () => {
                    this._lastScroll = ee()
                }
                  , n = (t = () => {
                    this._lastMutation = ee()
                }
                ,
                s || (s = [],
                (0,
                D.hl)(z, "open", function(t) {
                    return function() {
                        for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                            n[r] = arguments[r];
                        if (s)
                            try {
                                s.forEach(t => t())
                            } catch (t) {}
                        return t.apply(z, n)
                    }
                })),
                s.push(t),
                () => {
                    let e = s ? s.indexOf(t) : -1;
                    e > -1 && s.splice(e, 1)
                }
                )
                  , r = t => {
                    if (!t.target)
                        return;
                    let e = t8(t);
                    e && this._handleMultiClick(e)
                }
                  , i = new MutationObserver( () => {
                    this._lastMutation = ee()
                }
                );
                i.observe(z.document.documentElement, {
                    attributes: !0,
                    characterData: !0,
                    childList: !0,
                    subtree: !0
                }),
                z.addEventListener("scroll", e, {
                    passive: !0
                }),
                z.addEventListener("click", r, {
                    passive: !0
                }),
                this._teardown = () => {
                    z.removeEventListener("scroll", e),
                    z.removeEventListener("click", r),
                    n(),
                    i.disconnect(),
                    this._clicks = [],
                    this._lastMutation = 0,
                    this._lastScroll = 0
                }
            }
            removeListeners() {
                this._teardown && this._teardown(),
                this._checkClickTimeout && clearTimeout(this._checkClickTimeout)
            }
            handleClick(t, e) {
                var n, r;
                if (r = this._ignoreSelector,
                !et.includes(e.tagName) || "INPUT" === e.tagName && !["submit", "button"].includes(e.getAttribute("type") || "") || "A" === e.tagName && (e.hasAttribute("download") || e.hasAttribute("target") && "_self" !== e.getAttribute("target")) || r && e.matches(r) || !(t.data && "number" == typeof t.data.nodeId && t.timestamp))
                    return;
                let i = {
                    timestamp: (n = t.timestamp) > 9999999999 ? n / 1e3 : n,
                    clickBreadcrumb: t,
                    clickCount: 0,
                    node: e
                };
                this._clicks.push(i),
                1 === this._clicks.length && this._scheduleCheckClicks()
            }
            _handleMultiClick(t) {
                this._getClicks(t).forEach(t => {
                    t.clickCount++
                }
                )
            }
            _getClicks(t) {
                return this._clicks.filter(e => e.node === t)
            }
            _checkClicks() {
                let t = []
                  , e = ee();
                for (let n of (this._clicks.forEach(n => {
                    !n.mutationAfter && this._lastMutation && (n.mutationAfter = n.timestamp <= this._lastMutation ? this._lastMutation - n.timestamp : void 0),
                    !n.scrollAfter && this._lastScroll && (n.scrollAfter = n.timestamp <= this._lastScroll ? this._lastScroll - n.timestamp : void 0),
                    n.timestamp + this._timeout <= e && t.push(n)
                }
                ),
                t)) {
                    let t = this._clicks.indexOf(n);
                    t > -1 && (this._generateBreadcrumbs(n),
                    this._clicks.splice(t, 1))
                }
                this._clicks.length && this._scheduleCheckClicks()
            }
            _generateBreadcrumbs(t) {
                let e = this._replay
                  , n = t.scrollAfter && t.scrollAfter <= this._scollTimeout
                  , r = t.mutationAfter && t.mutationAfter <= this._threshold
                  , {clickCount: i, clickBreadcrumb: a} = t;
                if (!n && !r) {
                    let n = 1e3 * Math.min(t.mutationAfter || this._timeout, this._timeout)
                      , r = n < 1e3 * this._timeout ? "mutation" : "timeout"
                      , o = {
                        type: "default",
                        message: a.message,
                        timestamp: a.timestamp,
                        category: "ui.slowClickDetected",
                        data: {
                            ...a.data,
                            url: z.location.href,
                            route: e.getCurrentRoute(),
                            timeAfterClickMs: n,
                            endReason: r,
                            clickCount: i || 1
                        }
                    };
                    this._addBreadcrumbEvent(e, o);
                    return
                }
                if (i > 1) {
                    let t = {
                        type: "default",
                        message: a.message,
                        timestamp: a.timestamp,
                        category: "ui.multiClick",
                        data: {
                            ...a.data,
                            url: z.location.href,
                            route: e.getCurrentRoute(),
                            clickCount: i,
                            metric: !0
                        }
                    };
                    this._addBreadcrumbEvent(e, t)
                }
            }
            _scheduleCheckClicks() {
                this._checkClickTimeout && clearTimeout(this._checkClickTimeout),
                this._checkClickTimeout = setTimeout( () => this._checkClicks(), 1e3)
            }
            constructor(t, e, n=t4) {
                this._lastMutation = 0,
                this._lastScroll = 0,
                this._clicks = [],
                this._timeout = e.timeout / 1e3,
                this._threshold = e.threshold / 1e3,
                this._scollTimeout = e.scrollTimeout / 1e3,
                this._replay = t,
                this._ignoreSelector = e.ignoreSelector,
                this._addBreadcrumbEvent = n
            }
        }
        let et = ["A", "BUTTON", "INPUT"];
        function ee() {
            return Date.now() / 1e3
        }
        function en(t) {
            return {
                timestamp: Date.now() / 1e3,
                type: "default",
                ...t
            }
        }
        (m = k || (k = {}))[m.Document = 0] = "Document",
        m[m.DocumentType = 1] = "DocumentType",
        m[m.Element = 2] = "Element",
        m[m.Text = 3] = "Text",
        m[m.CDATA = 4] = "CDATA",
        m[m.Comment = 5] = "Comment";
        let er = new Set(["id", "class", "aria-label", "role", "name", "alt", "title", "data-test-id", "data-testid", "disabled", "aria-disabled"])
          , ei = t => e => {
            if (!t.isEnabled())
                return;
            let n = function(t) {
                let {target: e, message: n} = function(t) {
                    let e;
                    let n = "click" === t.name
                      , r = null;
                    try {
                        r = n ? t8(t.event) : t9(t.event),
                        e = (0,
                        I.Rt)(r, {
                            maxStringLength: 200
                        }) || "<unknown>"
                    } catch (t) {
                        e = "<unknown>"
                    }
                    return {
                        target: r,
                        message: e
                    }
                }(t);
                return en({
                    category: "ui.".concat(t.name),
                    ...ea(e, n)
                })
            }(e);
            if (!n)
                return;
            let r = "click" === e.name
              , i = r && e.event;
            !r || !t.clickDetector || !i || i.altKey || i.metaKey || i.ctrlKey || i.shiftKey || function(t, e, n) {
                t.handleClick(e, n)
            }(t.clickDetector, n, t8(e.event)),
            t4(t, n)
        }
        ;
        function ea(t, e) {
            let n = t && "__sn"in t && t.__sn.type === k.Element ? t.__sn : null;
            return {
                message: e,
                data: n ? {
                    nodeId: n.id,
                    node: {
                        id: n.id,
                        tagName: n.tagName,
                        textContent: t ? Array.from(t.childNodes).map(t => "__sn"in t && t.__sn.type === k.Text && t.__sn.textContent).filter(Boolean).map(t => t.trim()).join("") : "",
                        attributes: function(t) {
                            let e = {};
                            for (let n in t)
                                if (er.has(n)) {
                                    let r = n;
                                    ("data-testid" === n || "data-test-id" === n) && (r = "testId"),
                                    e[r] = t[n]
                                }
                            return e
                        }(n.attributes)
                    }
                } : {}
            }
        }
        let eo = ["name", "type", "startTime", "transferSize", "duration"];
        function es(t) {
            return function(e) {
                return eo.every(n => t[n] === e[n])
            }
        }
        class el extends Error {
            constructor() {
                super("Event buffer exceeded maximum size of ".concat(2e7, "."))
            }
        }
        class eu {
            get hasEvents() {
                return this.events.length > 0
            }
            get type() {
                return "sync"
            }
            destroy() {
                this.events = []
            }
            async addEvent(t) {
                let e = JSON.stringify(t).length;
                if (this._totalSize += e,
                this._totalSize > 2e7)
                    throw new el;
                this.events.push(t)
            }
            finish() {
                return new Promise(t => {
                    let e = this.events;
                    this.clear(),
                    t(JSON.stringify(e))
                }
                )
            }
            clear() {
                this.events = [],
                this._totalSize = 0
            }
            getEarliestTimestamp() {
                let t = this.events.map(t => t.timestamp).sort()[0];
                return t ? t6(t) : null
            }
            constructor() {
                this.events = [],
                this._totalSize = 0
            }
        }
        class ec {
            ensureReady() {
                return this._ensureReadyPromise || (this._ensureReadyPromise = new Promise( (t, e) => {
                    this._worker.addEventListener("message", n => {
                        let {data: r} = n;
                        r.success ? t() : e()
                    }
                    , {
                        once: !0
                    }),
                    this._worker.addEventListener("error", t => {
                        e(t)
                    }
                    , {
                        once: !0
                    })
                }
                )),
                this._ensureReadyPromise
            }
            destroy() {
                this._worker.terminate()
            }
            postMessage(t, e) {
                let n = this._getAndIncrementId();
                return new Promise( (r, i) => {
                    let a = e => {
                        let {data: o} = e;
                        if (o.method === t && o.id === n) {
                            if (this._worker.removeEventListener("message", a),
                            !o.success) {
                                i(Error("Error in compression worker"));
                                return
                            }
                            r(o.response)
                        }
                    }
                    ;
                    this._worker.addEventListener("message", a),
                    this._worker.postMessage({
                        id: n,
                        method: t,
                        arg: e
                    })
                }
                )
            }
            _getAndIncrementId() {
                return this._id++
            }
            constructor(t) {
                this._worker = t,
                this._id = 0
            }
        }
        class eh {
            get hasEvents() {
                return !!this._earliestTimestamp
            }
            get type() {
                return "worker"
            }
            ensureReady() {
                return this._worker.ensureReady()
            }
            destroy() {
                this._worker.destroy()
            }
            addEvent(t) {
                let e = t6(t.timestamp);
                (!this._earliestTimestamp || e < this._earliestTimestamp) && (this._earliestTimestamp = e);
                let n = JSON.stringify(t);
                return (this._totalSize += n.length,
                this._totalSize > 2e7) ? Promise.reject(new el) : this._sendEventToWorker(n)
            }
            finish() {
                return this._finishRequest()
            }
            clear() {
                this._earliestTimestamp = null,
                this._totalSize = 0,
                this._worker.postMessage("clear")
            }
            getEarliestTimestamp() {
                return this._earliestTimestamp
            }
            _sendEventToWorker(t) {
                return this._worker.postMessage("addEvent", t)
            }
            async _finishRequest() {
                let t = await this._worker.postMessage("finish");
                return this._earliestTimestamp = null,
                this._totalSize = 0,
                t
            }
            constructor(t) {
                this._worker = new ec(t),
                this._earliestTimestamp = null,
                this._totalSize = 0
            }
        }
        class ed {
            get type() {
                return this._used.type
            }
            get hasEvents() {
                return this._used.hasEvents
            }
            destroy() {
                this._fallback.destroy(),
                this._compression.destroy()
            }
            clear() {
                return this._used.clear()
            }
            getEarliestTimestamp() {
                return this._used.getEarliestTimestamp()
            }
            addEvent(t) {
                return this._used.addEvent(t)
            }
            async finish() {
                return await this.ensureWorkerIsLoaded(),
                this._used.finish()
            }
            ensureWorkerIsLoaded() {
                return this._ensureWorkerIsLoadedPromise
            }
            async _ensureWorkerIsLoaded() {
                try {
                    await this._compression.ensureReady()
                } catch (t) {
                    return
                }
                await this._switchToCompressionWorker()
            }
            async _switchToCompressionWorker() {
                let {events: t} = this._fallback
                  , e = [];
                for (let n of t)
                    e.push(this._compression.addEvent(n));
                this._used = this._compression;
                try {
                    await Promise.all(e)
                } catch (t) {}
            }
            constructor(t) {
                this._fallback = new eu,
                this._compression = new eh(t),
                this._used = this._fallback,
                this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded()
            }
        }
        function ef() {
            try {
                return "sessionStorage"in z && !!z.sessionStorage
            } catch (t) {
                return !1
            }
        }
        function ep(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : +new Date;
            return null === t || void 0 === e || e < 0 || 0 !== e && t + e <= n
        }
        function em(t, e) {
            let n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : +new Date;
            return ep(t.started, e.maxSessionLife, n) || ep(t.lastActivity, e.sessionIdleExpire, n)
        }
        function ey(t) {
            return void 0 !== t && Math.random() < t
        }
        function eg(t) {
            if (ef())
                try {
                    z.sessionStorage.setItem(q, JSON.stringify(t))
                } catch (t) {}
        }
        function ev(t) {
            let e = Date.now()
              , n = t.id || (0,
            P.DM)()
              , r = t.started || e
              , i = t.lastActivity || e
              , a = t.segmentId || 0
              , o = t.sampled
              , s = "boolean" != typeof t.shouldRefresh || t.shouldRefresh;
            return {
                id: n,
                started: r,
                lastActivity: i,
                segmentId: a,
                sampled: o,
                shouldRefresh: s
            }
        }
        function e_(t) {
            let {timeouts: e, currentSession: n, stickySession: r, sessionSampleRate: i, allowBuffering: a, traceInternals: o} = t
              , s = n || r && function(t) {
                if (!ef())
                    return null;
                try {
                    let t = z.sessionStorage.getItem(q);
                    if (!t)
                        return null;
                    let e = JSON.parse(t);
                    return ev(e)
                } catch (t) {
                    return null
                }
            }(0);
            if (s) {
                let t = em(s, e);
                if (!t || a && s.shouldRefresh)
                    return {
                        type: "saved",
                        session: s
                    };
                if (s.shouldRefresh)
                    ;
                else {
                    let t = ev({
                        sampled: !1
                    });
                    return {
                        type: "new",
                        session: t
                    }
                }
            }
            let l = function(t) {
                let {sessionSampleRate: e, allowBuffering: n, stickySession: r=!1} = t
                  , i = ey(e) ? "session" : !!n && "buffer"
                  , a = ev({
                    sampled: i
                });
                return r && eg(a),
                a
            }({
                stickySession: r,
                sessionSampleRate: i,
                allowBuffering: a
            });
            return {
                type: "new",
                session: l
            }
        }
        async function eb(t, e, n) {
            if (!t.eventBuffer || t.isPaused())
                return null;
            let r = t6(e.timestamp);
            if (r + t.timeouts.sessionIdlePause < Date.now())
                return null;
            try {
                n && t.eventBuffer.clear();
                let r = t.getOptions()
                  , i = function(t, e) {
                    try {
                        if ("function" == typeof e && t.type === g.Custom)
                            return e(t)
                    } catch (t) {
                        return null
                    }
                    return t
                }(e, r.beforeAddRecordingEvent);
                if (!i)
                    return;
                return await t.eventBuffer.addEvent(i)
            } catch (r) {
                let e = r && r instanceof el ? "addEventSizeExceeded" : "addEvent";
                await t.stop(e);
                let n = (0,
                E.Gd)().getClient();
                n && n.recordDroppedEvent("internal_sdk_error", "replay")
            }
        }
        function ew(t) {
            return "transaction" === t.type
        }
        function eS(t) {
            let e = function() {
                let t = (0,
                E.Gd)().getClient();
                if (!t)
                    return !1;
                let e = t.getTransport();
                return !!e && (e.send.__sentry__baseTransport__ || !1)
            }();
            return (n, r) => {
                if (!t.isEnabled() || n.type && !ew(n))
                    return;
                let i = r && r.statusCode;
                if (!e || i && !(i < 200) && !(i >= 300)) {
                    if (ew(n)) {
                        !function(t, e) {
                            let n = t.getContext();
                            e.contexts && e.contexts.trace && e.contexts.trace.trace_id && n.traceIds.size < 100 && n.traceIds.add(e.contexts.trace.trace_id)
                        }(t, n);
                        return
                    }
                    !function(t, e) {
                        let n = t.getContext();
                        e.event_id && n.errorIds.size < 100 && n.errorIds.add(e.event_id),
                        "buffer" === t.recordingMode && e.tags && e.tags.replayId && setTimeout( () => {
                            t.sendBufferedReplayOrFlush()
                        }
                        )
                    }(t, n)
                }
            }
        }
        function ek(t, e) {
            return e.map(e => {
                let {type: n, start: r, end: i, name: a, data: o} = e
                  , s = t.throttledAddEvent({
                    type: g.Custom,
                    timestamp: r,
                    data: {
                        tag: "performanceSpan",
                        payload: {
                            op: n,
                            description: a,
                            startTimestamp: r,
                            endTimestamp: i,
                            data: o
                        }
                    }
                });
                return "string" == typeof s ? Promise.resolve(null) : s
            }
            )
        }
        function ex(t, e) {
            t.isEnabled() && null !== e && !function(t) {
                let e = (0,
                E.Gd)().getClient()
                  , n = e && e.getDsn();
                return !!n && t.includes(n.host)
            }(e.name) && t.addUpdate( () => (ek(t, [e]),
            !0))
        }
        let eE = ["true", "false", "null"];
        function eT(t) {
            let e = function(t) {
                let e = [];
                for (let n = 0; n < t.length; n++)
                    !function(t, e, n) {
                        let r = t[t.length - 1]
                          , i = e[n];
                        if (!/\s/.test(i)) {
                            if ('"' === i && !function t(e, n) {
                                let r = e[n - 1];
                                return "\\" === r && !t(e, n - 1)
                            }(e, n)) {
                                !function(t, e) {
                                    if (14 === e) {
                                        t.pop(),
                                        t.push(15);
                                        return
                                    }
                                    if (22 === e) {
                                        t.pop(),
                                        t.push(23);
                                        return
                                    }
                                    if (13 === e) {
                                        t.push(14);
                                        return
                                    }
                                    if (21 === e) {
                                        t.push(22);
                                        return
                                    }
                                    if (10 === e) {
                                        t.push(12);
                                        return
                                    }
                                    12 === e && (t.pop(),
                                    t.push(11))
                                }(t, r);
                                return
                            }
                            switch (i) {
                            case "{":
                                !function(t, e) {
                                    if (!e || 13 === e) {
                                        t.push(10);
                                        return
                                    }
                                    21 === e && t.push(10),
                                    20 === e && t.push(10)
                                }(t, r);
                                break;
                            case "[":
                                !function(t, e) {
                                    if (!e || 13 === e) {
                                        t.push(20),
                                        t.push(21);
                                        return
                                    }
                                    21 === e && (t.push(20),
                                    t.push(21)),
                                    20 === e && (t.push(20),
                                    t.push(21))
                                }(t, r);
                                break;
                            case ":":
                                11 === r && (t.pop(),
                                t.push(13));
                                break;
                            case ",":
                                !function(t, e) {
                                    if (13 === e) {
                                        t.pop();
                                        return
                                    }
                                    if (15 === e) {
                                        t.pop(),
                                        t.pop();
                                        return
                                    }
                                    21 !== e && 23 === e && t.pop()
                                }(t, r);
                                break;
                            case "}":
                                10 === r && t.pop(),
                                13 === r && (t.pop(),
                                t.pop()),
                                15 === r && (t.pop(),
                                t.pop(),
                                t.pop()),
                                13 === t[t.length - 1] && t.push(15),
                                21 === t[t.length - 1] && t.push(23);
                                break;
                            case "]":
                                20 === r && t.pop(),
                                21 === r && (t.pop(),
                                t.pop()),
                                23 === r && (t.pop(),
                                t.pop(),
                                t.pop()),
                                13 === t[t.length - 1] && t.push(15),
                                21 === t[t.length - 1] && t.push(23)
                            }
                        }
                    }(e, t, n);
                return e
            }(t);
            return function(t, e) {
                if (!e.length)
                    return t;
                let n = t
                  , r = e.length - 1
                  , i = e[r];
                n = function(t, e) {
                    switch (e) {
                    case 10:
                        return "".concat(t, '"~~":"~~"');
                    case 11:
                        return "".concat(t, ':"~~"');
                    case 12:
                        return "".concat(t, '~~":"~~"');
                    case 13:
                        return function(t) {
                            let e = t.lastIndexOf(":")
                              , n = t.slice(e + 1);
                            return eE.includes(n.trim()) ? "".concat(t, ',"~~":"~~"') : "".concat(t.slice(0, e + 1), '"~~"')
                        }(t);
                    case 14:
                    case 22:
                        return "".concat(t, '~~"');
                    case 15:
                        return "".concat(t, ',"~~":"~~"');
                    case 20:
                        return "".concat(t, '"~~"');
                    case 21:
                        return function(t) {
                            let e = function(t) {
                                for (let e = t.length - 1; e >= 0; e--) {
                                    let n = t[e];
                                    if ("," === n || "[" === n)
                                        return e
                                }
                                return -1
                            }(t);
                            if (e > -1) {
                                let n = t.slice(e + 1);
                                return eE.includes(n.trim()) ? "".concat(t, ',"~~"') : "".concat(t.slice(0, e + 1), '"~~"')
                            }
                            return t
                        }(t);
                    case 23:
                        return "".concat(t, ',"~~"')
                    }
                    return t
                }(n, i);
                for (let t = r; t >= 0; t--) {
                    let r = e[t];
                    switch (r) {
                    case 10:
                        n = "".concat(n, "}");
                        break;
                    case 20:
                        n = "".concat(n, "]")
                    }
                }
                return n
            }(t, e)
        }
        function eO(t, e) {
            if (t)
                try {
                    if ("string" == typeof t)
                        return e.encode(t).length;
                    if (t instanceof URLSearchParams)
                        return e.encode(t.toString()).length;
                    if (t instanceof FormData) {
                        let n = eM(t);
                        return e.encode(n).length
                    }
                    if (t instanceof Blob)
                        return t.size;
                    if (t instanceof ArrayBuffer)
                        return t.byteLength
                } catch (t) {}
        }
        function eC(t) {
            if (!t)
                return;
            let e = parseInt(t, 10);
            return isNaN(e) ? void 0 : e
        }
        function eA(t) {
            return "string" == typeof t ? t : t instanceof URLSearchParams ? t.toString() : t instanceof FormData ? eM(t) : void 0
        }
        function eR(t, e) {
            if (!e)
                return null;
            let {startTimestamp: n, endTimestamp: r, url: i, method: a, statusCode: o, request: s, response: l} = e
              , u = {
                type: t,
                start: n / 1e3,
                end: r / 1e3,
                name: i,
                data: (0,
                D.Jr)({
                    method: a,
                    statusCode: o,
                    request: s,
                    response: l
                })
            };
            return u
        }
        function eD(t) {
            return {
                headers: {},
                size: t,
                _meta: {
                    warnings: ["URL_SKIPPED"]
                }
            }
        }
        function eI(t, e, n) {
            if (!e && 0 === Object.keys(t).length)
                return;
            if (!e)
                return {
                    headers: t
                };
            if (!n)
                return {
                    headers: t,
                    size: e
                };
            let r = {
                headers: t,
                size: e
            }
              , {body: i, warnings: a} = function(t) {
                if (!t || "string" != typeof t)
                    return {
                        body: t,
                        warnings: []
                    };
                let e = t.length > 15e4;
                if (function(t) {
                    let e = t[0]
                      , n = t[t.length - 1];
                    return "[" === e && "]" === n || "{" === e && "}" === n
                }(t))
                    try {
                        let n = e ? eT(t.slice(0, 15e4)) : t
                          , r = JSON.parse(n);
                        return {
                            body: r,
                            warnings: e ? ["JSON_TRUNCATED"] : []
                        }
                    } catch (n) {
                        return {
                            body: e ? "".concat(t.slice(0, 15e4), "…") : t,
                            warnings: e ? ["INVALID_JSON", "TEXT_TRUNCATED"] : ["INVALID_JSON"]
                        }
                    }
                return {
                    body: e ? "".concat(t.slice(0, 15e4), "…") : t,
                    warnings: e ? ["TEXT_TRUNCATED"] : []
                }
            }(n);
            return r.body = i,
            a.length > 0 && (r._meta = {
                warnings: a
            }),
            r
        }
        function eP(t, e) {
            return Object.keys(t).reduce( (n, r) => {
                let i = r.toLowerCase();
                return e.includes(i) && t[r] && (n[i] = t[r]),
                n
            }
            , {})
        }
        function eM(t) {
            return new URLSearchParams(t).toString()
        }
        function eN(t, e) {
            let n = function(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : z.document.baseURI;
                if (t.startsWith("http://") || t.startsWith("https://") || t.startsWith(z.location.origin))
                    return t;
                let n = new URL(t,e);
                if (n.origin !== new URL(e).origin)
                    return t;
                let r = n.href;
                return !t.endsWith("/") && r.endsWith("/") ? r.slice(0, -1) : r
            }(t);
            return (0,
            N.U0)(n, e)
        }
        async function eL(t, e, n) {
            try {
                let r = await ej(t, e, n)
                  , i = eR("resource.fetch", r);
                ex(n.replay, i)
            } catch (t) {}
        }
        async function ej(t, e, n) {
            let {startTimestamp: r, endTimestamp: i} = e
              , {url: a, method: o, status_code: s=0, request_body_size: l, response_body_size: u} = t.data
              , c = eN(a, n.networkDetailAllowUrls) && !eN(a, n.networkDetailDenyUrls)
              , h = c ? function(t, e, n) {
                let {networkCaptureBodies: r, networkRequestHeaders: i} = t
                  , a = 1 === e.length && "string" != typeof e[0] ? eU(e[0], i) : 2 === e.length ? eU(e[1], i) : {};
                if (!r)
                    return eI(a, n, void 0);
                let o = ez(e)
                  , s = eA(o);
                return eI(a, n, s)
            }(n, e.input, l) : eD(l)
              , d = await eF(c, n, e.response, u);
            return {
                startTimestamp: r,
                endTimestamp: i,
                url: a,
                method: o,
                statusCode: s,
                request: h,
                response: d
            }
        }
        async function eF(t, e, n, r) {
            let {networkCaptureBodies: i, textEncoder: a, networkResponseHeaders: o} = e;
            if (!t && void 0 !== r)
                return eD(r);
            let s = eq(n.headers, o);
            if (!i && void 0 !== r)
                return eI(s, r, void 0);
            try {
                let e = n.clone()
                  , o = await eV(e)
                  , l = o && o.length && void 0 === r ? eO(o, a) : r;
                if (!t)
                    return eD(l);
                if (i)
                    return eI(s, l, o);
                return eI(s, l, void 0)
            } catch (t) {
                return eI(s, r, void 0)
            }
        }
        async function eV(t) {
            try {
                return await t.text()
            } catch (t) {
                return
            }
        }
        function ez() {
            let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
            if (2 === t.length && "object" == typeof t[1])
                return t[1].body
        }
        function eq(t, e) {
            let n = {};
            return e.forEach(e => {
                t.get(e) && (n[e] = t.get(e))
            }
            ),
            n
        }
        function eU(t, e) {
            if (!t)
                return {};
            let n = t.headers;
            return n ? n instanceof Headers ? eq(n, e) : Array.isArray(n) ? {} : eP(n, e) : {}
        }
        async function eB(t, e, n) {
            try {
                let r = function(t, e, n) {
                    let {startTimestamp: r, endTimestamp: i, input: a, xhr: o} = e
                      , {url: s, method: l, status_code: u=0, request_body_size: c, response_body_size: h} = t.data;
                    if (!s)
                        return null;
                    if (!eN(s, n.networkDetailAllowUrls) || eN(s, n.networkDetailDenyUrls)) {
                        let t = eD(c)
                          , e = eD(h);
                        return {
                            startTimestamp: r,
                            endTimestamp: i,
                            url: s,
                            method: l,
                            statusCode: u,
                            request: t,
                            response: e
                        }
                    }
                    let d = o[M.xU]
                      , f = d ? eP(d.request_headers, n.networkRequestHeaders) : {}
                      , p = eP(function(t) {
                        let e = t.getAllResponseHeaders();
                        return e ? e.split("\r\n").reduce( (t, e) => {
                            let[n,r] = e.split(": ");
                            return t[n.toLowerCase()] = r,
                            t
                        }
                        , {}) : {}
                    }(o), n.networkResponseHeaders)
                      , m = eI(f, c, n.networkCaptureBodies ? eA(a) : void 0)
                      , y = eI(p, h, n.networkCaptureBodies ? e.xhr.responseText : void 0);
                    return {
                        startTimestamp: r,
                        endTimestamp: i,
                        url: s,
                        method: l,
                        statusCode: u,
                        request: m,
                        response: y
                    }
                }(t, e, n)
                  , i = eR("resource.xhr", r);
                ex(n.replay, i)
            } catch (t) {}
        }
        let eG = null
          , eW = t => e => {
            if (!t.isEnabled())
                return;
            let n = function(t) {
                let e = t.getLastBreadcrumb && t.getLastBreadcrumb();
                return eG !== e && e ? (eG = e,
                !e.category || ["fetch", "xhr", "sentry.event", "sentry.transaction"].includes(e.category) || e.category.startsWith("ui.")) ? null : "console" === e.category ? function(t) {
                    let e = t.data && t.data.arguments;
                    if (!Array.isArray(e) || 0 === e.length)
                        return en(t);
                    let n = !1
                      , r = e.map(t => {
                        if (!t)
                            return t;
                        if ("string" == typeof t)
                            return t.length > 5e3 ? (n = !0,
                            "".concat(t.slice(0, 5e3), "…")) : t;
                        if ("object" == typeof t)
                            try {
                                let e = (0,
                                R.Fv)(t, 7)
                                  , r = JSON.stringify(e);
                                if (r.length > 5e3) {
                                    let t = eT(r.slice(0, 5e3))
                                      , e = JSON.parse(t);
                                    return n = !0,
                                    e
                                }
                                return e
                            } catch (t) {}
                        return t
                    }
                    );
                    return en({
                        ...t,
                        data: {
                            ...t.data,
                            arguments: r,
                            ...n ? {
                                _meta: {
                                    warnings: ["CONSOLE_ARG_TRUNCATED"]
                                }
                            } : {}
                        }
                    })
                }(e) : en(e) : null
            }(e);
            n && t4(t, n)
        }
        ;
        async function eH(t) {
            try {
                return Promise.all(ek(t, [function(t) {
                    let {jsHeapSizeLimit: e, totalJSHeapSize: n, usedJSHeapSize: r} = t
                      , i = Date.now() / 1e3;
                    return {
                        type: "memory",
                        name: "memory",
                        start: i,
                        end: i,
                        data: {
                            memory: {
                                jsHeapSizeLimit: e,
                                totalJSHeapSize: n,
                                usedJSHeapSize: r
                            }
                        }
                    }
                }(z.performance.memory)]))
            } catch (t) {
                return []
            }
        }
        let eQ = {
            resource: function(t) {
                let {entryType: e, initiatorType: n, name: r, responseEnd: i, startTime: a, decodedBodySize: o, encodedBodySize: s, responseStatus: l, transferSize: u} = t;
                return ["fetch", "xmlhttprequest"].includes(n) ? null : {
                    type: "".concat(e, ".").concat(n),
                    start: eY(a),
                    end: eY(i),
                    name: r,
                    data: {
                        size: u,
                        statusCode: l,
                        decodedBodySize: o,
                        encodedBodySize: s
                    }
                }
            },
            paint: function(t) {
                let {duration: e, entryType: n, name: r, startTime: i} = t
                  , a = eY(i);
                return {
                    type: n,
                    name: r,
                    start: a,
                    end: a + e,
                    data: void 0
                }
            },
            navigation: function(t) {
                let {entryType: e, name: n, decodedBodySize: r, duration: i, domComplete: a, encodedBodySize: o, domContentLoadedEventStart: s, domContentLoadedEventEnd: l, domInteractive: u, loadEventStart: c, loadEventEnd: h, redirectCount: d, startTime: f, transferSize: p, type: m} = t;
                return 0 === i ? null : {
                    type: "".concat(e, ".").concat(m),
                    start: eY(f),
                    end: eY(a),
                    name: n,
                    data: {
                        size: p,
                        decodedBodySize: r,
                        encodedBodySize: o,
                        duration: i,
                        domInteractive: u,
                        domContentLoadedEventStart: s,
                        domContentLoadedEventEnd: l,
                        loadEventStart: c,
                        loadEventEnd: h,
                        domComplete: a,
                        redirectCount: d
                    }
                }
            },
            "largest-contentful-paint": function(t) {
                let {entryType: e, startTime: n, size: r} = t
                  , i = 0;
                if (z.performance) {
                    let t = z.performance.getEntriesByType("navigation")[0];
                    i = t && t.activationStart || 0
                }
                let a = Math.max(n - i, 0)
                  , o = eY(i) + a / 1e3;
                return {
                    type: e,
                    name: e,
                    start: o,
                    end: o,
                    data: {
                        value: a,
                        size: r,
                        nodeId: t3.mirror.getId(t.element)
                    }
                }
            }
        };
        function e$(t) {
            return void 0 === eQ[t.entryType] ? null : eQ[t.entryType](t)
        }
        function eY(t) {
            return ((L.Z1 || z.performance.timeOrigin) + t) / 1e3
        }
        async function eZ(t) {
            let {client: e, scope: n, replayId: r, event: i} = t
              , a = "object" != typeof e._integrations || null === e._integrations || Array.isArray(e._integrations) ? void 0 : Object.keys(e._integrations)
              , o = await (0,
            O.R)(e.getOptions(), i, {
                event_id: r,
                integrations: a
            }, n);
            if (!o)
                return null;
            o.platform = o.platform || "javascript";
            let s = e.getSdkMetadata && e.getSdkMetadata()
              , {name: l, version: u} = s && s.sdk || {};
            return o.sdk = {
                ...o.sdk,
                name: l || "sentry.javascript.unknown",
                version: u || "0.0.0"
            },
            o
        }
        async function eJ(t) {
            var e;
            let n, {recordingData: r, replayId: i, segmentId: a, eventContext: o, timestamp: s, session: l} = t, u = function(t) {
                let e, {recordingData: n, headers: r} = t, i = "".concat(JSON.stringify(r), "\n");
                if ("string" == typeof n)
                    e = "".concat(i).concat(n);
                else {
                    let t = new TextEncoder
                      , r = t.encode(i);
                    (e = new Uint8Array(r.length + n.length)).set(r),
                    e.set(n, r.length)
                }
                return e
            }({
                recordingData: r,
                headers: {
                    segment_id: a
                }
            }), {urls: c, errorIds: h, traceIds: d, initialTimestamp: f} = o, p = (0,
            E.Gd)(), m = p.getClient(), y = p.getScope(), g = m && m.getTransport(), v = m && m.getDsn();
            if (!m || !g || !v || !l.sampled)
                return;
            let _ = {
                type: "replay_event",
                replay_start_timestamp: f / 1e3,
                timestamp: s / 1e3,
                error_ids: h,
                trace_ids: d,
                urls: c,
                replay_id: i,
                segment_id: a,
                replay_type: l.sampled
            }
              , b = await eZ({
                scope: y,
                client: m,
                replayId: i,
                event: _
            });
            if (!b) {
                m.recordDroppedEvent("event_processor", "replay", _);
                return
            }
            delete b.sdkProcessingMetadata;
            let w = (e = m.getOptions().tunnel,
            (0,
            j.Jd)((0,
            j.Cd)(b, (0,
            j.HY)(b), e, v), [[{
                type: "replay_event"
            }, b], [{
                type: "replay_recording",
                length: "string" == typeof u ? new TextEncoder().encode(u).length : u.length
            }, u]]));
            try {
                n = await g.send(w)
            } catch (e) {
                let t = Error(U);
                try {
                    t.cause = e
                } catch (t) {}
                throw t
            }
            if (!n)
                return n;
            if ("number" == typeof n.statusCode && (n.statusCode < 200 || n.statusCode >= 300))
                throw new eX(n.statusCode);
            return n
        }
        class eX extends Error {
            constructor(t) {
                super("Transport returned status code ".concat(t))
            }
        }
        async function eK(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                count: 0,
                interval: 5e3
            }
              , {recordingData: n, options: r} = t;
            if (n.length)
                try {
                    return await eJ(t),
                    !0
                } catch (n) {
                    if (n instanceof eX)
                        throw n;
                    if ((0,
                    C.v)("Replays", {
                        _retryCount: e.count
                    }),
                    e.count >= 3) {
                        let t = Error("".concat(U, " - max retries exceeded"));
                        try {
                            t.cause = n
                        } catch (t) {}
                        throw t
                    }
                    return e.interval *= ++e.count,
                    new Promise( (n, r) => {
                        setTimeout(async () => {
                            try {
                                await eK(t, e),
                                n(!0)
                            } catch (t) {
                                r(t)
                            }
                        }
                        , e.interval)
                    }
                    )
                }
        }
        let e0 = "__THROTTLED";
        class e1 {
            getContext() {
                return this._context
            }
            isEnabled() {
                return this._isEnabled
            }
            isPaused() {
                return this._isPaused
            }
            getOptions() {
                return this._options
            }
            initializeSampling() {
                let {errorSampleRate: t, sessionSampleRate: e} = this._options;
                if (t <= 0 && e <= 0)
                    return;
                let n = this._loadAndCheckSession();
                if (n) {
                    if (!this.session) {
                        this._handleException(Error("Unable to initialize and create session"));
                        return
                    }
                    this.session.sampled && "session" !== this.session.sampled && (this.recordingMode = "buffer"),
                    this.recordingMode,
                    this._options._experiments.traceInternals,
                    this._initializeRecording()
                }
            }
            start() {
                if (this._isEnabled && "session" === this.recordingMode)
                    throw Error("Replay recording is already in progress");
                if (this._isEnabled && "buffer" === this.recordingMode)
                    throw Error("Replay buffering is in progress, call `flush()` to save the replay");
                this._options._experiments.traceInternals;
                let t = this.session && this.session.id
                  , {session: e} = e_({
                    timeouts: this.timeouts,
                    stickySession: !!this._options.stickySession,
                    currentSession: this.session,
                    sessionSampleRate: 1,
                    allowBuffering: !1,
                    traceInternals: this._options._experiments.traceInternals
                });
                e.previousSessionId = t,
                this.session = e,
                this._initializeRecording()
            }
            startBuffering() {
                if (this._isEnabled)
                    throw Error("Replay recording is already in progress");
                this._options._experiments.traceInternals;
                let t = this.session && this.session.id
                  , {session: e} = e_({
                    timeouts: this.timeouts,
                    stickySession: !!this._options.stickySession,
                    currentSession: this.session,
                    sessionSampleRate: 0,
                    allowBuffering: !0,
                    traceInternals: this._options._experiments.traceInternals
                });
                e.previousSessionId = t,
                this.session = e,
                this.recordingMode = "buffer",
                this._initializeRecording()
            }
            startRecording() {
                try {
                    var t;
                    let e;
                    this._stopRecording = t3({
                        ...this._recordingOptions,
                        ..."buffer" === this.recordingMode && {
                            checkoutEveryNms: 6e4
                        },
                        emit: (t = this,
                        e = !1,
                        (n, r) => {
                            if (!t.checkAndHandleExpiredSession())
                                return;
                            let i = r || !e;
                            e = !0,
                            t.addUpdate( () => {
                                if ("buffer" === t.recordingMode && i && t.setInitialState(),
                                eb(t, n, i),
                                !i)
                                    return !1;
                                if (i && t.session && 0 === t.session.segmentId ? eb(t, function(t) {
                                    let e = t.getOptions();
                                    return {
                                        type: g.Custom,
                                        timestamp: Date.now(),
                                        data: {
                                            tag: "options",
                                            payload: {
                                                sessionSampleRate: e.sessionSampleRate,
                                                errorSampleRate: e.errorSampleRate,
                                                useCompressionOption: e.useCompression,
                                                blockAllMedia: e.blockAllMedia,
                                                maskAllText: e.maskAllText,
                                                maskAllInputs: e.maskAllInputs,
                                                useCompression: !!t.eventBuffer && "worker" === t.eventBuffer.type,
                                                networkDetailHasUrls: e.networkDetailAllowUrls.length > 0,
                                                networkCaptureBodies: e.networkCaptureBodies,
                                                networkRequestHasHeaders: e.networkRequestHeaders.length > 0,
                                                networkResponseHasHeaders: e.networkResponseHeaders.length > 0
                                            }
                                        }
                                    }
                                }(t), !1) : Promise.resolve(null),
                                t.session && t.session.previousSessionId)
                                    return !0;
                                if ("buffer" === t.recordingMode && t.session && t.eventBuffer) {
                                    let e = t.eventBuffer.getEarliestTimestamp();
                                    e && (t.getOptions()._experiments.traceInternals,
                                    t.session.started = e,
                                    t.getOptions().stickySession && eg(t.session))
                                }
                                return "session" === t.recordingMode && t.flush(),
                                !0
                            }
                            )
                        }
                        ),
                        onMutation: this._onMutationHandler
                    })
                } catch (t) {
                    this._handleException(t)
                }
            }
            stopRecording() {
                try {
                    return this._stopRecording && (this._stopRecording(),
                    this._stopRecording = void 0),
                    !0
                } catch (t) {
                    return this._handleException(t),
                    !1
                }
            }
            async stop(t) {
                if (this._isEnabled)
                    try {
                        this._options._experiments.traceInternals,
                        this._isEnabled = !1,
                        this._removeListeners(),
                        this.stopRecording(),
                        this._debouncedFlush.cancel(),
                        "session" === this.recordingMode && await this._flush({
                            force: !0
                        }),
                        this.eventBuffer && this.eventBuffer.destroy(),
                        this.eventBuffer = null,
                        function() {
                            if (ef())
                                try {
                                    z.sessionStorage.removeItem(q)
                                } catch (t) {}
                        }(),
                        this.session = void 0
                    } catch (t) {
                        this._handleException(t)
                    }
            }
            pause() {
                this._isPaused || (this._isPaused = !0,
                this.stopRecording(),
                this._options._experiments.traceInternals)
            }
            resume() {
                this._isPaused && this._loadAndCheckSession() && (this._isPaused = !1,
                this.startRecording(),
                this._options._experiments.traceInternals)
            }
            async sendBufferedReplayOrFlush() {
                let {continueRecording: t=!0} = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if ("session" === this.recordingMode)
                    return this.flushImmediate();
                let e = Date.now();
                this._options._experiments.traceInternals,
                await this.flushImmediate();
                let n = this.stopRecording();
                t && n && "session" !== this.recordingMode && (this.recordingMode = "session",
                this.session && (this.session.shouldRefresh = !1,
                this._updateUserActivity(e),
                this._updateSessionActivity(e),
                this._maybeSaveSession()),
                this.startRecording())
            }
            addUpdate(t) {
                let e = t();
                "buffer" !== this.recordingMode && !0 !== e && this._debouncedFlush()
            }
            triggerUserActivity() {
                if (this._updateUserActivity(),
                !this._stopRecording) {
                    if (!this._loadAndCheckSession())
                        return;
                    this.resume();
                    return
                }
                this.checkAndHandleExpiredSession(),
                this._updateSessionActivity()
            }
            updateUserActivity() {
                this._updateUserActivity(),
                this._updateSessionActivity()
            }
            conditionalFlush() {
                return "buffer" === this.recordingMode ? Promise.resolve() : this.flushImmediate()
            }
            flush() {
                return this._debouncedFlush()
            }
            flushImmediate() {
                return this._debouncedFlush(),
                this._debouncedFlush.flush()
            }
            cancelFlush() {
                this._debouncedFlush.cancel()
            }
            getSessionId() {
                return this.session && this.session.id
            }
            checkAndHandleExpiredSession() {
                let t = this.getSessionId();
                if (this._lastActivity && ep(this._lastActivity, this.timeouts.sessionIdlePause) && this.session && "session" === this.session.sampled) {
                    this.pause();
                    return
                }
                if (!this._loadAndCheckSession())
                    return;
                let e = t !== this.getSessionId();
                return !e || (this._triggerFullSnapshot(),
                !1)
            }
            setInitialState() {
                let t = "".concat(z.location.pathname).concat(z.location.hash).concat(z.location.search)
                  , e = "".concat(z.location.origin).concat(t);
                this.performanceEvents = [],
                this._clearContext(),
                this._context.initialUrl = e,
                this._context.initialTimestamp = Date.now(),
                this._context.urls.push(e)
            }
            throttledAddEvent(t, e) {
                let n = this._throttledAddEvent(t, e);
                if (n === e0) {
                    let t = en({
                        category: "replay.throttled"
                    });
                    this.addUpdate( () => {
                        eb(this, {
                            type: g.Custom,
                            timestamp: t.timestamp || 0,
                            data: {
                                tag: "breadcrumb",
                                payload: t,
                                metric: !0
                            }
                        })
                    }
                    )
                }
                return n
            }
            getCurrentRoute() {
                let t = this.lastTransaction || (0,
                E.Gd)().getScope().getTransaction();
                if (t && ["route", "custom"].includes(t.metadata.source))
                    return t.name
            }
            _initializeRecording() {
                this.setInitialState(),
                this._updateSessionActivity(),
                this.eventBuffer = function(t) {
                    let {useCompression: e} = t;
                    if (e && window.Worker)
                        try {
                            let t = function() {
                                let t = new Blob(['/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:"pako deflate (from Nodeca project)"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if("object"!=typeof a)throw new TypeError(a+"must be non-object");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if("function"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if("function"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a="";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t="string"==typeof e.dictionary?Nt(e.dictionary):"[object ArrayBuffer]"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,"string"==typeof t?a.input=Nt(t):"[object ArrayBuffer]"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg="invalid literal/length code",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg="invalid distance code",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg="invalid distance too far back",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg="invalid distance too far back",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg="incorrect header check",a.mode=me;break}if((15&h)!==we){t.msg="unknown compression method",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg="invalid window size",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg="unknown compression method",a.mode=me;break}if(57344&a.flags){t.msg="unknown header flags set",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg="header crc mismatch",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg="invalid block type",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg="invalid stored block lengths",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg="too many length or distance symbols",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg="invalid code lengths set",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg="invalid bit length repeat",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg="invalid bit length repeat",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg="invalid code -- missing end-of-block",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg="invalid literal/lengths set",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg="invalid distances set",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg="invalid literal/length code",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg="invalid distance code",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg="invalid distance too far back",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg="invalid distance too far back",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg="incorrect data check",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg="incorrect length check",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:"pako inflate (from Nodeca project)"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:""},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&("string"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):"[object ArrayBuffer]"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,"[object ArrayBuffer]"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if("string"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=je,Xe=B;const We=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error("Adding invalid event");const e=this._hasEvents?",":"";this.deflate.push(e+t,Xe.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push("]",Xe.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push("[",Xe.Z_NO_FLUSH)}},qe={clear:()=>{We.clear()},addEvent:t=>We.addEvent(t),finish:()=>We.finish(),compress:t=>function(t){return Ge(t)}(t)};addEventListener("message",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in qe&&"function"==typeof qe[e])try{const t=qe[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:"init",success:!0,response:void 0});']);
                                return URL.createObjectURL(t)
                            }()
                              , e = new Worker(t);
                            return new ed(e)
                        } catch (t) {}
                    return new eu
                }({
                    useCompression: this._options.useCompression
                }),
                this._removeListeners(),
                this._addListeners(),
                this._isEnabled = !0,
                this.startRecording()
            }
            _handleException(t) {}
            _loadAndCheckSession() {
                let {type: t, session: e} = e_({
                    timeouts: this.timeouts,
                    stickySession: !!this._options.stickySession,
                    currentSession: this.session,
                    sessionSampleRate: this._options.sessionSampleRate,
                    allowBuffering: this._options.errorSampleRate > 0 || "buffer" === this.recordingMode,
                    traceInternals: this._options._experiments.traceInternals
                });
                "new" === t && this.setInitialState();
                let n = this.getSessionId();
                return e.id !== n && (e.previousSessionId = n),
                this.session = e,
                !!this.session.sampled || (this.stop("session not refreshed"),
                !1)
            }
            _addListeners() {
                try {
                    z.document.addEventListener("visibilitychange", this._handleVisibilityChange),
                    z.addEventListener("blur", this._handleWindowBlur),
                    z.addEventListener("focus", this._handleWindowFocus),
                    z.addEventListener("keydown", this._handleKeyboardEvent),
                    this.clickDetector && this.clickDetector.addListeners(),
                    this._hasInitializedCoreListeners || (function(t) {
                        let e = (0,
                        E.Gd)().getScope()
                          , n = (0,
                        E.Gd)().getClient();
                        e && e.addScopeListener(eW(t)),
                        (0,
                        M.oq)("dom", ei(t)),
                        (0,
                        M.oq)("history", e => {
                            if (!t.isEnabled())
                                return;
                            let n = function(t) {
                                let {from: e, to: n} = t
                                  , r = Date.now() / 1e3;
                                return {
                                    type: "navigation.push",
                                    start: r,
                                    end: r,
                                    name: n,
                                    data: {
                                        previous: e
                                    }
                                }
                            }(e);
                            null !== n && (t.getContext().urls.push(n.name),
                            t.triggerUserActivity(),
                            t.addUpdate( () => (ek(t, [n]),
                            !1)))
                        }
                        ),
                        function(t) {
                            let e = (0,
                            E.Gd)().getClient();
                            try {
                                let n = new TextEncoder
                                  , {networkDetailAllowUrls: r, networkDetailDenyUrls: i, networkCaptureBodies: a, networkRequestHeaders: o, networkResponseHeaders: s} = t.getOptions()
                                  , l = {
                                    replay: t,
                                    textEncoder: n,
                                    networkDetailAllowUrls: r,
                                    networkDetailDenyUrls: i,
                                    networkCaptureBodies: a,
                                    networkRequestHeaders: o,
                                    networkResponseHeaders: s
                                };
                                e && e.on ? e.on("beforeAddBreadcrumb", (t, e) => (function(t, e, n) {
                                    if (e.data)
                                        try {
                                            var r, i;
                                            "xhr" === e.category && (r = n) && r.xhr && (function(t, e, n) {
                                                let {xhr: r, input: i} = e
                                                  , a = eO(i, n.textEncoder)
                                                  , o = r.getResponseHeader("content-length") ? eC(r.getResponseHeader("content-length")) : eO(r.response, n.textEncoder);
                                                void 0 !== a && (t.data.request_body_size = a),
                                                void 0 !== o && (t.data.response_body_size = o)
                                            }(e, n, t),
                                            eB(e, n, t)),
                                            "fetch" === e.category && (i = n) && i.response && (function(t, e, n) {
                                                let {input: r, response: i} = e
                                                  , a = ez(r)
                                                  , o = eO(a, n.textEncoder)
                                                  , s = i ? eC(i.headers.get("content-length")) : void 0;
                                                void 0 !== o && (t.data.request_body_size = o),
                                                void 0 !== s && (t.data.response_body_size = s)
                                            }(e, n, t),
                                            eL(e, n, t))
                                        } catch (t) {}
                                }
                                )(l, t, e)) : ((0,
                                M.oq)("fetch", e => {
                                    if (!t.isEnabled())
                                        return;
                                    let n = function(t) {
                                        let {startTimestamp: e, endTimestamp: n, fetchData: r, response: i} = t;
                                        if (!n)
                                            return null;
                                        let {method: a, url: o} = r;
                                        return {
                                            type: "resource.fetch",
                                            start: e / 1e3,
                                            end: n / 1e3,
                                            name: o,
                                            data: {
                                                method: a,
                                                statusCode: i ? i.status : void 0
                                            }
                                        }
                                    }(e);
                                    ex(t, n)
                                }
                                ),
                                (0,
                                M.oq)("xhr", e => {
                                    if (!t.isEnabled())
                                        return;
                                    let n = function(t) {
                                        let {startTimestamp: e, endTimestamp: n, xhr: r} = t
                                          , i = r[M.xU];
                                        if (!e || !n || !i)
                                            return null;
                                        let {method: a, url: o, status_code: s} = i;
                                        return void 0 === o ? null : {
                                            type: "resource.xhr",
                                            name: o,
                                            start: e / 1e3,
                                            end: n / 1e3,
                                            data: {
                                                method: a,
                                                statusCode: s
                                            }
                                        }
                                    }(e);
                                    ex(t, n)
                                }
                                ))
                            } catch (t) {}
                        }(t),
                        (0,
                        T.c)(function(t) {
                            let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                              , n = e ? eS(t) : void 0;
                            return (e, r) => {
                                if (!t.isEnabled())
                                    return e;
                                if ("replay_event" === e.type)
                                    return delete e.breadcrumbs,
                                    e;
                                if (e.type && !ew(e))
                                    return e;
                                if (!e.type && e.exception && e.exception.values && e.exception.values.length && (r.originalException && r.originalException.__rrweb__ || e.exception.values.some(t => !!t.stacktrace && !!t.stacktrace.frames && !!t.stacktrace.frames.length && t.stacktrace.frames.some(t => t.filename && t.filename.includes("/rrweb/src/")))) && !t.getOptions()._experiments.captureExceptions)
                                    return null;
                                let i = "buffer" === t.recordingMode && e.message !== U && !!e.exception && !e.type && ey(t.getOptions().errorSampleRate)
                                  , a = i || "session" === t.recordingMode;
                                return a && (e.tags = {
                                    ...e.tags,
                                    replayId: t.getSessionId()
                                }),
                                n && n(e, {
                                    statusCode: 200
                                }),
                                e
                            }
                        }(t, !(n && n.on))),
                        n && n.on && (n.on("afterSendEvent", eS(t)),
                        n.on("createDsc", e => {
                            let n = t.getSessionId();
                            n && t.isEnabled() && "session" === t.recordingMode && (e.replay_id = n)
                        }
                        ),
                        n.on("startTransaction", e => {
                            t.lastTransaction = e
                        }
                        ),
                        n.on("finishTransaction", e => {
                            t.lastTransaction = e
                        }
                        ))
                    }(this),
                    this._hasInitializedCoreListeners = !0)
                } catch (t) {
                    this._handleException(t)
                }
                "PerformanceObserver"in z && (this._performanceObserver = function(t) {
                    let e = new PerformanceObserver(e => {
                        let n = function(t, e) {
                            let[n,r,i] = t.reduce( (t, e) => ("navigation" === e.entryType ? t[0].push(e) : "largest-contentful-paint" === e.entryType ? t[1].push(e) : t[2].push(e),
                            t), [[], [], []])
                              , a = []
                              , o = []
                              , s = r.length ? r[r.length - 1] : void 0;
                            return e.forEach(t => {
                                if ("largest-contentful-paint" === t.entryType) {
                                    (!s || s.startTime < t.startTime) && (s = t);
                                    return
                                }
                                if ("navigation" === t.entryType) {
                                    !(t.duration > 0) || n.find(es(t)) || o.find(es(t)) || o.push(t);
                                    return
                                }
                                a.push(t)
                            }
                            ),
                            [...s ? [s] : [], ...n, ...i, ...a, ...o].sort( (t, e) => t.startTime - e.startTime)
                        }(t.performanceEvents, e.getEntries());
                        t.performanceEvents = n
                    }
                    );
                    return ["element", "event", "first-input", "largest-contentful-paint", "layout-shift", "longtask", "navigation", "paint", "resource"].forEach(t => {
                        try {
                            e.observe({
                                type: t,
                                buffered: !0
                            })
                        } catch (t) {}
                    }
                    ),
                    e
                }(this))
            }
            _removeListeners() {
                try {
                    z.document.removeEventListener("visibilitychange", this._handleVisibilityChange),
                    z.removeEventListener("blur", this._handleWindowBlur),
                    z.removeEventListener("focus", this._handleWindowFocus),
                    z.removeEventListener("keydown", this._handleKeyboardEvent),
                    this.clickDetector && this.clickDetector.removeListeners(),
                    this._performanceObserver && (this._performanceObserver.disconnect(),
                    this._performanceObserver = void 0)
                } catch (t) {
                    this._handleException(t)
                }
            }
            __init() {
                this._handleVisibilityChange = () => {
                    "visible" === z.document.visibilityState ? this._doChangeToForegroundTasks() : this._doChangeToBackgroundTasks()
                }
            }
            __init2() {
                this._handleWindowBlur = () => {
                    let t = en({
                        category: "ui.blur"
                    });
                    this._doChangeToBackgroundTasks(t)
                }
            }
            __init3() {
                this._handleWindowFocus = () => {
                    let t = en({
                        category: "ui.focus"
                    });
                    this._doChangeToForegroundTasks(t)
                }
            }
            __init4() {
                this._handleKeyboardEvent = t => {
                    !function(t, e) {
                        if (!t.isEnabled())
                            return;
                        t.updateUserActivity();
                        let n = function(t) {
                            var e;
                            let {metaKey: n, shiftKey: r, ctrlKey: i, altKey: a, key: o, target: s} = t;
                            if (!s || "INPUT" === (e = s).tagName || "TEXTAREA" === e.tagName || e.isContentEditable || !o)
                                return null;
                            let l = 1 === o.length;
                            if (!(n || i || a) && l)
                                return null;
                            let u = (0,
                            I.Rt)(s, {
                                maxStringLength: 200
                            }) || "<unknown>"
                              , c = ea(s, u);
                            return en({
                                category: "ui.keyDown",
                                message: u,
                                data: {
                                    ...c.data,
                                    metaKey: n,
                                    shiftKey: r,
                                    ctrlKey: i,
                                    altKey: a,
                                    key: o
                                }
                            })
                        }(e);
                        n && t4(t, n)
                    }(this, t)
                }
            }
            _doChangeToBackgroundTasks(t) {
                if (!this.session)
                    return;
                let e = em(this.session, this.timeouts);
                t && !e && this._createCustomBreadcrumb(t),
                this.conditionalFlush()
            }
            _doChangeToForegroundTasks(t) {
                if (!this.session)
                    return;
                let e = this.checkAndHandleExpiredSession();
                e && t && this._createCustomBreadcrumb(t)
            }
            _triggerFullSnapshot() {
                let t = !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
                try {
                    t3.takeFullSnapshot(t)
                } catch (t) {
                    this._handleException(t)
                }
            }
            _updateUserActivity() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Date.now();
                this._lastActivity = t
            }
            _updateSessionActivity() {
                let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Date.now();
                this.session && (this.session.lastActivity = t,
                this._maybeSaveSession())
            }
            _createCustomBreadcrumb(t) {
                this.addUpdate( () => {
                    this.throttledAddEvent({
                        type: g.Custom,
                        timestamp: t.timestamp || 0,
                        data: {
                            tag: "breadcrumb",
                            payload: t
                        }
                    })
                }
                )
            }
            _addPerformanceEntries() {
                let t = [...this.performanceEvents];
                return this.performanceEvents = [],
                Promise.all(ek(this, t.map(e$).filter(Boolean)))
            }
            _clearContext() {
                this._context.errorIds.clear(),
                this._context.traceIds.clear(),
                this._context.urls = []
            }
            _updateInitialTimestampFromEventBuffer() {
                let {session: t, eventBuffer: e} = this;
                if (!t || !e || t.segmentId)
                    return;
                let n = e.getEarliestTimestamp();
                n && n < this._context.initialTimestamp && (this._context.initialTimestamp = n)
            }
            _popEventContext() {
                let t = {
                    initialTimestamp: this._context.initialTimestamp,
                    initialUrl: this._context.initialUrl,
                    errorIds: Array.from(this._context.errorIds),
                    traceIds: Array.from(this._context.traceIds),
                    urls: this._context.urls
                };
                return this._clearContext(),
                t
            }
            async _runFlush() {
                if (this.session && this.eventBuffer && (await this._addPerformanceEntries(),
                this.eventBuffer && this.eventBuffer.hasEvents) && (await eH(this),
                this.eventBuffer))
                    try {
                        this._updateInitialTimestampFromEventBuffer();
                        let t = await this.eventBuffer.finish()
                          , e = this.session.id
                          , n = this._popEventContext()
                          , r = this.session.segmentId++;
                        this._maybeSaveSession(),
                        await eK({
                            replayId: e,
                            recordingData: t,
                            segmentId: r,
                            eventContext: n,
                            session: this.session,
                            options: this.getOptions(),
                            timestamp: Date.now()
                        })
                    } catch (e) {
                        this._handleException(e),
                        this.stop("sendReplay");
                        let t = (0,
                        E.Gd)().getClient();
                        t && t.recordDroppedEvent("send_error", "replay")
                    }
            }
            __init5() {
                var t = this;
                this._flush = async function() {
                    let {force: e=!1} = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    if (!t._isEnabled && !e || !t.checkAndHandleExpiredSession() || !t.session)
                        return;
                    let n = t.session.started
                      , r = Date.now()
                      , i = r - n
                      , a = i < t._options.minReplayDuration
                      , o = i > t.timeouts.maxSessionLife + 5e3;
                    if (a || o) {
                        "[Replay] Session duration (".concat(Math.floor(i / 1e3), "s) is too ").concat(a ? "short" : "long", ", not sending replay."),
                        a && t._debouncedFlush();
                        return
                    }
                    if (t._debouncedFlush.cancel(),
                    !t._flushLock) {
                        t._flushLock = t._runFlush(),
                        await t._flushLock,
                        t._flushLock = void 0;
                        return
                    }
                    try {
                        await t._flushLock
                    } catch (t) {} finally {
                        t._debouncedFlush()
                    }
                }
            }
            _maybeSaveSession() {
                this.session && this._options.stickySession && eg(this.session)
            }
            __init6() {
                this._onMutationHandler = t => {
                    let e = t.length
                      , n = this._options.mutationLimit
                      , r = this._options.mutationBreadcrumbLimit
                      , i = n && e > n;
                    if (e > r || i) {
                        let t = en({
                            category: "replay.mutations",
                            data: {
                                count: e,
                                limit: i
                            }
                        });
                        this._createCustomBreadcrumb(t)
                    }
                    return !i || (this.stop("mutationLimit"),
                    !1)
                }
            }
            constructor({options: t, recordingOptions: e}) {
                e1.prototype.__init.call(this),
                e1.prototype.__init2.call(this),
                e1.prototype.__init3.call(this),
                e1.prototype.__init4.call(this),
                e1.prototype.__init5.call(this),
                e1.prototype.__init6.call(this),
                this.eventBuffer = null,
                this.performanceEvents = [],
                this.recordingMode = "session",
                this.timeouts = {
                    sessionIdlePause: 3e5,
                    sessionIdleExpire: 9e5,
                    maxSessionLife: 36e5
                },
                this._lastActivity = Date.now(),
                this._isEnabled = !1,
                this._isPaused = !1,
                this._hasInitializedCoreListeners = !1,
                this._context = {
                    errorIds: new Set,
                    traceIds: new Set,
                    urls: [],
                    initialTimestamp: Date.now(),
                    initialUrl: ""
                },
                this._recordingOptions = e,
                this._options = t,
                this._debouncedFlush = function(t, e, n) {
                    let r, i, a;
                    let o = n && n.maxWait ? Math.max(n.maxWait, e) : 0;
                    function s() {
                        return l(),
                        r = t()
                    }
                    function l() {
                        void 0 !== i && clearTimeout(i),
                        void 0 !== a && clearTimeout(a),
                        i = a = void 0
                    }
                    function u() {
                        return i && clearTimeout(i),
                        i = setTimeout(s, e),
                        o && void 0 === a && (a = setTimeout(s, o)),
                        r
                    }
                    return u.cancel = l,
                    u.flush = function() {
                        return void 0 !== i || void 0 !== a ? s() : r
                    }
                    ,
                    u
                }( () => this._flush(), this._options.flushMinDelay, {
                    maxWait: this._options.flushMaxDelay
                }),
                this._throttledAddEvent = function(t, e, n) {
                    let r = new Map
                      , i = t => {
                        let e = t - 5;
                        r.forEach( (t, n) => {
                            n < e && r.delete(n)
                        }
                        )
                    }
                      , a = () => [...r.values()].reduce( (t, e) => t + e, 0)
                      , o = !1;
                    return function() {
                        for (var e = arguments.length, n = Array(e), s = 0; s < e; s++)
                            n[s] = arguments[s];
                        let l = Math.floor(Date.now() / 1e3);
                        if (i(l),
                        a() >= 300) {
                            let t = o;
                            return o = !0,
                            t ? "__SKIPPED" : e0
                        }
                        o = !1;
                        let u = r.get(l) || 0;
                        return r.set(l, u + 1),
                        t(...n)
                    }
                }( (t, e) => eb(this, t, e), 0, 0);
                let {slowClickTimeout: n, slowClickIgnoreSelectors: r} = this.getOptions()
                  , i = n ? {
                    threshold: Math.min(3e3, n),
                    timeout: n,
                    scrollTimeout: 300,
                    ignoreSelector: r ? r.join(",") : ""
                } : void 0;
                i && (this.clickDetector = new t7(this,i))
            }
        }
        function e2(t, e, n, r) {
            let i = "string" == typeof r ? r.split(",") : []
              , a = [...t, ...i, ...e];
            return void 0 !== n && ("string" == typeof n && a.push(".".concat(n)),
            console.warn("[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.")),
            a.join(",")
        }
        function e5() {
            return !(0,
            F.KV)() || void 0 !== V && "renderer" === V.type
        }
        let e3 = 'img,image,svg,video,object,picture,embed,map,audio,link[rel="icon"],link[rel="apple-touch-icon"]'
          , e6 = ["content-length", "content-type", "accept"]
          , e4 = !1;
        class e8 {
            static __initStatic() {
                this.id = "Replay"
            }
            get _isInitialized() {
                return e4
            }
            set _isInitialized(t) {
                e4 = t
            }
            setupOnce() {
                e5() && (this._setup(),
                setTimeout( () => this._initialize()))
            }
            start() {
                this._replay && this._replay.start()
            }
            startBuffering() {
                this._replay && this._replay.startBuffering()
            }
            stop() {
                return this._replay ? this._replay.stop() : Promise.resolve()
            }
            flush(t) {
                return this._replay && this._replay.isEnabled() ? this._replay.sendBufferedReplayOrFlush(t) : Promise.resolve()
            }
            getReplayId() {
                if (this._replay && this._replay.isEnabled())
                    return this._replay.getSessionId()
            }
            _initialize() {
                this._replay && this._replay.initializeSampling()
            }
            _setup() {
                let t = function(t) {
                    let e = (0,
                    E.Gd)().getClient()
                      , n = e && e.getOptions()
                      , r = {
                        sessionSampleRate: 0,
                        errorSampleRate: 0,
                        ...(0,
                        D.Jr)(t)
                    };
                    return n ? (null == t.sessionSampleRate && null == t.errorSampleRate && null == n.replaysSessionSampleRate && null == n.replaysOnErrorSampleRate && console.warn("Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set."),
                    "number" == typeof n.replaysSessionSampleRate && (r.sessionSampleRate = n.replaysSessionSampleRate),
                    "number" == typeof n.replaysOnErrorSampleRate && (r.errorSampleRate = n.replaysOnErrorSampleRate),
                    r) : (console.warn("SDK client is not available."),
                    r)
                }(this._initialOptions);
                this._replay = new e1({
                    options: t,
                    recordingOptions: this._recordingOptions
                })
            }
            constructor({flushMinDelay: t=5e3, flushMaxDelay: e=5500, minReplayDuration: n=4999, stickySession: r=!0, useCompression: i=!0, _experiments: a={}, sessionSampleRate: o, errorSampleRate: s, maskAllText: l=!0, maskAllInputs: u=!0, blockAllMedia: c=!0, mutationBreadcrumbLimit: h=750, mutationLimit: d=1e4, slowClickTimeout: f=7e3, slowClickIgnoreSelectors: p=[], networkDetailAllowUrls: m=[], networkDetailDenyUrls: y=[], networkCaptureBodies: g=!0, networkRequestHeaders: v=[], networkResponseHeaders: _=[], mask: b=[], unmask: w=[], block: S=[], unblock: k=[], ignore: x=[], maskFn: E, beforeAddRecordingEvent: T, blockClass: O, blockSelector: C, maskInputOptions: A, maskTextClass: R, maskTextSelector: D, ignoreClass: I}={}) {
                if (this.name = e8.id,
                this._recordingOptions = {
                    maskAllInputs: u,
                    maskAllText: l,
                    maskInputOptions: {
                        ...A || {},
                        password: !0
                    },
                    maskTextFn: E,
                    maskInputFn: E,
                    ...function(t) {
                        let {mask: e, unmask: n, block: r, unblock: i, ignore: a, blockClass: o, blockSelector: s, maskTextClass: l, maskTextSelector: u, ignoreClass: c} = t
                          , h = e2(e, [".sentry-mask", "[data-sentry-mask]"], l, u)
                          , d = e2(n, [".sentry-unmask", "[data-sentry-unmask]"])
                          , f = {
                            maskTextSelector: h,
                            unmaskTextSelector: d,
                            maskInputSelector: h,
                            unmaskInputSelector: d,
                            blockSelector: e2(r, [".sentry-block", "[data-sentry-block]", 'base[href="/"]'], o, s),
                            unblockSelector: e2(i, [".sentry-unblock", "[data-sentry-unblock]"]),
                            ignoreSelector: e2(a, [".sentry-ignore", "[data-sentry-ignore]", 'input[type="file"]'], c)
                        };
                        return o instanceof RegExp && (f.blockClass = o),
                        l instanceof RegExp && (f.maskTextClass = l),
                        f
                    }({
                        mask: b,
                        unmask: w,
                        block: S,
                        unblock: k,
                        ignore: x,
                        blockClass: O,
                        blockSelector: C,
                        maskTextClass: R,
                        maskTextSelector: D,
                        ignoreClass: I
                    }),
                    slimDOMOptions: "all",
                    inlineStylesheet: !0,
                    inlineImages: !1,
                    collectFonts: !0
                },
                this._initialOptions = {
                    flushMinDelay: t,
                    flushMaxDelay: e,
                    minReplayDuration: Math.min(n, 15e3),
                    stickySession: r,
                    sessionSampleRate: o,
                    errorSampleRate: s,
                    useCompression: i,
                    blockAllMedia: c,
                    maskAllInputs: u,
                    maskAllText: l,
                    mutationBreadcrumbLimit: h,
                    mutationLimit: d,
                    slowClickTimeout: f,
                    slowClickIgnoreSelectors: p,
                    networkDetailAllowUrls: m,
                    networkDetailDenyUrls: y,
                    networkCaptureBodies: g,
                    networkRequestHeaders: e9(v),
                    networkResponseHeaders: e9(_),
                    beforeAddRecordingEvent: T,
                    _experiments: a
                },
                "number" == typeof o && (console.warn("[Replay] You are passing `sessionSampleRate` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure `replaysSessionSampleRate` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ".concat(o, " })")),
                this._initialOptions.sessionSampleRate = o),
                "number" == typeof s && (console.warn("[Replay] You are passing `errorSampleRate` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure `replaysOnErrorSampleRate` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ".concat(s, " })")),
                this._initialOptions.errorSampleRate = s),
                this._initialOptions.blockAllMedia && (this._recordingOptions.blockSelector = this._recordingOptions.blockSelector ? "".concat(this._recordingOptions.blockSelector, ",").concat(e3) : e3),
                this._isInitialized && e5())
                    throw Error("Multiple Sentry Session Replay instances are not supported");
                this._isInitialized = !0
            }
        }
        function e9(t) {
            return [...e6, ...t.map(t => t.toLowerCase())]
        }
        e8.__initStatic();
        var e7 = window;
        e7.__sentryRewritesTunnelPath__ = "/monitoring",
        e7.SENTRY_RELEASE = {
            id: "9737acf0179b775a49c84846c6da46a37b614489"
        },
        e7.__rewriteFramesAssetPrefixPath__ = "",
        x.S1({
            dsn: "https://88ce6304b46e93b67337e847bcdab04f@o408431.ingest.sentry.io/4505649708269568",
            tracesSampleRate: 1,
            debug: !1,
            replaysOnErrorSampleRate: 1,
            replaysSessionSampleRate: .1,
            integrations: [new e8({
                maskAllText: !0,
                blockAllMedia: !0
            })]
        })
    },
    6212: function(t, e, n) {
        "use strict";
        n.d(e, {
            Rt: function() {
                return o
            },
            l4: function() {
                return s
            },
            qT: function() {
                return l
            }
        });
        var r = n(2135)
          , i = n(21);
        let a = (0,
        i.Rf)();
        function o(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            try {
                let n, i = t, a = [], o = 0, s = 0, l = Array.isArray(e) ? e : e.keyAttrs, u = !Array.isArray(e) && e.maxStringLength || 80;
                for (; i && o++ < 5 && (n = function(t, e) {
                    let n, i, a, o, s;
                    let l = [];
                    if (!t || !t.tagName)
                        return "";
                    l.push(t.tagName.toLowerCase());
                    let u = e && e.length ? e.filter(e => t.getAttribute(e)).map(e => [e, t.getAttribute(e)]) : null;
                    if (u && u.length)
                        u.forEach(t => {
                            l.push("[".concat(t[0], '="').concat(t[1], '"]'))
                        }
                        );
                    else if (t.id && l.push("#".concat(t.id)),
                    (n = t.className) && (0,
                    r.HD)(n))
                        for (s = 0,
                        i = n.split(/\s+/); s < i.length; s++)
                            l.push(".".concat(i[s]));
                    let c = ["aria-label", "type", "name", "title", "alt"];
                    for (s = 0; s < c.length; s++)
                        a = c[s],
                        (o = t.getAttribute(a)) && l.push("[".concat(a, '="').concat(o, '"]'));
                    return l.join("")
                }(i, l),
                "html" !== n && (!(o > 1) || !(s + 3 * a.length + n.length >= u))); )
                    a.push(n),
                    s += n.length,
                    i = i.parentNode;
                return a.reverse().join(" > ")
            } catch (t) {
                return "<unknown>"
            }
        }
        function s() {
            try {
                return a.document.location.href
            } catch (t) {
                return ""
            }
        }
        function l(t) {
            return a.document && a.document.querySelector ? a.document.querySelector(t) : null
        }
    },
    9419: function(t, e, n) {
        "use strict";
        n.d(e, {
            RA: function() {
                return i
            },
            U4: function() {
                return a
            },
            vK: function() {
                return s
            }
        }),
        n(5120);
        let r = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
        function i(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
              , {host: n, path: r, pass: i, port: a, projectId: o, protocol: s, publicKey: l} = t;
            return "".concat(s, "://").concat(l).concat(e && i ? ":".concat(i) : "") + "@".concat(n).concat(a ? ":".concat(a) : "", "/").concat(r ? "".concat(r, "/") : r).concat(o)
        }
        function a(t) {
            let e = r.exec(t);
            if (!e) {
                console.error("Invalid Sentry Dsn: ".concat(t));
                return
            }
            let[n,i,a="",s,l="",u] = e.slice(1)
              , c = ""
              , h = u
              , d = h.split("/");
            if (d.length > 1 && (c = d.slice(0, -1).join("/"),
            h = d.pop()),
            h) {
                let t = h.match(/^\d+/);
                t && (h = t[0])
            }
            return o({
                host: s,
                pass: a,
                path: c,
                projectId: h,
                port: l,
                protocol: n,
                publicKey: i
            })
        }
        function o(t) {
            return {
                protocol: t.protocol,
                publicKey: t.publicKey || "",
                pass: t.pass || "",
                host: t.host,
                port: t.port || "",
                path: t.path || "",
                projectId: t.projectId
            }
        }
        function s(t) {
            let e = "string" == typeof t ? a(t) : o(t);
            if (e)
                return e
        }
    },
    3772: function(t, e, n) {
        "use strict";
        function r() {
            return "undefined" != typeof __SENTRY_BROWSER_BUNDLE__ && !!__SENTRY_BROWSER_BUNDLE__
        }
        function i() {
            return "npm"
        }
        n.d(e, {
            S: function() {
                return i
            },
            n: function() {
                return r
            }
        })
    },
    697: function(t, e, n) {
        "use strict";
        n.d(e, {
            BO: function() {
                return s
            },
            Cd: function() {
                return m
            },
            HY: function() {
                return p
            },
            Jd: function() {
                return o
            },
            V$: function() {
                return c
            },
            gv: function() {
                return l
            },
            mL: function() {
                return f
            },
            zQ: function() {
                return h
            }
        });
        var r = n(9419)
          , i = n(679)
          , a = n(738);
        function o(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
            return [t, e]
        }
        function s(t, e) {
            let[n,r] = t;
            return [n, [...r, e]]
        }
        function l(t, e) {
            let n = t[1];
            for (let t of n) {
                let n = t[0].type
                  , r = e(t, n);
                if (r)
                    return !0
            }
            return !1
        }
        function u(t, e) {
            let n = e || new TextEncoder;
            return n.encode(t)
        }
        function c(t, e) {
            let[n,r] = t
              , a = JSON.stringify(n);
            function o(t) {
                "string" == typeof a ? a = "string" == typeof t ? a + t : [u(a, e), t] : a.push("string" == typeof t ? u(t, e) : t)
            }
            for (let t of r) {
                let[e,n] = t;
                if (o("\n".concat(JSON.stringify(e), "\n")),
                "string" == typeof n || n instanceof Uint8Array)
                    o(n);
                else {
                    let t;
                    try {
                        t = JSON.stringify(n)
                    } catch (e) {
                        t = JSON.stringify((0,
                        i.Fv)(n))
                    }
                    o(t)
                }
            }
            return "string" == typeof a ? a : function(t) {
                let e = t.reduce( (t, e) => t + e.length, 0)
                  , n = new Uint8Array(e)
                  , r = 0;
                for (let e of t)
                    n.set(e, r),
                    r += e.length;
                return n
            }(a)
        }
        function h(t, e) {
            let n = "string" == typeof t.data ? u(t.data, e) : t.data;
            return [(0,
            a.Jr)({
                type: "attachment",
                length: n.length,
                filename: t.filename,
                content_type: t.contentType,
                attachment_type: t.attachmentType
            }), n]
        }
        let d = {
            session: "session",
            sessions: "session",
            attachment: "attachment",
            transaction: "transaction",
            event: "error",
            client_report: "internal",
            user_report: "default",
            profile: "profile",
            replay_event: "replay",
            replay_recording: "replay",
            check_in: "monitor"
        };
        function f(t) {
            return d[t]
        }
        function p(t) {
            if (!t || !t.sdk)
                return;
            let {name: e, version: n} = t.sdk;
            return {
                name: e,
                version: n
            }
        }
        function m(t, e, n, i) {
            let o = t.sdkProcessingMetadata && t.sdkProcessingMetadata.dynamicSamplingContext;
            return {
                event_id: t.event_id,
                sent_at: new Date().toISOString(),
                ...e && {
                    sdk: e
                },
                ...!!n && {
                    dsn: (0,
                    r.RA)(i)
                },
                ...o && {
                    trace: (0,
                    a.Jr)({
                        ...o
                    })
                }
            }
        }
    },
    5677: function(t, e, n) {
        "use strict";
        let r, i, a;
        n.d(e, {
            xU: function() {
                return f
            },
            oq: function() {
                return y
            }
        });
        var o = n(2135)
          , s = n(5120)
          , l = n(738)
          , u = n(5961)
          , c = n(21);
        let h = (0,
        c.Rf)()
          , d = (0,
        c.Rf)()
          , f = "__sentry_xhr_v2__"
          , p = {}
          , m = {};
        function y(t, e) {
            p[t] = p[t] || [],
            p[t].push(e),
            function(t) {
                if (!m[t])
                    switch (m[t] = !0,
                    t) {
                    case "console":
                        "console"in d && s.RU.forEach(function(t) {
                            t in d.console && (0,
                            l.hl)(d.console, t, function(e) {
                                return function() {
                                    for (var n = arguments.length, r = Array(n), i = 0; i < n; i++)
                                        r[i] = arguments[i];
                                    g("console", {
                                        args: r,
                                        level: t
                                    }),
                                    e && e.apply(d.console, r)
                                }
                            })
                        });
                        break;
                    case "dom":
                        (function() {
                            if (!("document"in d))
                                return;
                            let t = g.bind(null, "dom")
                              , e = b(t, !0);
                            d.document.addEventListener("click", e, !1),
                            d.document.addEventListener("keypress", e, !1),
                            ["EventTarget", "Node"].forEach(e => {
                                let n = d[e] && d[e].prototype;
                                n && n.hasOwnProperty && n.hasOwnProperty("addEventListener") && ((0,
                                l.hl)(n, "addEventListener", function(e) {
                                    return function(n, r, i) {
                                        if ("click" === n || "keypress" == n)
                                            try {
                                                let r = this.__sentry_instrumentation_handlers__ = this.__sentry_instrumentation_handlers__ || {}
                                                  , a = r[n] = r[n] || {
                                                    refCount: 0
                                                };
                                                if (!a.handler) {
                                                    let r = b(t);
                                                    a.handler = r,
                                                    e.call(this, n, r, i)
                                                }
                                                a.refCount++
                                            } catch (t) {}
                                        return e.call(this, n, r, i)
                                    }
                                }),
                                (0,
                                l.hl)(n, "removeEventListener", function(t) {
                                    return function(e, n, r) {
                                        if ("click" === e || "keypress" == e)
                                            try {
                                                let n = this.__sentry_instrumentation_handlers__ || {}
                                                  , i = n[e];
                                                i && (i.refCount--,
                                                i.refCount <= 0 && (t.call(this, e, i.handler, r),
                                                i.handler = void 0,
                                                delete n[e]),
                                                0 === Object.keys(n).length && delete this.__sentry_instrumentation_handlers__)
                                            } catch (t) {}
                                        return t.call(this, e, n, r)
                                    }
                                }))
                            }
                            )
                        }
                        )();
                        break;
                    case "xhr":
                        (function() {
                            if (!("XMLHttpRequest"in d))
                                return;
                            let t = XMLHttpRequest.prototype;
                            (0,
                            l.hl)(t, "open", function(t) {
                                return function() {
                                    for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                                        n[r] = arguments[r];
                                    let i = n[1]
                                      , a = this[f] = {
                                        method: (0,
                                        o.HD)(n[0]) ? n[0].toUpperCase() : n[0],
                                        url: n[1],
                                        request_headers: {}
                                    };
                                    (0,
                                    o.HD)(i) && "POST" === a.method && i.match(/sentry_key/) && (this.__sentry_own_request__ = !0);
                                    let s = () => {
                                        let t = this[f];
                                        if (t && 4 === this.readyState) {
                                            try {
                                                t.status_code = this.status
                                            } catch (t) {}
                                            g("xhr", {
                                                args: n,
                                                endTimestamp: Date.now(),
                                                startTimestamp: Date.now(),
                                                xhr: this
                                            })
                                        }
                                    }
                                    ;
                                    return "onreadystatechange"in this && "function" == typeof this.onreadystatechange ? (0,
                                    l.hl)(this, "onreadystatechange", function(t) {
                                        return function() {
                                            for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                                                n[r] = arguments[r];
                                            return s(),
                                            t.apply(this, n)
                                        }
                                    }) : this.addEventListener("readystatechange", s),
                                    (0,
                                    l.hl)(this, "setRequestHeader", function(t) {
                                        return function() {
                                            for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                                                n[r] = arguments[r];
                                            let[i,a] = n
                                              , o = this[f];
                                            return o && (o.request_headers[i.toLowerCase()] = a),
                                            t.apply(this, n)
                                        }
                                    }),
                                    t.apply(this, n)
                                }
                            }),
                            (0,
                            l.hl)(t, "send", function(t) {
                                return function() {
                                    for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                                        n[r] = arguments[r];
                                    let i = this[f];
                                    return i && void 0 !== n[0] && (i.body = n[0]),
                                    g("xhr", {
                                        args: n,
                                        startTimestamp: Date.now(),
                                        xhr: this
                                    }),
                                    t.apply(this, n)
                                }
                            })
                        }
                        )();
                        break;
                    case "fetch":
                        (0,
                        u.t$)() && (0,
                        l.hl)(d, "fetch", function(t) {
                            return function() {
                                for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                                    n[r] = arguments[r];
                                let {method: i, url: a} = function(t) {
                                    if (0 === t.length)
                                        return {
                                            method: "GET",
                                            url: ""
                                        };
                                    if (2 === t.length) {
                                        let[e,n] = t;
                                        return {
                                            url: _(e),
                                            method: v(n, "method") ? String(n.method).toUpperCase() : "GET"
                                        }
                                    }
                                    let e = t[0];
                                    return {
                                        url: _(e),
                                        method: v(e, "method") ? String(e.method).toUpperCase() : "GET"
                                    }
                                }(n)
                                  , o = {
                                    args: n,
                                    fetchData: {
                                        method: i,
                                        url: a
                                    },
                                    startTimestamp: Date.now()
                                };
                                return g("fetch", {
                                    ...o
                                }),
                                t.apply(d, n).then(t => (g("fetch", {
                                    ...o,
                                    endTimestamp: Date.now(),
                                    response: t
                                }),
                                t), t => {
                                    throw g("fetch", {
                                        ...o,
                                        endTimestamp: Date.now(),
                                        error: t
                                    }),
                                    t
                                }
                                )
                            }
                        });
                        break;
                    case "history":
                        (function() {
                            if (!function() {
                                let t = h.chrome
                                  , e = t && t.app && t.app.runtime
                                  , n = "history"in h && !!h.history.pushState && !!h.history.replaceState;
                                return !e && n
                            }())
                                return;
                            let t = d.onpopstate;
                            function e(t) {
                                return function() {
                                    for (var e = arguments.length, n = Array(e), i = 0; i < e; i++)
                                        n[i] = arguments[i];
                                    let a = n.length > 2 ? n[2] : void 0;
                                    if (a) {
                                        let t = r
                                          , e = String(a);
                                        r = e,
                                        g("history", {
                                            from: t,
                                            to: e
                                        })
                                    }
                                    return t.apply(this, n)
                                }
                            }
                            d.onpopstate = function() {
                                for (var e = arguments.length, n = Array(e), i = 0; i < e; i++)
                                    n[i] = arguments[i];
                                let a = d.location.href
                                  , o = r;
                                if (r = a,
                                g("history", {
                                    from: o,
                                    to: a
                                }),
                                t)
                                    try {
                                        return t.apply(this, n)
                                    } catch (t) {}
                            }
                            ,
                            (0,
                            l.hl)(d.history, "pushState", e),
                            (0,
                            l.hl)(d.history, "replaceState", e)
                        }
                        )();
                        break;
                    case "error":
                        w = d.onerror,
                        d.onerror = function(t, e, n, r, i) {
                            return g("error", {
                                column: r,
                                error: i,
                                line: n,
                                msg: t,
                                url: e
                            }),
                            !!w && !w.__SENTRY_LOADER__ && w.apply(this, arguments)
                        }
                        ,
                        d.onerror.__SENTRY_INSTRUMENTED__ = !0;
                        break;
                    case "unhandledrejection":
                        S = d.onunhandledrejection,
                        d.onunhandledrejection = function(t) {
                            return g("unhandledrejection", t),
                            !S || !!S.__SENTRY_LOADER__ || S.apply(this, arguments)
                        }
                        ,
                        d.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0;
                        break;
                    default:
                        return
                    }
            }(t)
        }
        function g(t, e) {
            if (t && p[t])
                for (let n of p[t] || [])
                    try {
                        n(e)
                    } catch (t) {}
        }
        function v(t, e) {
            return !!t && "object" == typeof t && !!t[e]
        }
        function _(t) {
            return "string" == typeof t ? t : t ? v(t, "url") ? t.url : t.toString ? t.toString() : "" : ""
        }
        function b(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return n => {
                if (!n || a === n || function(t) {
                    if ("keypress" !== t.type)
                        return !1;
                    try {
                        let e = t.target;
                        if (!e || !e.tagName)
                            return !0;
                        if ("INPUT" === e.tagName || "TEXTAREA" === e.tagName || e.isContentEditable)
                            return !1
                    } catch (t) {}
                    return !0
                }(n))
                    return;
                let r = "keypress" === n.type ? "input" : n.type;
                void 0 === i ? (t({
                    event: n,
                    name: r,
                    global: e
                }),
                a = n) : function(t, e) {
                    if (!t || t.type !== e.type)
                        return !0;
                    try {
                        if (t.target !== e.target)
                            return !0
                    } catch (t) {}
                    return !1
                }(a, n) && (t({
                    event: n,
                    name: r,
                    global: e
                }),
                a = n),
                clearTimeout(i),
                i = d.setTimeout( () => {
                    i = void 0
                }
                , 1e3)
            }
        }
        let w = null
          , S = null
    },
    2135: function(t, e, n) {
        "use strict";
        n.d(e, {
            Cy: function() {
                return y
            },
            HD: function() {
                return u
            },
            J8: function() {
                return m
            },
            Kj: function() {
                return p
            },
            PO: function() {
                return h
            },
            TX: function() {
                return s
            },
            V9: function() {
                return v
            },
            VW: function() {
                return o
            },
            VZ: function() {
                return i
            },
            cO: function() {
                return d
            },
            fm: function() {
                return l
            },
            i2: function() {
                return g
            },
            kK: function() {
                return f
            },
            pt: function() {
                return c
            }
        });
        let r = Object.prototype.toString;
        function i(t) {
            switch (r.call(t)) {
            case "[object Error]":
            case "[object Exception]":
            case "[object DOMException]":
                return !0;
            default:
                return v(t, Error)
            }
        }
        function a(t, e) {
            return r.call(t) === "[object ".concat(e, "]")
        }
        function o(t) {
            return a(t, "ErrorEvent")
        }
        function s(t) {
            return a(t, "DOMError")
        }
        function l(t) {
            return a(t, "DOMException")
        }
        function u(t) {
            return a(t, "String")
        }
        function c(t) {
            return null === t || "object" != typeof t && "function" != typeof t
        }
        function h(t) {
            return a(t, "Object")
        }
        function d(t) {
            return "undefined" != typeof Event && v(t, Event)
        }
        function f(t) {
            return "undefined" != typeof Element && v(t, Element)
        }
        function p(t) {
            return a(t, "RegExp")
        }
        function m(t) {
            return !!(t && t.then && "function" == typeof t.then)
        }
        function y(t) {
            return h(t) && "nativeEvent"in t && "preventDefault"in t && "stopPropagation"in t
        }
        function g(t) {
            return "number" == typeof t && t != t
        }
        function v(t, e) {
            try {
                return t instanceof e
            } catch (t) {
                return !1
            }
        }
    },
    5120: function(t, e, n) {
        "use strict";
        let r;
        n.d(e, {
            Cf: function() {
                return o
            },
            RU: function() {
                return a
            },
            kg: function() {
                return r
            }
        });
        var i = n(21);
        let a = ["debug", "info", "warn", "error", "log", "assert", "trace"];
        function o(t) {
            if (!("console"in i.n2))
                return t();
            let e = i.n2.console
              , n = {};
            a.forEach(t => {
                let r = e[t] && e[t].__sentry_original__;
                t in e && r && (n[t] = e[t],
                e[t] = r)
            }
            );
            try {
                return t()
            } finally {
                Object.keys(n).forEach(t => {
                    e[t] = n[t]
                }
                )
            }
        }
        r = function() {
            let t = {
                enable: () => {}
                ,
                disable: () => {}
            };
            return a.forEach(e => {
                t[e] = () => void 0
            }
            ),
            t
        }()
    },
    8002: function(t, e, n) {
        "use strict";
        n.d(e, {
            DM: function() {
                return a
            },
            Db: function() {
                return l
            },
            EG: function() {
                return u
            },
            YO: function() {
                return c
            },
            jH: function() {
                return s
            },
            lE: function() {
                return h
            }
        });
        var r = n(738)
          , i = n(21);
        function a() {
            let t = i.n2
              , e = t.crypto || t.msCrypto;
            if (e && e.randomUUID)
                return e.randomUUID().replace(/-/g, "");
            let n = e && e.getRandomValues ? () => e.getRandomValues(new Uint8Array(1))[0] : () => 16 * Math.random();
            return "10000000100040008000100000000000".replace(/[018]/g, t => (t ^ (15 & n()) >> t / 4).toString(16))
        }
        function o(t) {
            return t.exception && t.exception.values ? t.exception.values[0] : void 0
        }
        function s(t) {
            let {message: e, event_id: n} = t;
            if (e)
                return e;
            let r = o(t);
            return r ? r.type && r.value ? "".concat(r.type, ": ").concat(r.value) : r.type || r.value || n || "<unknown>" : n || "<unknown>"
        }
        function l(t, e, n) {
            let r = t.exception = t.exception || {}
              , i = r.values = r.values || []
              , a = i[0] = i[0] || {};
            a.value || (a.value = e || ""),
            a.type || (a.type = n || "Error")
        }
        function u(t, e) {
            let n = o(t);
            if (!n)
                return;
            let r = n.mechanism;
            if (n.mechanism = {
                type: "generic",
                handled: !0,
                ...r,
                ...e
            },
            e && "data"in e) {
                let t = {
                    ...r && r.data,
                    ...e.data
                };
                n.mechanism.data = t
            }
        }
        function c(t) {
            if (t && t.__sentry_captured__)
                return !0;
            try {
                (0,
                r.xp)(t, "__sentry_captured__", !0)
            } catch (t) {}
            return !1
        }
        function h(t) {
            return Array.isArray(t) ? t : [t]
        }
    },
    704: function(t, e, n) {
        "use strict";
        n.d(e, {
            KV: function() {
                return a
            },
            l$: function() {
                return o
            }
        });
        var r = n(3772);
        t = n.hmd(t);
        var i = n(4155);
        function a() {
            return !(0,
            r.n)() && "[object process]" === Object.prototype.toString.call(void 0 !== i ? i : 0)
        }
        function o(t, e) {
            return t.require(e)
        }
    },
    679: function(t, e, n) {
        "use strict";
        n.d(e, {
            Fv: function() {
                return o
            },
            Qy: function() {
                return function t(e) {
                    let n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3
                      , r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 102400
                      , i = o(e, n);
                    return ~-encodeURI(JSON.stringify(i)).split(/%..|./).length > r ? t(e, n - 1, r) : i
                }
            }
        });
        var r = n(2135)
          , i = n(738)
          , a = n(9598);
        function o(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 100
              , o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Infinity;
            try {
                return function t(e, o) {
                    let s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Infinity
                      , l = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Infinity
                      , u = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function() {
                        let t = "function" == typeof WeakSet
                          , e = t ? new WeakSet : [];
                        return [function(n) {
                            if (t)
                                return !!e.has(n) || (e.add(n),
                                !1);
                            for (let t = 0; t < e.length; t++) {
                                let r = e[t];
                                if (r === n)
                                    return !0
                            }
                            return e.push(n),
                            !1
                        }
                        , function(n) {
                            if (t)
                                e.delete(n);
                            else
                                for (let t = 0; t < e.length; t++)
                                    if (e[t] === n) {
                                        e.splice(t, 1);
                                        break
                                    }
                        }
                        ]
                    }()
                      , [c,h] = u;
                    if (null == o || ["number", "boolean", "string"].includes(typeof o) && !(0,
                    r.i2)(o))
                        return o;
                    let d = function(t, e) {
                        try {
                            if ("domain" === t && e && "object" == typeof e && e._events)
                                return "[Domain]";
                            if ("domainEmitter" === t)
                                return "[DomainEmitter]";
                            if (void 0 !== n.g && e === n.g)
                                return "[Global]";
                            if (e === window)
                                return "[Window]";
                            if ("undefined" != typeof document && e === document)
                                return "[Document]";
                            if ((0,
                            r.Cy)(e))
                                return "[SyntheticEvent]";
                            if ("number" == typeof e && e != e)
                                return "[NaN]";
                            if ("function" == typeof e)
                                return "[Function: ".concat((0,
                                a.$P)(e), "]");
                            if ("symbol" == typeof e)
                                return "[".concat(String(e), "]");
                            if ("bigint" == typeof e)
                                return "[BigInt: ".concat(String(e), "]");
                            let i = function(t) {
                                let e = Object.getPrototypeOf(t);
                                return e ? e.constructor.name : "null prototype"
                            }(e);
                            if (/^HTML(\w*)Element$/.test(i))
                                return "[HTMLElement: ".concat(i, "]");
                            return "[object ".concat(i, "]")
                        } catch (t) {
                            return "**non-serializable** (".concat(t, ")")
                        }
                    }(e, o);
                    if (!d.startsWith("[object "))
                        return d;
                    if (o.__sentry_skip_normalization__)
                        return o;
                    let f = "number" == typeof o.__sentry_override_normalization_depth__ ? o.__sentry_override_normalization_depth__ : s;
                    if (0 === f)
                        return d.replace("object ", "");
                    if (c(o))
                        return "[Circular ~]";
                    if (o && "function" == typeof o.toJSON)
                        try {
                            let e = o.toJSON();
                            return t("", e, f - 1, l, u)
                        } catch (t) {}
                    let p = Array.isArray(o) ? [] : {}
                      , m = 0
                      , y = (0,
                    i.Sh)(o);
                    for (let e in y) {
                        if (!Object.prototype.hasOwnProperty.call(y, e))
                            continue;
                        if (m >= l) {
                            p[e] = "[MaxProperties ~]";
                            break
                        }
                        let n = y[e];
                        p[e] = t(e, n, f - 1, l, u),
                        m++
                    }
                    return h(o),
                    p
                }("", t, e, o)
            } catch (t) {
                return {
                    ERROR: "**non-serializable** (".concat(t, ")")
                }
            }
        }
    },
    738: function(t, e, n) {
        "use strict";
        n.d(e, {
            $Q: function() {
                return l
            },
            HK: function() {
                return u
            },
            Jr: function() {
                return m
            },
            Sh: function() {
                return h
            },
            _j: function() {
                return c
            },
            hl: function() {
                return o
            },
            xp: function() {
                return s
            },
            zf: function() {
                return p
            }
        });
        var r = n(6212)
          , i = n(2135)
          , a = n(5086);
        function o(t, e, n) {
            if (!(e in t))
                return;
            let r = t[e]
              , i = n(r);
            if ("function" == typeof i)
                try {
                    l(i, r)
                } catch (t) {}
            t[e] = i
        }
        function s(t, e, n) {
            Object.defineProperty(t, e, {
                value: n,
                writable: !0,
                configurable: !0
            })
        }
        function l(t, e) {
            let n = e.prototype || {};
            t.prototype = e.prototype = n,
            s(t, "__sentry_original__", e)
        }
        function u(t) {
            return t.__sentry_original__
        }
        function c(t) {
            return Object.keys(t).map(e => "".concat(encodeURIComponent(e), "=").concat(encodeURIComponent(t[e]))).join("&")
        }
        function h(t) {
            if ((0,
            i.VZ)(t))
                return {
                    message: t.message,
                    name: t.name,
                    stack: t.stack,
                    ...f(t)
                };
            if (!(0,
            i.cO)(t))
                return t;
            {
                let e = {
                    type: t.type,
                    target: d(t.target),
                    currentTarget: d(t.currentTarget),
                    ...f(t)
                };
                return "undefined" != typeof CustomEvent && (0,
                i.V9)(t, CustomEvent) && (e.detail = t.detail),
                e
            }
        }
        function d(t) {
            try {
                return (0,
                i.kK)(t) ? (0,
                r.Rt)(t) : Object.prototype.toString.call(t)
            } catch (t) {
                return "<unknown>"
            }
        }
        function f(t) {
            if ("object" != typeof t || null === t)
                return {};
            {
                let e = {};
                for (let n in t)
                    Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
                return e
            }
        }
        function p(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 40
              , n = Object.keys(h(t));
            if (n.sort(),
            !n.length)
                return "[object has no keys]";
            if (n[0].length >= e)
                return (0,
                a.$G)(n[0], e);
            for (let t = n.length; t > 0; t--) {
                let r = n.slice(0, t).join(", ");
                if (!(r.length > e)) {
                    if (t === n.length)
                        return r;
                    return (0,
                    a.$G)(r, e)
                }
            }
            return ""
        }
        function m(t) {
            let e = new Map;
            return function t(e, n) {
                if ((0,
                i.PO)(e)) {
                    let r = n.get(e);
                    if (void 0 !== r)
                        return r;
                    let i = {};
                    for (let r of (n.set(e, i),
                    Object.keys(e)))
                        void 0 !== e[r] && (i[r] = t(e[r], n));
                    return i
                }
                if (Array.isArray(e)) {
                    let r = n.get(e);
                    if (void 0 !== r)
                        return r;
                    let i = [];
                    return n.set(e, i),
                    e.forEach(e => {
                        i.push(t(e, n))
                    }
                    ),
                    i
                }
                return e
            }(t, e)
        }
    },
    9598: function(t, e, n) {
        "use strict";
        n.d(e, {
            $P: function() {
                return l
            },
            Sq: function() {
                return o
            },
            pE: function() {
                return a
            }
        });
        let r = /\(error: (.*)\)/
          , i = /captureMessage|captureException/;
        function a() {
            for (var t = arguments.length, e = Array(t), n = 0; n < t; n++)
                e[n] = arguments[n];
            let a = e.sort( (t, e) => t[0] - e[0]).map(t => t[1]);
            return function(t) {
                let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                  , n = []
                  , o = t.split("\n");
                for (let t = e; t < o.length; t++) {
                    let e = o[t];
                    if (e.length > 1024)
                        continue;
                    let i = r.test(e) ? e.replace(r, "$1") : e;
                    if (!i.match(/\S*Error: /)) {
                        for (let t of a) {
                            let e = t(i);
                            if (e) {
                                n.push(e);
                                break
                            }
                        }
                        if (n.length >= 50)
                            break
                    }
                }
                return function(t) {
                    if (!t.length)
                        return [];
                    let e = Array.from(t);
                    return /sentryWrapped/.test(e[e.length - 1].function || "") && e.pop(),
                    e.reverse(),
                    i.test(e[e.length - 1].function || "") && (e.pop(),
                    i.test(e[e.length - 1].function || "") && e.pop()),
                    e.slice(0, 50).map(t => ({
                        ...t,
                        filename: t.filename || e[e.length - 1].filename,
                        function: t.function || "?"
                    }))
                }(n)
            }
        }
        function o(t) {
            return Array.isArray(t) ? a(...t) : t
        }
        let s = "<anonymous>";
        function l(t) {
            try {
                if (!t || "function" != typeof t)
                    return s;
                return t.name || s
            } catch (t) {
                return s
            }
        }
    },
    5086: function(t, e, n) {
        "use strict";
        n.d(e, {
            $G: function() {
                return i
            },
            U0: function() {
                return o
            },
            nK: function() {
                return a
            }
        });
        var r = n(2135);
        function i(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return "string" != typeof t || 0 === e ? t : t.length <= e ? t : "".concat(t.slice(0, e), "...")
        }
        function a(t, e) {
            if (!Array.isArray(t))
                return "";
            let n = [];
            for (let e = 0; e < t.length; e++) {
                let r = t[e];
                try {
                    n.push(String(r))
                } catch (t) {
                    n.push("[value cannot be serialized]")
                }
            }
            return n.join(e)
        }
        function o(t) {
            let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []
              , n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            return e.some(e => (function(t, e) {
                let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                return !!(0,
                r.HD)(t) && ((0,
                r.Kj)(e) ? e.test(t) : !!(0,
                r.HD)(e) && (n ? t === e : t.includes(e)))
            }
            )(t, e, n))
        }
    },
    5961: function(t, e, n) {
        "use strict";
        n.d(e, {
            Ak: function() {
                return a
            },
            Du: function() {
                return o
            },
            t$: function() {
                return s
            }
        });
        var r = n(21);
        let i = (0,
        r.Rf)();
        function a() {
            if (!("fetch"in i))
                return !1;
            try {
                return new Headers,
                new Request("http://www.example.com"),
                new Response,
                !0
            } catch (t) {
                return !1
            }
        }
        function o(t) {
            return t && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(t.toString())
        }
        function s() {
            if (!a())
                return !1;
            if (o(i.fetch))
                return !0;
            let t = !1
              , e = i.document;
            if (e && "function" == typeof e.createElement)
                try {
                    let n = e.createElement("iframe");
                    n.hidden = !0,
                    e.head.appendChild(n),
                    n.contentWindow && n.contentWindow.fetch && (t = o(n.contentWindow.fetch)),
                    e.head.removeChild(n)
                } catch (t) {}
            return t
        }
    },
    7884: function(t, e, n) {
        "use strict";
        n.d(e, {
            $2: function() {
                return s
            },
            WD: function() {
                return o
            },
            cW: function() {
                return l
            }
        });
        var r, i, a = n(2135);
        function o(t) {
            return new l(e => {
                e(t)
            }
            )
        }
        function s(t) {
            return new l( (e, n) => {
                n(t)
            }
            )
        }
        (r = i || (i = {}))[r.PENDING = 0] = "PENDING",
        r[r.RESOLVED = 1] = "RESOLVED",
        r[r.REJECTED = 2] = "REJECTED";
        class l {
            then(t, e) {
                return new l( (n, r) => {
                    this._handlers.push([!1, e => {
                        if (t)
                            try {
                                n(t(e))
                            } catch (t) {
                                r(t)
                            }
                        else
                            n(e)
                    }
                    , t => {
                        if (e)
                            try {
                                n(e(t))
                            } catch (t) {
                                r(t)
                            }
                        else
                            r(t)
                    }
                    ]),
                    this._executeHandlers()
                }
                )
            }
            catch(t) {
                return this.then(t => t, t)
            }
            finally(t) {
                return new l( (e, n) => {
                    let r, i;
                    return this.then(e => {
                        i = !1,
                        r = e,
                        t && t()
                    }
                    , e => {
                        i = !0,
                        r = e,
                        t && t()
                    }
                    ).then( () => {
                        if (i) {
                            n(r);
                            return
                        }
                        e(r)
                    }
                    )
                }
                )
            }
            __init() {
                this._resolve = t => {
                    this._setResult(i.RESOLVED, t)
                }
            }
            __init2() {
                this._reject = t => {
                    this._setResult(i.REJECTED, t)
                }
            }
            __init3() {
                this._setResult = (t, e) => {
                    if (this._state === i.PENDING) {
                        if ((0,
                        a.J8)(e)) {
                            e.then(this._resolve, this._reject);
                            return
                        }
                        this._state = t,
                        this._value = e,
                        this._executeHandlers()
                    }
                }
            }
            __init4() {
                this._executeHandlers = () => {
                    if (this._state === i.PENDING)
                        return;
                    let t = this._handlers.slice();
                    this._handlers = [],
                    t.forEach(t => {
                        t[0] || (this._state === i.RESOLVED && t[1](this._value),
                        this._state === i.REJECTED && t[2](this._value),
                        t[0] = !0)
                    }
                    )
                }
            }
            constructor(t) {
                l.prototype.__init.call(this),
                l.prototype.__init2.call(this),
                l.prototype.__init3.call(this),
                l.prototype.__init4.call(this),
                this._state = i.PENDING,
                this._handlers = [];
                try {
                    t(this._resolve, this._reject)
                } catch (t) {
                    this._reject(t)
                }
            }
        }
    },
    3834: function(t, e, n) {
        "use strict";
        n.d(e, {
            Z1: function() {
                return h
            },
            ph: function() {
                return c
            },
            yW: function() {
                return u
            }
        });
        var r = n(704)
          , i = n(21);
        t = n.hmd(t);
        let a = (0,
        i.Rf)()
          , o = {
            nowSeconds: () => Date.now() / 1e3
        }
          , s = (0,
        r.KV)() ? function() {
            try {
                let e = (0,
                r.l$)(t, "perf_hooks");
                return e.performance
            } catch (t) {
                return
            }
        }() : function() {
            let {performance: t} = a;
            if (!t || !t.now)
                return;
            let e = Date.now() - t.now();
            return {
                now: () => t.now(),
                timeOrigin: e
            }
        }()
          , l = void 0 === s ? o : {
            nowSeconds: () => (s.timeOrigin + s.now()) / 1e3
        }
          , u = o.nowSeconds.bind(o)
          , c = l.nowSeconds.bind(l)
          , h = ( () => {
            let {performance: t} = a;
            if (!t || !t.now)
                return;
            let e = t.now()
              , n = Date.now()
              , r = t.timeOrigin ? Math.abs(t.timeOrigin + e - n) : 36e5
              , i = t.timing && t.timing.navigationStart
              , o = "number" == typeof i ? Math.abs(i + e - n) : 36e5;
            return r < 36e5 || o < 36e5 ? r <= o ? t.timeOrigin : i : n
        }
        )()
    },
    21: function(t, e, n) {
        "use strict";
        function r(t) {
            return t && t.Math == Math ? t : void 0
        }
        n.d(e, {
            Rf: function() {
                return a
            },
            YO: function() {
                return o
            },
            n2: function() {
                return i
            }
        });
        let i = "object" == typeof globalThis && r(globalThis) || r(window) || "object" == typeof self && r(self) || "object" == typeof n.g && r(n.g) || function() {
            return this
        }() || {};
        function a() {
            return i
        }
        function o(t, e, n) {
            let r = n || i
              , a = r.__SENTRY__ = r.__SENTRY__ || {}
              , o = a[t] || (a[t] = e());
            return o
        }
    },
    8044: function(t, e, n) {
        "use strict";
        n.d(e, {
            cp: function() {
                return f
            },
            gG: function() {
                return c
            },
            OA: function() {
                return h
            },
            Rc: function() {
                return r
            }
        });
        var r = {};
        n.r(r),
        n.d(r, {
            captureMessage: function() {
                return a
            }
        });
        var i = n(1406);
        function a(t) {
            let {category: e, message: n, level: r, user: a, error: o, logMessage: s} = t;
            i.n_({
                category: e,
                message: n,
                level: r
            }),
            a && i.av(a),
            s && i.uT(s),
            o && i.Tb(o)
        }
        var o = n(5893)
          , s = n(7294)
          , l = n(4298)
          , u = n.n(l);
        function c(t) {
            gtag("event", "click", t)
        }
        function h(t) {
            gtag("event", "subscription", t)
        }
        let d = "G-GKGZY7YFZT"
          , f = () => ((0,
        s.useEffect)( () => {
            d && (gtag("config", d, {
                send_page_view: !1
            }),
            gtag("event", "page_view", {
                page_path: window.location.pathname,
                send_to: d
            }))
        }
        , []),
        (0,
        o.jsxs)(o.Fragment, {
            children: [(0,
            o.jsx)(u(), {
                strategy: "afterInteractive",
                src: "https://www.googletagmanager.com/gtag/js?id=".concat(d)
            }), (0,
            o.jsx)(u(), {
                id: "google-analytics",
                strategy: "afterInteractive",
                dangerouslySetInnerHTML: {
                    __html: "\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', '".concat(d, "', {\n            page_path: window.location.pathname,\n            });")
                }
            })]
        }))
    },
    9689: function(t, e, n) {
        "use strict";
        n.d(e, {
            bT: function() {
                return N
            },
            pQ: function() {
                return M
            },
            Qp: function() {
                return I
            },
            G_: function() {
                return P
            }
        });
        var r = n(5893)
          , i = n(7294)
          , a = n(9008)
          , o = n.n(a);
        function s() {
            return (s = Object.assign ? Object.assign.bind() : function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = arguments[e];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
                }
                return t
            }
            ).apply(this, arguments)
        }
        function l(t, e) {
            if (null == t)
                return {};
            var n, r, i = {}, a = Object.keys(t);
            for (r = 0; r < a.length; r++)
                n = a[r],
                e.indexOf(n) >= 0 || (i[n] = t[n]);
            return i
        }
        var u = ["keyOverride"]
          , c = ["crossOrigin"]
          , h = {
            templateTitle: "",
            noindex: !1,
            nofollow: !1,
            defaultOpenGraphImageWidth: 0,
            defaultOpenGraphImageHeight: 0,
            defaultOpenGraphVideoWidth: 0,
            defaultOpenGraphVideoHeight: 0
        }
          , d = function(t, e, n) {
            void 0 === e && (e = []);
            var r = void 0 === n ? {} : n
              , a = r.defaultWidth
              , o = r.defaultHeight;
            return e.reduce(function(e, n, r) {
                return e.push(i.createElement("meta", {
                    key: "og:" + t + ":0" + r,
                    property: "og:" + t,
                    content: n.url
                })),
                n.alt && e.push(i.createElement("meta", {
                    key: "og:" + t + ":alt0" + r,
                    property: "og:" + t + ":alt",
                    content: n.alt
                })),
                n.secureUrl && e.push(i.createElement("meta", {
                    key: "og:" + t + ":secure_url0" + r,
                    property: "og:" + t + ":secure_url",
                    content: n.secureUrl.toString()
                })),
                n.type && e.push(i.createElement("meta", {
                    key: "og:" + t + ":type0" + r,
                    property: "og:" + t + ":type",
                    content: n.type.toString()
                })),
                n.width ? e.push(i.createElement("meta", {
                    key: "og:" + t + ":width0" + r,
                    property: "og:" + t + ":width",
                    content: n.width.toString()
                })) : a && e.push(i.createElement("meta", {
                    key: "og:" + t + ":width0" + r,
                    property: "og:" + t + ":width",
                    content: a.toString()
                })),
                n.height ? e.push(i.createElement("meta", {
                    key: "og:" + t + ":height" + r,
                    property: "og:" + t + ":height",
                    content: n.height.toString()
                })) : o && e.push(i.createElement("meta", {
                    key: "og:" + t + ":height" + r,
                    property: "og:" + t + ":height",
                    content: o.toString()
                })),
                e
            }, [])
        }
          , f = function(t) {
            var e, n, r, a, o, f = [];
            t.titleTemplate && (h.templateTitle = t.titleTemplate);
            var p = "";
            t.title ? (p = t.title,
            h.templateTitle && (p = h.templateTitle.replace(/%s/g, function() {
                return p
            }))) : t.defaultTitle && (p = t.defaultTitle),
            p && f.push(i.createElement("title", {
                key: "title"
            }, p));
            var m = void 0 === t.noindex ? h.noindex || t.dangerouslySetAllPagesToNoIndex : t.noindex
              , y = void 0 === t.nofollow ? h.nofollow || t.dangerouslySetAllPagesToNoFollow : t.nofollow
              , g = "";
            if (t.robotsProps) {
                var v = t.robotsProps
                  , _ = v.nosnippet
                  , b = v.maxSnippet
                  , w = v.maxImagePreview
                  , S = v.maxVideoPreview
                  , k = v.noarchive
                  , x = v.noimageindex
                  , E = v.notranslate
                  , T = v.unavailableAfter;
                g = (_ ? ",nosnippet" : "") + (b ? ",max-snippet:" + b : "") + (w ? ",max-image-preview:" + w : "") + (k ? ",noarchive" : "") + (T ? ",unavailable_after:" + T : "") + (x ? ",noimageindex" : "") + (S ? ",max-video-preview:" + S : "") + (E ? ",notranslate" : "")
            }
            if (m || y ? (t.dangerouslySetAllPagesToNoIndex && (h.noindex = !0),
            t.dangerouslySetAllPagesToNoFollow && (h.nofollow = !0),
            f.push(i.createElement("meta", {
                key: "robots",
                name: "robots",
                content: (m ? "noindex" : "index") + "," + (y ? "nofollow" : "follow") + g
            }))) : f.push(i.createElement("meta", {
                key: "robots",
                name: "robots",
                content: "index,follow" + g
            })),
            t.description && f.push(i.createElement("meta", {
                key: "description",
                name: "description",
                content: t.description
            })),
            t.themeColor && f.push(i.createElement("meta", {
                key: "theme-color",
                name: "theme-color",
                content: t.themeColor
            })),
            t.mobileAlternate && f.push(i.createElement("link", {
                rel: "alternate",
                key: "mobileAlternate",
                media: t.mobileAlternate.media,
                href: t.mobileAlternate.href
            })),
            t.languageAlternates && t.languageAlternates.length > 0 && t.languageAlternates.forEach(function(t) {
                f.push(i.createElement("link", {
                    rel: "alternate",
                    key: "languageAlternate-" + t.hrefLang,
                    hrefLang: t.hrefLang,
                    href: t.href
                }))
            }),
            t.twitter && (t.twitter.cardType && f.push(i.createElement("meta", {
                key: "twitter:card",
                name: "twitter:card",
                content: t.twitter.cardType
            })),
            t.twitter.site && f.push(i.createElement("meta", {
                key: "twitter:site",
                name: "twitter:site",
                content: t.twitter.site
            })),
            t.twitter.handle && f.push(i.createElement("meta", {
                key: "twitter:creator",
                name: "twitter:creator",
                content: t.twitter.handle
            }))),
            t.facebook && t.facebook.appId && f.push(i.createElement("meta", {
                key: "fb:app_id",
                property: "fb:app_id",
                content: t.facebook.appId
            })),
            (null != (e = t.openGraph) && e.title || p) && f.push(i.createElement("meta", {
                key: "og:title",
                property: "og:title",
                content: (null == (a = t.openGraph) ? void 0 : a.title) || p
            })),
            (null != (n = t.openGraph) && n.description || t.description) && f.push(i.createElement("meta", {
                key: "og:description",
                property: "og:description",
                content: (null == (o = t.openGraph) ? void 0 : o.description) || t.description
            })),
            t.openGraph) {
                if ((t.openGraph.url || t.canonical) && f.push(i.createElement("meta", {
                    key: "og:url",
                    property: "og:url",
                    content: t.openGraph.url || t.canonical
                })),
                t.openGraph.type) {
                    var O = t.openGraph.type.toLowerCase();
                    f.push(i.createElement("meta", {
                        key: "og:type",
                        property: "og:type",
                        content: O
                    })),
                    "profile" === O && t.openGraph.profile ? (t.openGraph.profile.firstName && f.push(i.createElement("meta", {
                        key: "profile:first_name",
                        property: "profile:first_name",
                        content: t.openGraph.profile.firstName
                    })),
                    t.openGraph.profile.lastName && f.push(i.createElement("meta", {
                        key: "profile:last_name",
                        property: "profile:last_name",
                        content: t.openGraph.profile.lastName
                    })),
                    t.openGraph.profile.username && f.push(i.createElement("meta", {
                        key: "profile:username",
                        property: "profile:username",
                        content: t.openGraph.profile.username
                    })),
                    t.openGraph.profile.gender && f.push(i.createElement("meta", {
                        key: "profile:gender",
                        property: "profile:gender",
                        content: t.openGraph.profile.gender
                    }))) : "book" === O && t.openGraph.book ? (t.openGraph.book.authors && t.openGraph.book.authors.length && t.openGraph.book.authors.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "book:author:0" + e,
                            property: "book:author",
                            content: t
                        }))
                    }),
                    t.openGraph.book.isbn && f.push(i.createElement("meta", {
                        key: "book:isbn",
                        property: "book:isbn",
                        content: t.openGraph.book.isbn
                    })),
                    t.openGraph.book.releaseDate && f.push(i.createElement("meta", {
                        key: "book:release_date",
                        property: "book:release_date",
                        content: t.openGraph.book.releaseDate
                    })),
                    t.openGraph.book.tags && t.openGraph.book.tags.length && t.openGraph.book.tags.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "book:tag:0" + e,
                            property: "book:tag",
                            content: t
                        }))
                    })) : "article" === O && t.openGraph.article ? (t.openGraph.article.publishedTime && f.push(i.createElement("meta", {
                        key: "article:published_time",
                        property: "article:published_time",
                        content: t.openGraph.article.publishedTime
                    })),
                    t.openGraph.article.modifiedTime && f.push(i.createElement("meta", {
                        key: "article:modified_time",
                        property: "article:modified_time",
                        content: t.openGraph.article.modifiedTime
                    })),
                    t.openGraph.article.expirationTime && f.push(i.createElement("meta", {
                        key: "article:expiration_time",
                        property: "article:expiration_time",
                        content: t.openGraph.article.expirationTime
                    })),
                    t.openGraph.article.authors && t.openGraph.article.authors.length && t.openGraph.article.authors.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "article:author:0" + e,
                            property: "article:author",
                            content: t
                        }))
                    }),
                    t.openGraph.article.section && f.push(i.createElement("meta", {
                        key: "article:section",
                        property: "article:section",
                        content: t.openGraph.article.section
                    })),
                    t.openGraph.article.tags && t.openGraph.article.tags.length && t.openGraph.article.tags.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "article:tag:0" + e,
                            property: "article:tag",
                            content: t
                        }))
                    })) : ("video.movie" === O || "video.episode" === O || "video.tv_show" === O || "video.other" === O) && t.openGraph.video && (t.openGraph.video.actors && t.openGraph.video.actors.length && t.openGraph.video.actors.forEach(function(t, e) {
                        t.profile && f.push(i.createElement("meta", {
                            key: "video:actor:0" + e,
                            property: "video:actor",
                            content: t.profile
                        })),
                        t.role && f.push(i.createElement("meta", {
                            key: "video:actor:role:0" + e,
                            property: "video:actor:role",
                            content: t.role
                        }))
                    }),
                    t.openGraph.video.directors && t.openGraph.video.directors.length && t.openGraph.video.directors.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "video:director:0" + e,
                            property: "video:director",
                            content: t
                        }))
                    }),
                    t.openGraph.video.writers && t.openGraph.video.writers.length && t.openGraph.video.writers.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "video:writer:0" + e,
                            property: "video:writer",
                            content: t
                        }))
                    }),
                    t.openGraph.video.duration && f.push(i.createElement("meta", {
                        key: "video:duration",
                        property: "video:duration",
                        content: t.openGraph.video.duration.toString()
                    })),
                    t.openGraph.video.releaseDate && f.push(i.createElement("meta", {
                        key: "video:release_date",
                        property: "video:release_date",
                        content: t.openGraph.video.releaseDate
                    })),
                    t.openGraph.video.tags && t.openGraph.video.tags.length && t.openGraph.video.tags.forEach(function(t, e) {
                        f.push(i.createElement("meta", {
                            key: "video:tag:0" + e,
                            property: "video:tag",
                            content: t
                        }))
                    }),
                    t.openGraph.video.series && f.push(i.createElement("meta", {
                        key: "video:series",
                        property: "video:series",
                        content: t.openGraph.video.series
                    })))
                }
                t.defaultOpenGraphImageWidth && (h.defaultOpenGraphImageWidth = t.defaultOpenGraphImageWidth),
                t.defaultOpenGraphImageHeight && (h.defaultOpenGraphImageHeight = t.defaultOpenGraphImageHeight),
                t.openGraph.images && t.openGraph.images.length && f.push.apply(f, d("image", t.openGraph.images, {
                    defaultWidth: h.defaultOpenGraphImageWidth,
                    defaultHeight: h.defaultOpenGraphImageHeight
                })),
                t.defaultOpenGraphVideoWidth && (h.defaultOpenGraphVideoWidth = t.defaultOpenGraphVideoWidth),
                t.defaultOpenGraphVideoHeight && (h.defaultOpenGraphVideoHeight = t.defaultOpenGraphVideoHeight),
                t.openGraph.videos && t.openGraph.videos.length && f.push.apply(f, d("video", t.openGraph.videos, {
                    defaultWidth: h.defaultOpenGraphVideoWidth,
                    defaultHeight: h.defaultOpenGraphVideoHeight
                })),
                t.openGraph.audio && f.push.apply(f, d("audio", t.openGraph.audio)),
                t.openGraph.locale && f.push(i.createElement("meta", {
                    key: "og:locale",
                    property: "og:locale",
                    content: t.openGraph.locale
                })),
                (t.openGraph.siteName || t.openGraph.site_name) && f.push(i.createElement("meta", {
                    key: "og:site_name",
                    property: "og:site_name",
                    content: t.openGraph.siteName || t.openGraph.site_name
                }))
            }
            return t.canonical && f.push(i.createElement("link", {
                rel: "canonical",
                href: t.canonical,
                key: "canonical"
            })),
            t.additionalMetaTags && t.additionalMetaTags.length > 0 && t.additionalMetaTags.forEach(function(t) {
                var e, n, r = t.keyOverride, a = l(t, u);
                f.push(i.createElement("meta", s({
                    key: "meta:" + (null != (e = null != (n = null != r ? r : a.name) ? n : a.property) ? e : a.httpEquiv)
                }, a)))
            }),
            null != (r = t.additionalLinkTags) && r.length && t.additionalLinkTags.forEach(function(t) {
                var e, n = t.crossOrigin, r = l(t, c);
                f.push(i.createElement("link", s({
                    key: "link" + (null != (e = r.keyOverride) ? e : r.href) + r.rel
                }, r, {
                    crossOrigin: "anonymous" === n || "use-credentials" === n || "" === n ? n : void 0
                })))
            }),
            f
        }
          , p = function(t) {
            return i.createElement(o(), null, f(t))
        }
          , m = function(t) {
            var e = t.title
              , n = t.titleTemplate
              , r = t.defaultTitle
              , a = t.themeColor
              , o = t.dangerouslySetAllPagesToNoIndex
              , s = t.dangerouslySetAllPagesToNoFollow
              , l = t.description
              , u = t.canonical
              , c = t.facebook
              , h = t.openGraph
              , d = t.additionalMetaTags
              , f = t.twitter
              , m = t.defaultOpenGraphImageWidth
              , y = t.defaultOpenGraphImageHeight
              , g = t.defaultOpenGraphVideoWidth
              , v = t.defaultOpenGraphVideoHeight
              , _ = t.mobileAlternate
              , b = t.languageAlternates
              , w = t.additionalLinkTags
              , S = t.robotsProps;
            return i.createElement(p, {
                title: e,
                titleTemplate: n,
                defaultTitle: r,
                themeColor: a,
                dangerouslySetAllPagesToNoIndex: void 0 !== o && o,
                dangerouslySetAllPagesToNoFollow: void 0 !== s && s,
                description: l,
                canonical: u,
                facebook: c,
                openGraph: h,
                additionalMetaTags: d,
                twitter: f,
                defaultOpenGraphImageWidth: m,
                defaultOpenGraphImageHeight: y,
                defaultOpenGraphVideoWidth: g,
                defaultOpenGraphVideoHeight: v,
                mobileAlternate: _,
                languageAlternates: b,
                additionalLinkTags: w,
                robotsProps: S
            })
        }
          , y = function(t, e) {
            var n = e;
            return Array.isArray(n) && 1 === n.length && (n = s({}, e[0])),
            {
                __html: JSON.stringify(Array.isArray(n) ? n.map(function(e) {
                    return g(t, e)
                }) : g(t, n), w)
            }
        }
          , g = function(t, e) {
            var n = e.id
              , r = s({}, (void 0 === n ? void 0 : n) ? {
                "@id": e.id
            } : {}, e);
            return delete r.id,
            s({
                "@context": "https://schema.org",
                "@type": t
            }, r)
        }
          , v = Object.freeze({
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&apos;"
        })
          , _ = RegExp("[" + Object.keys(v).join("") + "]", "g")
          , b = function(t) {
            return v[t]
        }
          , w = function(t, e) {
            switch (typeof e) {
            case "object":
                if (null === e)
                    return;
                return e;
            case "number":
            case "boolean":
            case "bigint":
                return e;
            case "string":
                return e.replace(_, b);
            default:
                return
            }
        }
          , S = ["type", "keyOverride", "scriptKey", "scriptId", "dataArray", "useAppDir"];
        function k(t) {
            var e = t.type
              , n = void 0 === e ? "Thing" : e
              , r = t.keyOverride
              , a = t.scriptKey
              , u = t.scriptId
              , c = void 0 === u ? void 0 : u
              , h = t.dataArray
              , d = t.useAppDir
              , f = l(t, S)
              , p = function() {
                return i.createElement("script", {
                    type: "application/ld+json",
                    id: c,
                    "data-testid": c,
                    dangerouslySetInnerHTML: y(n, void 0 === h ? s({}, f) : h),
                    key: "jsonld-" + a + (r ? "-" + r : "")
                })
            };
            return void 0 !== d && d ? i.createElement(p, null) : i.createElement(o(), null, p())
        }
        function x(t) {
            return "string" == typeof t ? t : s({
                "@type": "PostalAddress"
            }, t)
        }
        var E = ["type", "keyOverride", "address", "contactPoints", "contactPoint"];
        function T(t) {
            var e = t.type
              , n = t.keyOverride
              , r = t.address
              , a = t.contactPoints
              , o = t.contactPoint
              , u = s({}, l(t, E), {
                address: function(t) {
                    if (t)
                        return Array.isArray(t) ? 1 === t.length ? x(t[0]) : t.map(x) : x(t)
                }(r),
                contactPoint: function(t) {
                    if (t && t.length)
                        return t.map(function(t) {
                            return s({
                                "@type": "ContactPoint"
                            }, t)
                        })
                }(o || a)
            });
            return i.createElement(k, s({
                type: void 0 === e ? "Organization" : e,
                keyOverride: n
            }, u, {
                scriptKey: "organization"
            }))
        }
        var O = ["type", "keyOverride", "mainEntity"];
        function C(t) {
            var e = t.type
              , n = t.keyOverride
              , r = t.mainEntity
              , a = s({}, l(t, O), {
                mainEntity: function(t) {
                    if (t && t.length)
                        return t.map(function(t) {
                            return {
                                "@type": "Question",
                                name: t.questionName,
                                acceptedAnswer: {
                                    "@type": "Answer",
                                    text: t.acceptedAnswerText
                                }
                            }
                        })
                }(r)
            });
            return i.createElement(k, s({
                type: void 0 === e ? "FAQPage" : e,
                keyOverride: n
            }, a, {
                scriptKey: "faq-page"
            }))
        }
        let A = "Union Developers - Experi\xeancia pr\xe1tica e imersiva para desenvolvedores juniors"
          , R = "Transforme sua carreira como desenvolvedor j\xfanior no Union. Vivencie uma jornada imersiva com projetos reais, metodologias \xe1geis e mentores experientes. Fa\xe7a parte dessa experi\xeancia \xfanica e ganhe habilidades valiosas para o mercado. Inscreva-se agora!"
          , D = "https://www.uniondevelopers.com.br"
          , I = "Union Developers"
          , P = {
            title: A,
            description: R,
            canonical: D,
            openGraph: {
                type: "website",
                locale: "pt-BR",
                url: D,
                siteName: "Union Developers",
                title: A,
                description: R,
                images: [{
                    url: "https://media.graphassets.com/kf2ZJ05TRaiVPpM9kY3A?_gl=1*1l8vzfg*_ga*OTYxODQ4MDY4LjE2ODQxOTQ2OTk.*_ga_G6FYGSYGZ4*MTY5MTI3NzE4My4xMC4xLjE2OTEyNzc4NjguMzcuMC4w",
                    alt: "Banner Union Developers",
                    width: 1200,
                    height: 627
                }]
            }
        }
          , M = () => (0,
        r.jsx)(m, {
            ...P
        })
          , N = t => {
            let {organization: e, faq: n} = t
              , i = n.questions.map(t => ({
                questionName: t.title,
                acceptedAnswerText: t.content
            }));
            return (0,
            r.jsxs)(r.Fragment, {
                children: [(0,
                r.jsx)(T, {
                    ...e
                }), (0,
                r.jsx)(C, {
                    mainEntity: i
                })]
            })
        }
    },
    3870: function(t, e, n) {
        "use strict";
        n.r(e),
        n.d(e, {
            default: function() {
                return rZ
            }
        });
        var r, i, a, o, s, l, u, c, h, d, f, p, m = n(5893), y = function(t, e) {
            return (y = Object.setPrototypeOf || ({
                __proto__: []
            })instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
            }
            )(t, e)
        }, g = "Invariant Violation", v = Object.setPrototypeOf, _ = void 0 === v ? function(t, e) {
            return t.__proto__ = e,
            t
        }
        : v, b = function(t) {
            function e(n) {
                void 0 === n && (n = g);
                var r = t.call(this, "number" == typeof n ? g + ": " + n + " (see https://github.com/apollographql/invariant-packages)" : n) || this;
                return r.framesToPop = 1,
                r.name = g,
                _(r, e.prototype),
                r
            }
            return !function(t, e) {
                if ("function" != typeof e && null !== e)
                    throw TypeError("Class extends value " + String(e) + " is not a constructor or null");
                function n() {
                    this.constructor = t
                }
                y(t, e),
                t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
                new n)
            }(e, t),
            e
        }(Error);
        function w(t, e) {
            if (!t)
                throw new b(e)
        }
        var S = ["debug", "log", "warn", "error", "silent"]
          , k = S.indexOf("log");
        function x(t) {
            return function() {
                if (S.indexOf(t) >= k)
                    return (console[t] || console.log).apply(console, arguments)
            }
        }
        function E(t) {
            try {
                return t()
            } catch (t) {}
        }
        (r = w || (w = {})).debug = x("debug"),
        r.log = x("log"),
        r.warn = x("warn"),
        r.error = x("error");
        var T = E(function() {
            return globalThis
        }) || E(function() {
            return window
        }) || E(function() {
            return self
        }) || E(function() {
            return global
        }) || E(function() {
            return E.constructor("return this")()
        })
          , O = "__DEV__"
          , C = function() {
            try {
                return !!__DEV__
            } catch (t) {
                return Object.defineProperty(T, O, {
                    value: "production" !== E(function() {
                        return "production"
                    }),
                    enumerable: !1,
                    configurable: !0,
                    writable: !0
                }),
                T[O]
            }
        }()
          , A = n(4155);
        function R(t) {
            try {
                return t()
            } catch (t) {}
        }
        var D = R(function() {
            return globalThis
        }) || R(function() {
            return window
        }) || R(function() {
            return self
        }) || R(function() {
            return global
        }) || R(function() {
            return R.constructor("return this")()
        })
          , I = !1;
        !D || R(function() {
            return "production"
        }) || R(function() {
            return A
        }) || (Object.defineProperty(D, "process", {
            value: {
                env: {
                    NODE_ENV: "production"
                }
            },
            configurable: !0,
            enumerable: !1,
            writable: !0
        }),
        I = !0);
        I && (delete D.process,
        I = !1),
        __DEV__ ? w("boolean" == typeof C, C) : w("boolean" == typeof C, 39);
        var P = n(7294)
          , M = "function" == typeof WeakMap && "ReactNative" !== E(function() {
            return navigator.product
        })
          , N = "function" == typeof WeakSet
          , L = "function" == typeof Symbol && "function" == typeof Symbol.for
          , j = L && Symbol.asyncIterator;
        E(function() {
            return window.document.createElement
        }),
        E(function() {
            return navigator.userAgent.indexOf("jsdom") >= 0
        });
        var F = L ? Symbol.for("__APOLLO_CONTEXT__") : "__APOLLO_CONTEXT__"
          , V = function(t) {
            var e, n = t.client, r = t.children, i = ((e = P.createContext[F]) || (Object.defineProperty(P.createContext, F, {
                value: e = P.createContext({}),
                enumerable: !1,
                writable: !1,
                configurable: !0
            }),
            e.displayName = "ApolloContext"),
            e);
            return P.createElement(i.Consumer, null, function(t) {
                return void 0 === t && (t = {}),
                n && t.client !== n && (t = Object.assign({}, t, {
                    client: n
                })),
                __DEV__ ? w(t.client, 'ApolloProvider was not passed a client instance. Make sure you pass in your client via the "client" prop.') : w(t.client, 29),
                P.createElement(i.Provider, {
                    value: t
                }, r)
            })
        }
          , z = n(4141)
          , q = n(7740)
          , U = function(t, e) {
            return (U = Object.setPrototypeOf || ({
                __proto__: []
            })instanceof Array && function(t, e) {
                t.__proto__ = e
            }
            || function(t, e) {
                for (var n in e)
                    Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n])
            }
            )(t, e)
        };
        function B(t, e) {
            if ("function" != typeof e && null !== e)
                throw TypeError("Class extends value " + String(e) + " is not a constructor or null");
            function n() {
                this.constructor = t
            }
            U(t, e),
            t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype,
            new n)
        }
        var G = function() {
            return (G = Object.assign || function(t) {
                for (var e, n = 1, r = arguments.length; n < r; n++)
                    for (var i in e = arguments[n])
                        Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                return t
            }
            ).apply(this, arguments)
        };
        function W(t, e) {
            var n = {};
            for (var r in t)
                Object.prototype.hasOwnProperty.call(t, r) && 0 > e.indexOf(r) && (n[r] = t[r]);
            if (null != t && "function" == typeof Object.getOwnPropertySymbols)
                for (var i = 0, r = Object.getOwnPropertySymbols(t); i < r.length; i++)
                    0 > e.indexOf(r[i]) && Object.prototype.propertyIsEnumerable.call(t, r[i]) && (n[r[i]] = t[r[i]]);
            return n
        }
        function H(t, e, n, r) {
            return new (n || (n = Promise))(function(i, a) {
                function o(t) {
                    try {
                        l(r.next(t))
                    } catch (t) {
                        a(t)
                    }
                }
                function s(t) {
                    try {
                        l(r.throw(t))
                    } catch (t) {
                        a(t)
                    }
                }
                function l(t) {
                    var e;
                    t.done ? i(t.value) : ((e = t.value)instanceof n ? e : new n(function(t) {
                        t(e)
                    }
                    )).then(o, s)
                }
                l((r = r.apply(t, e || [])).next())
            }
            )
        }
        function Q(t, e) {
            var n, r, i, a, o = {
                label: 0,
                sent: function() {
                    if (1 & i[0])
                        throw i[1];
                    return i[1]
                },
                trys: [],
                ops: []
            };
            return a = {
                next: s(0),
                throw: s(1),
                return: s(2)
            },
            "function" == typeof Symbol && (a[Symbol.iterator] = function() {
                return this
            }
            ),
            a;
            function s(s) {
                return function(l) {
                    return function(s) {
                        if (n)
                            throw TypeError("Generator is already executing.");
                        for (; a && (a = 0,
                        s[0] && (o = 0)),
                        o; )
                            try {
                                if (n = 1,
                                r && (i = 2 & s[0] ? r.return : s[0] ? r.throw || ((i = r.return) && i.call(r),
                                0) : r.next) && !(i = i.call(r, s[1])).done)
                                    return i;
                                switch (r = 0,
                                i && (s = [2 & s[0], i.value]),
                                s[0]) {
                                case 0:
                                case 1:
                                    i = s;
                                    break;
                                case 4:
                                    return o.label++,
                                    {
                                        value: s[1],
                                        done: !1
                                    };
                                case 5:
                                    o.label++,
                                    r = s[1],
                                    s = [0];
                                    continue;
                                case 7:
                                    s = o.ops.pop(),
                                    o.trys.pop();
                                    continue;
                                default:
                                    if (!(i = (i = o.trys).length > 0 && i[i.length - 1]) && (6 === s[0] || 2 === s[0])) {
                                        o = 0;
                                        continue
                                    }
                                    if (3 === s[0] && (!i || s[1] > i[0] && s[1] < i[3])) {
                                        o.label = s[1];
                                        break
                                    }
                                    if (6 === s[0] && o.label < i[1]) {
                                        o.label = i[1],
                                        i = s;
                                        break
                                    }
                                    if (i && o.label < i[2]) {
                                        o.label = i[2],
                                        o.ops.push(s);
                                        break
                                    }
                                    i[2] && o.ops.pop(),
                                    o.trys.pop();
                                    continue
                                }
                                s = e.call(t, o)
                            } catch (t) {
                                s = [6, t],
                                r = 0
                            } finally {
                                n = i = 0
                            }
                        if (5 & s[0])
                            throw s[1];
                        return {
                            value: s[0] ? s[1] : void 0,
                            done: !0
                        }
                    }([s, l])
                }
            }
        }
        function $(t, e, n) {
            if (n || 2 == arguments.length)
                for (var r, i = 0, a = e.length; i < a; i++)
                    !r && i in e || (r || (r = Array.prototype.slice.call(e, 0, i)),
                    r[i] = e[i]);
            return t.concat(r || Array.prototype.slice.call(e))
        }
        function Y(t, e) {
            (null == e || e > t.length) && (e = t.length);
            for (var n = 0, r = Array(e); n < e; n++)
                r[n] = t[n];
            return r
        }
        function Z(t, e) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                r.enumerable = r.enumerable || !1,
                r.configurable = !0,
                "value"in r && (r.writable = !0),
                Object.defineProperty(t, r.key, r)
            }
        }
        function J(t, e, n) {
            return e && Z(t.prototype, e),
            n && Z(t, n),
            Object.defineProperty(t, "prototype", {
                writable: !1
            }),
            t
        }
        "function" == typeof SuppressedError && SuppressedError;
        var X = function() {
            return "function" == typeof Symbol
        }
          , K = function(t) {
            return X() && !!Symbol[t]
        }
          , tt = function(t) {
            return K(t) ? Symbol[t] : "@@" + t
        };
        X() && !K("observable") && (Symbol.observable = Symbol("observable"));
        var te = tt("iterator")
          , tn = tt("observable")
          , tr = tt("species");
        function ti(t, e) {
            var n = t[e];
            if (null != n) {
                if ("function" != typeof n)
                    throw TypeError(n + " is not a function");
                return n
            }
        }
        function ta(t) {
            var e = t.constructor;
            return void 0 !== e && null === (e = e[tr]) && (e = void 0),
            void 0 !== e ? e : tp
        }
        function to(t) {
            to.log ? to.log(t) : setTimeout(function() {
                throw t
            })
        }
        function ts(t) {
            Promise.resolve().then(function() {
                try {
                    t()
                } catch (t) {
                    to(t)
                }
            })
        }
        function tl(t) {
            var e = t._cleanup;
            if (void 0 !== e) {
                if (t._cleanup = void 0,
                !e)
                    return;
                try {
                    if ("function" == typeof e)
                        e();
                    else {
                        var n = ti(e, "unsubscribe");
                        n && n.call(e)
                    }
                } catch (t) {
                    to(t)
                }
            }
        }
        function tu(t) {
            t._observer = void 0,
            t._queue = void 0,
            t._state = "closed"
        }
        function tc(t, e, n) {
            t._state = "running";
            var r = t._observer;
            try {
                var i = ti(r, e);
                switch (e) {
                case "next":
                    i && i.call(r, n);
                    break;
                case "error":
                    if (tu(t),
                    i)
                        i.call(r, n);
                    else
                        throw n;
                    break;
                case "complete":
                    tu(t),
                    i && i.call(r)
                }
            } catch (t) {
                to(t)
            }
            "closed" === t._state ? tl(t) : "running" === t._state && (t._state = "ready")
        }
        function th(t, e, n) {
            if ("closed" !== t._state) {
                if ("buffering" === t._state) {
                    t._queue.push({
                        type: e,
                        value: n
                    });
                    return
                }
                if ("ready" !== t._state) {
                    t._state = "buffering",
                    t._queue = [{
                        type: e,
                        value: n
                    }],
                    ts(function() {
                        return function(t) {
                            var e = t._queue;
                            if (e) {
                                t._queue = void 0,
                                t._state = "ready";
                                for (var n = 0; n < e.length && (tc(t, e[n].type, e[n].value),
                                "closed" !== t._state); ++n)
                                    ;
                            }
                        }(t)
                    });
                    return
                }
                tc(t, e, n)
            }
        }
        var td = function() {
            function t(t, e) {
                this._cleanup = void 0,
                this._observer = t,
                this._queue = void 0,
                this._state = "initializing";
                var n = new tf(this);
                try {
                    this._cleanup = e.call(void 0, n)
                } catch (t) {
                    n.error(t)
                }
                "initializing" === this._state && (this._state = "ready")
            }
            return t.prototype.unsubscribe = function() {
                "closed" !== this._state && (tu(this),
                tl(this))
            }
            ,
            J(t, [{
                key: "closed",
                get: function() {
                    return "closed" === this._state
                }
            }]),
            t
        }()
          , tf = function() {
            function t(t) {
                this._subscription = t
            }
            var e = t.prototype;
            return e.next = function(t) {
                th(this._subscription, "next", t)
            }
            ,
            e.error = function(t) {
                th(this._subscription, "error", t)
            }
            ,
            e.complete = function() {
                th(this._subscription, "complete")
            }
            ,
            J(t, [{
                key: "closed",
                get: function() {
                    return "closed" === this._subscription._state
                }
            }]),
            t
        }()
          , tp = function() {
            function t(e) {
                if (!(this instanceof t))
                    throw TypeError("Observable cannot be called as a function");
                if ("function" != typeof e)
                    throw TypeError("Observable initializer must be a function");
                this._subscriber = e
            }
            var e = t.prototype;
            return e.subscribe = function(t) {
                return ("object" != typeof t || null === t) && (t = {
                    next: t,
                    error: arguments[1],
                    complete: arguments[2]
                }),
                new td(t,this._subscriber)
            }
            ,
            e.forEach = function(t) {
                var e = this;
                return new Promise(function(n, r) {
                    if ("function" != typeof t) {
                        r(TypeError(t + " is not a function"));
                        return
                    }
                    function i() {
                        a.unsubscribe(),
                        n()
                    }
                    var a = e.subscribe({
                        next: function(e) {
                            try {
                                t(e, i)
                            } catch (t) {
                                r(t),
                                a.unsubscribe()
                            }
                        },
                        error: r,
                        complete: n
                    })
                }
                )
            }
            ,
            e.map = function(t) {
                var e = this;
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function");
                return new (ta(this))(function(n) {
                    return e.subscribe({
                        next: function(e) {
                            try {
                                e = t(e)
                            } catch (t) {
                                return n.error(t)
                            }
                            n.next(e)
                        },
                        error: function(t) {
                            n.error(t)
                        },
                        complete: function() {
                            n.complete()
                        }
                    })
                }
                )
            }
            ,
            e.filter = function(t) {
                var e = this;
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function");
                return new (ta(this))(function(n) {
                    return e.subscribe({
                        next: function(e) {
                            try {
                                if (!t(e))
                                    return
                            } catch (t) {
                                return n.error(t)
                            }
                            n.next(e)
                        },
                        error: function(t) {
                            n.error(t)
                        },
                        complete: function() {
                            n.complete()
                        }
                    })
                }
                )
            }
            ,
            e.reduce = function(t) {
                var e = this;
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function");
                var n = ta(this)
                  , r = arguments.length > 1
                  , i = !1
                  , a = arguments[1]
                  , o = a;
                return new n(function(n) {
                    return e.subscribe({
                        next: function(e) {
                            var a = !i;
                            if (i = !0,
                            !a || r)
                                try {
                                    o = t(o, e)
                                } catch (t) {
                                    return n.error(t)
                                }
                            else
                                o = e
                        },
                        error: function(t) {
                            n.error(t)
                        },
                        complete: function() {
                            if (!i && !r)
                                return n.error(TypeError("Cannot reduce an empty sequence"));
                            n.next(o),
                            n.complete()
                        }
                    })
                }
                )
            }
            ,
            e.concat = function() {
                for (var t = this, e = arguments.length, n = Array(e), r = 0; r < e; r++)
                    n[r] = arguments[r];
                var i = ta(this);
                return new i(function(e) {
                    var r, a = 0;
                    return function t(o) {
                        r = o.subscribe({
                            next: function(t) {
                                e.next(t)
                            },
                            error: function(t) {
                                e.error(t)
                            },
                            complete: function() {
                                a === n.length ? (r = void 0,
                                e.complete()) : t(i.from(n[a++]))
                            }
                        })
                    }(t),
                    function() {
                        r && (r.unsubscribe(),
                        r = void 0)
                    }
                }
                )
            }
            ,
            e.flatMap = function(t) {
                var e = this;
                if ("function" != typeof t)
                    throw TypeError(t + " is not a function");
                var n = ta(this);
                return new n(function(r) {
                    var i = []
                      , a = e.subscribe({
                        next: function(e) {
                            if (t)
                                try {
                                    e = t(e)
                                } catch (t) {
                                    return r.error(t)
                                }
                            var a = n.from(e).subscribe({
                                next: function(t) {
                                    r.next(t)
                                },
                                error: function(t) {
                                    r.error(t)
                                },
                                complete: function() {
                                    var t = i.indexOf(a);
                                    t >= 0 && i.splice(t, 1),
                                    o()
                                }
                            });
                            i.push(a)
                        },
                        error: function(t) {
                            r.error(t)
                        },
                        complete: function() {
                            o()
                        }
                    });
                    function o() {
                        a.closed && 0 === i.length && r.complete()
                    }
                    return function() {
                        i.forEach(function(t) {
                            return t.unsubscribe()
                        }),
                        a.unsubscribe()
                    }
                }
                )
            }
            ,
            e[tn] = function() {
                return this
            }
            ,
            t.from = function(e) {
                var n = "function" == typeof this ? this : t;
                if (null == e)
                    throw TypeError(e + " is not an object");
                var r = ti(e, tn);
                if (r) {
                    var i = r.call(e);
                    if (Object(i) !== i)
                        throw TypeError(i + " is not an object");
                    return i instanceof tp && i.constructor === n ? i : new n(function(t) {
                        return i.subscribe(t)
                    }
                    )
                }
                if (K("iterator") && (r = ti(e, te)))
                    return new n(function(t) {
                        ts(function() {
                            if (!t.closed) {
                                for (var n, i = function(t, e) {
                                    var n = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
                                    if (n)
                                        return (n = n.call(t)).next.bind(n);
                                    if (Array.isArray(t) || (n = function(t, e) {
                                        if (t) {
                                            if ("string" == typeof t)
                                                return Y(t, e);
                                            var n = Object.prototype.toString.call(t).slice(8, -1);
                                            if ("Object" === n && t.constructor && (n = t.constructor.name),
                                            "Map" === n || "Set" === n)
                                                return Array.from(t);
                                            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                                                return Y(t, e)
                                        }
                                    }(t))) {
                                        n && (t = n);
                                        var r = 0;
                                        return function() {
                                            return r >= t.length ? {
                                                done: !0
                                            } : {
                                                done: !1,
                                                value: t[r++]
                                            }
                                        }
                                    }
                                    throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                                }(r.call(e)); !(n = i()).done; ) {
                                    var a = n.value;
                                    if (t.next(a),
                                    t.closed)
                                        return
                                }
                                t.complete()
                            }
                        })
                    }
                    );
                if (Array.isArray(e))
                    return new n(function(t) {
                        ts(function() {
                            if (!t.closed) {
                                for (var n = 0; n < e.length; ++n)
                                    if (t.next(e[n]),
                                    t.closed)
                                        return;
                                t.complete()
                            }
                        })
                    }
                    );
                throw TypeError(e + " is not observable")
            }
            ,
            t.of = function() {
                for (var e = arguments.length, n = Array(e), r = 0; r < e; r++)
                    n[r] = arguments[r];
                return new ("function" == typeof this ? this : t)(function(t) {
                    ts(function() {
                        if (!t.closed) {
                            for (var e = 0; e < n.length; ++e)
                                if (t.next(n[e]),
                                t.closed)
                                    return;
                            t.complete()
                        }
                    })
                }
                )
            }
            ,
            J(t, null, [{
                key: tr,
                get: function() {
                    return this
                }
            }]),
            t
        }();
        function tm(t) {
            return null !== t && "object" == typeof t
        }
        function ty(t, e) {
            var n = e
              , r = [];
            return t.definitions.forEach(function(t) {
                if ("OperationDefinition" === t.kind)
                    throw __DEV__ ? new b("Found a ".concat(t.operation, " operation").concat(t.name ? " named '".concat(t.name.value, "'") : "", ". ") + "No operations are allowed when using a fragment as a query. Only fragments are allowed.") : new b(44);
                "FragmentDefinition" === t.kind && r.push(t)
            }),
            void 0 === n && (__DEV__ ? w(1 === r.length, "Found ".concat(r.length, " fragments. `fragmentName` must be provided when there is not exactly 1 fragment.")) : w(1 === r.length, 45),
            n = r[0].name.value),
            G(G({}, t), {
                definitions: $([{
                    kind: "OperationDefinition",
                    operation: "query",
                    selectionSet: {
                        kind: "SelectionSet",
                        selections: [{
                            kind: "FragmentSpread",
                            name: {
                                kind: "Name",
                                value: n
                            }
                        }]
                    }
                }], t.definitions, !0)
            })
        }
        function tg(t) {
            void 0 === t && (t = []);
            var e = {};
            return t.forEach(function(t) {
                e[t.name.value] = t
            }),
            e
        }
        function tv(t, e) {
            switch (t.kind) {
            case "InlineFragment":
                return t;
            case "FragmentSpread":
                var n = t.name.value;
                if ("function" == typeof e)
                    return e(n);
                var r = e && e[n];
                return __DEV__ ? w(r, "No fragment named ".concat(n)) : w(r, 46),
                r || null;
            default:
                return null
            }
        }
        function t_(t) {
            return {
                __ref: String(t)
            }
        }
        function tb(t) {
            return !!(t && "object" == typeof t && "string" == typeof t.__ref)
        }
        function tw(t, e, n, r) {
            if ("IntValue" === n.kind || "FloatValue" === n.kind)
                t[e.value] = Number(n.value);
            else if ("BooleanValue" === n.kind || "StringValue" === n.kind)
                t[e.value] = n.value;
            else if ("ObjectValue" === n.kind) {
                var i = {};
                n.fields.map(function(t) {
                    return tw(i, t.name, t.value, r)
                }),
                t[e.value] = i
            } else if ("Variable" === n.kind) {
                var a = (r || {})[n.name.value];
                t[e.value] = a
            } else if ("ListValue" === n.kind)
                t[e.value] = n.values.map(function(t) {
                    var n = {};
                    return tw(n, e, t, r),
                    n[e.value]
                });
            else if ("EnumValue" === n.kind)
                t[e.value] = n.value;
            else if ("NullValue" === n.kind)
                t[e.value] = null;
            else
                throw __DEV__ ? new b('The inline argument "'.concat(e.value, '" of kind "').concat(n.kind, '"') + "is not supported. Use variables instead of inline arguments to overcome this limitation.") : new b(55)
        }
        X() && Object.defineProperty(tp, Symbol("extensions"), {
            value: {
                symbol: tn,
                hostReportError: to
            },
            configurable: !0
        });
        var tS = ["connection", "include", "skip", "client", "rest", "export"]
          , tk = Object.assign(function(t, e, n) {
            if (e && n && n.connection && n.connection.key) {
                if (!n.connection.filter || !(n.connection.filter.length > 0))
                    return n.connection.key;
                var r = n.connection.filter ? n.connection.filter : [];
                r.sort();
                var i = {};
                return r.forEach(function(t) {
                    i[t] = e[t]
                }),
                "".concat(n.connection.key, "(").concat(tx(i), ")")
            }
            var a = t;
            if (e) {
                var o = tx(e);
                a += "(".concat(o, ")")
            }
            return n && Object.keys(n).forEach(function(t) {
                -1 === tS.indexOf(t) && (n[t] && Object.keys(n[t]).length ? a += "@".concat(t, "(").concat(tx(n[t]), ")") : a += "@".concat(t))
            }),
            a
        }, {
            setStringify: function(t) {
                var e = tx;
                return tx = t,
                e
            }
        })
          , tx = function(t) {
            return JSON.stringify(t, tE)
        };
        function tE(t, e) {
            return tm(e) && !Array.isArray(e) && (e = Object.keys(e).sort().reduce(function(t, n) {
                return t[n] = e[n],
                t
            }, {})),
            e
        }
        function tT(t, e) {
            if (t.arguments && t.arguments.length) {
                var n = {};
                return t.arguments.forEach(function(t) {
                    return tw(n, t.name, t.value, e)
                }),
                n
            }
            return null
        }
        function tO(t) {
            return t.alias ? t.alias.value : t.name.value
        }
        function tC(t, e, n) {
            for (var r, i = 0, a = e.selections; i < a.length; i++) {
                var o = a[i];
                if (tA(o)) {
                    if ("__typename" === o.name.value)
                        return t[tO(o)]
                } else
                    r ? r.push(o) : r = [o]
            }
            if ("string" == typeof t.__typename)
                return t.__typename;
            if (r)
                for (var s = 0, l = r; s < l.length; s++) {
                    var o = l[s]
                      , u = tC(t, tv(o, n).selectionSet, n);
                    if ("string" == typeof u)
                        return u
                }
        }
        function tA(t) {
            return "Field" === t.kind
        }
        function tR(t) {
            __DEV__ ? w(t && "Document" === t.kind, 'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql') : w(t && "Document" === t.kind, 47);
            var e = t.definitions.filter(function(t) {
                return "FragmentDefinition" !== t.kind
            }).map(function(t) {
                if ("OperationDefinition" !== t.kind)
                    throw __DEV__ ? new b('Schema type definitions not allowed in queries. Found: "'.concat(t.kind, '"')) : new b(48);
                return t
            });
            return __DEV__ ? w(e.length <= 1, "Ambiguous GraphQL document: contains ".concat(e.length, " operations")) : w(e.length <= 1, 49),
            t
        }
        function tD(t) {
            return tR(t),
            t.definitions.filter(function(t) {
                return "OperationDefinition" === t.kind
            })[0]
        }
        function tI(t) {
            return t.definitions.filter(function(t) {
                return "OperationDefinition" === t.kind && !!t.name
            }).map(function(t) {
                return t.name.value
            })[0] || null
        }
        function tP(t) {
            return t.definitions.filter(function(t) {
                return "FragmentDefinition" === t.kind
            })
        }
        function tM(t) {
            var e = tD(t);
            return __DEV__ ? w(e && "query" === e.operation, "Must contain a query definition.") : w(e && "query" === e.operation, 50),
            e
        }
        function tN(t) {
            tR(t);
            for (var e, n = 0, r = t.definitions; n < r.length; n++) {
                var i = r[n];
                if ("OperationDefinition" === i.kind) {
                    var a = i.operation;
                    if ("query" === a || "mutation" === a || "subscription" === a)
                        return i
                }
                "FragmentDefinition" !== i.kind || e || (e = i)
            }
            if (e)
                return e;
            throw __DEV__ ? new b("Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.") : new b(54)
        }
        function tL(t) {
            var e = Object.create(null)
              , n = t && t.variableDefinitions;
            return n && n.length && n.forEach(function(t) {
                t.defaultValue && tw(e, t.variable.name, t.defaultValue)
            }),
            e
        }
        function tj(t, e) {
            return e ? e(t) : tp.of()
        }
        function tF(t) {
            return "function" == typeof t ? new tq(t) : t
        }
        function tV(t) {
            return t.request.length <= 1
        }
        var tz = function(t) {
            function e(e, n) {
                var r = t.call(this, e) || this;
                return r.link = n,
                r
            }
            return B(e, t),
            e
        }(Error)
          , tq = function() {
            function t(t) {
                t && (this.request = t)
            }
            return t.empty = function() {
                return new t(function() {
                    return tp.of()
                }
                )
            }
            ,
            t.from = function(e) {
                return 0 === e.length ? t.empty() : e.map(tF).reduce(function(t, e) {
                    return t.concat(e)
                })
            }
            ,
            t.split = function(e, n, r) {
                var i = tF(n)
                  , a = tF(r || new t(tj));
                return new t(tV(i) && tV(a) ? function(t) {
                    return e(t) ? i.request(t) || tp.of() : a.request(t) || tp.of()
                }
                : function(t, n) {
                    return e(t) ? i.request(t, n) || tp.of() : a.request(t, n) || tp.of()
                }
                )
            }
            ,
            t.execute = function(t, e) {
                var n, r, i, a;
                return t.request((i = e.context,
                (r = {
                    variables: (n = function(t) {
                        for (var e = ["query", "operationName", "variables", "extensions", "context"], n = 0, r = Object.keys(t); n < r.length; n++) {
                            var i = r[n];
                            if (0 > e.indexOf(i))
                                throw __DEV__ ? new b("illegal argument: ".concat(i)) : new b(27)
                        }
                        return t
                    }(e)).variables || {},
                    extensions: n.extensions || {},
                    operationName: n.operationName,
                    query: n.query
                }).operationName || (r.operationName = "string" != typeof r.query ? tI(r.query) || void 0 : ""),
                a = G({}, i),
                Object.defineProperty(r, "setContext", {
                    enumerable: !1,
                    value: function(t) {
                        a = "function" == typeof t ? G(G({}, a), t(a)) : G(G({}, a), t)
                    }
                }),
                Object.defineProperty(r, "getContext", {
                    enumerable: !1,
                    value: function() {
                        return G({}, a)
                    }
                }),
                r)) || tp.of()
            }
            ,
            t.concat = function(e, n) {
                var r = tF(e);
                if (tV(r))
                    return __DEV__ && w.warn(new tz("You are calling concat on a terminating link, which will have no effect",r)),
                    r;
                var i = tF(n);
                return new t(tV(i) ? function(t) {
                    return r.request(t, function(t) {
                        return i.request(t) || tp.of()
                    }) || tp.of()
                }
                : function(t, e) {
                    return r.request(t, function(t) {
                        return i.request(t, e) || tp.of()
                    }) || tp.of()
                }
                )
            }
            ,
            t.prototype.split = function(e, n, r) {
                return this.concat(t.split(e, n, r || new t(tj)))
            }
            ,
            t.prototype.concat = function(e) {
                return t.concat(this, e)
            }
            ,
            t.prototype.request = function(t, e) {
                throw __DEV__ ? new b("request is not implemented") : new b(22)
            }
            ,
            t.prototype.onError = function(t, e) {
                if (e && e.error)
                    return e.error(t),
                    !1;
                throw t
            }
            ,
            t.prototype.setOnError = function(t) {
                return this.onError = t,
                this
            }
            ,
            t
        }()
          , tU = tq.execute;
        let tB = {
            Name: [],
            Document: ["definitions"],
            OperationDefinition: ["name", "variableDefinitions", "directives", "selectionSet"],
            VariableDefinition: ["variable", "type", "defaultValue", "directives"],
            Variable: ["name"],
            SelectionSet: ["selections"],
            Field: ["alias", "name", "arguments", "directives", "selectionSet"],
            Argument: ["name", "value"],
            FragmentSpread: ["name", "directives"],
            InlineFragment: ["typeCondition", "directives", "selectionSet"],
            FragmentDefinition: ["name", "variableDefinitions", "typeCondition", "directives", "selectionSet"],
            IntValue: [],
            FloatValue: [],
            StringValue: [],
            BooleanValue: [],
            NullValue: [],
            EnumValue: [],
            ListValue: ["values"],
            ObjectValue: ["fields"],
            ObjectField: ["name", "value"],
            Directive: ["name", "arguments"],
            NamedType: ["name"],
            ListType: ["type"],
            NonNullType: ["type"],
            SchemaDefinition: ["description", "directives", "operationTypes"],
            OperationTypeDefinition: ["type"],
            ScalarTypeDefinition: ["description", "name", "directives"],
            ObjectTypeDefinition: ["description", "name", "interfaces", "directives", "fields"],
            FieldDefinition: ["description", "name", "arguments", "type", "directives"],
            InputValueDefinition: ["description", "name", "type", "defaultValue", "directives"],
            InterfaceTypeDefinition: ["description", "name", "interfaces", "directives", "fields"],
            UnionTypeDefinition: ["description", "name", "directives", "types"],
            EnumTypeDefinition: ["description", "name", "directives", "values"],
            EnumValueDefinition: ["description", "name", "directives"],
            InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
            DirectiveDefinition: ["description", "name", "arguments", "locations"],
            SchemaExtension: ["directives", "operationTypes"],
            ScalarTypeExtension: ["name", "directives"],
            ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
            InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
            UnionTypeExtension: ["name", "directives", "types"],
            EnumTypeExtension: ["name", "directives", "values"],
            InputObjectTypeExtension: ["name", "directives", "fields"]
        }
          , tG = new Set(Object.keys(tB));
        function tW(t) {
            let e = null == t ? void 0 : t.kind;
            return "string" == typeof e && tG.has(e)
        }
        (i = u || (u = {})).QUERY = "query",
        i.MUTATION = "mutation",
        i.SUBSCRIPTION = "subscription",
        (a = c || (c = {})).NAME = "Name",
        a.DOCUMENT = "Document",
        a.OPERATION_DEFINITION = "OperationDefinition",
        a.VARIABLE_DEFINITION = "VariableDefinition",
        a.SELECTION_SET = "SelectionSet",
        a.FIELD = "Field",
        a.ARGUMENT = "Argument",
        a.FRAGMENT_SPREAD = "FragmentSpread",
        a.INLINE_FRAGMENT = "InlineFragment",
        a.FRAGMENT_DEFINITION = "FragmentDefinition",
        a.VARIABLE = "Variable",
        a.INT = "IntValue",
        a.FLOAT = "FloatValue",
        a.STRING = "StringValue",
        a.BOOLEAN = "BooleanValue",
        a.NULL = "NullValue",
        a.ENUM = "EnumValue",
        a.LIST = "ListValue",
        a.OBJECT = "ObjectValue",
        a.OBJECT_FIELD = "ObjectField",
        a.DIRECTIVE = "Directive",
        a.NAMED_TYPE = "NamedType",
        a.LIST_TYPE = "ListType",
        a.NON_NULL_TYPE = "NonNullType",
        a.SCHEMA_DEFINITION = "SchemaDefinition",
        a.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition",
        a.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition",
        a.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition",
        a.FIELD_DEFINITION = "FieldDefinition",
        a.INPUT_VALUE_DEFINITION = "InputValueDefinition",
        a.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition",
        a.UNION_TYPE_DEFINITION = "UnionTypeDefinition",
        a.ENUM_TYPE_DEFINITION = "EnumTypeDefinition",
        a.ENUM_VALUE_DEFINITION = "EnumValueDefinition",
        a.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition",
        a.DIRECTIVE_DEFINITION = "DirectiveDefinition",
        a.SCHEMA_EXTENSION = "SchemaExtension",
        a.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension",
        a.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension",
        a.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension",
        a.UNION_TYPE_EXTENSION = "UnionTypeExtension",
        a.ENUM_TYPE_EXTENSION = "EnumTypeExtension",
        a.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension";
        let tH = Object.freeze({});
        function tQ(t, e, n=tB) {
            let r, i, a;
            let o = new Map;
            for (let t of Object.values(c))
                o.set(t, function(t, e) {
                    let n = t[e];
                    return "object" == typeof n ? n : "function" == typeof n ? {
                        enter: n,
                        leave: void 0
                    } : {
                        enter: t.enter,
                        leave: t.leave
                    }
                }(e, t));
            let s = Array.isArray(t)
              , l = [t]
              , u = -1
              , h = []
              , d = t
              , f = []
              , p = [];
            do {
                var m, y, g;
                let t;
                u++;
                let c = u === l.length
                  , v = c && 0 !== h.length;
                if (c) {
                    if (i = 0 === p.length ? void 0 : f[f.length - 1],
                    d = a,
                    a = p.pop(),
                    v) {
                        if (s) {
                            d = d.slice();
                            let t = 0;
                            for (let[e,n] of h) {
                                let r = e - t;
                                null === n ? (d.splice(r, 1),
                                t++) : d[r] = n
                            }
                        } else
                            for (let[t,e] of (d = Object.defineProperties({}, Object.getOwnPropertyDescriptors(d)),
                            h))
                                d[t] = e
                    }
                    u = r.index,
                    l = r.keys,
                    h = r.edits,
                    s = r.inArray,
                    r = r.prev
                } else if (a) {
                    if (null == (d = a[i = s ? u : l[u]]))
                        continue;
                    f.push(i)
                }
                if (!Array.isArray(d)) {
                    tW(d) || function(t, e) {
                        if (!t)
                            throw Error(e)
                    }(!1, `Invalid AST Node: ${function t(e, n) {
                        switch (typeof e) {
                        case "string":
                            return JSON.stringify(e);
                        case "function":
                            return e.name ? `[function ${e.name}]` : "[function]";
                        case "object":
                            return function(e, n) {
                                if (null === e)
                                    return "null";
                                if (n.includes(e))
                                    return "[Circular]";
                                let r = [...n, e];
                                if ("function" == typeof e.toJSON) {
                                    let n = e.toJSON();
                                    if (n !== e)
                                        return "string" == typeof n ? n : t(n, r)
                                } else if (Array.isArray(e))
                                    return function(e, n) {
                                        if (0 === e.length)
                                            return "[]";
                                        if (n.length > 2)
                                            return "[Array]";
                                        let r = Math.min(10, e.length)
                                          , i = e.length - r
                                          , a = [];
                                        for (let i = 0; i < r; ++i)
                                            a.push(t(e[i], n));
                                        return 1 === i ? a.push("... 1 more item") : i > 1 && a.push(`... ${i} more items`),
                                        "[" + a.join(", ") + "]"
                                    }(e, r);
                                return function(e, n) {
                                    let r = Object.entries(e);
                                    if (0 === r.length)
                                        return "{}";
                                    if (n.length > 2)
                                        return "[" + function(t) {
                                            let e = Object.prototype.toString.call(t).replace(/^\[object /, "").replace(/]$/, "");
                                            if ("Object" === e && "function" == typeof t.constructor) {
                                                let e = t.constructor.name;
                                                if ("string" == typeof e && "" !== e)
                                                    return e
                                            }
                                            return e
                                        }(e) + "]";
                                    let i = r.map( ([e,r]) => e + ": " + t(r, n));
                                    return "{ " + i.join(", ") + " }"
                                }(e, r)
                            }(e, n);
                        default:
                            return String(e)
                        }
                    }(d, [])}.`);
                    let n = c ? null === (m = o.get(d.kind)) || void 0 === m ? void 0 : m.leave : null === (y = o.get(d.kind)) || void 0 === y ? void 0 : y.enter;
                    if ((t = null == n ? void 0 : n.call(e, d, i, a, f, p)) === tH)
                        break;
                    if (!1 === t) {
                        if (!c) {
                            f.pop();
                            continue
                        }
                    } else if (void 0 !== t && (h.push([i, t]),
                    !c)) {
                        if (tW(t))
                            d = t;
                        else {
                            f.pop();
                            continue
                        }
                    }
                }
                void 0 === t && v && h.push([i, d]),
                c ? f.pop() : (r = {
                    inArray: s,
                    index: u,
                    keys: l,
                    edits: h,
                    prev: r
                },
                l = (s = Array.isArray(d)) ? d : null !== (g = n[d.kind]) && void 0 !== g ? g : [],
                u = -1,
                h = [],
                a && p.push(a),
                a = d)
            } while (void 0 !== r);
            return 0 !== h.length ? h[h.length - 1][1] : t
        }
        function t$(t, e) {
            var n, r = t.directives;
            return !r || !r.length || (n = [],
            r && r.length && r.forEach(function(t) {
                var e;
                if ("skip" === (e = t.name.value) || "include" === e) {
                    var r = t.arguments
                      , i = t.name.value;
                    __DEV__ ? w(r && 1 === r.length, "Incorrect number of arguments for the @".concat(i, " directive.")) : w(r && 1 === r.length, 41);
                    var a = r[0];
                    __DEV__ ? w(a.name && "if" === a.name.value, "Invalid argument for the @".concat(i, " directive.")) : w(a.name && "if" === a.name.value, 42);
                    var o = a.value;
                    __DEV__ ? w(o && ("Variable" === o.kind || "BooleanValue" === o.kind), "Argument for the @".concat(i, " directive must be a variable or a boolean value.")) : w(o && ("Variable" === o.kind || "BooleanValue" === o.kind), 43),
                    n.push({
                        directive: t,
                        ifArgument: a
                    })
                }
            }),
            n).every(function(t) {
                var n = t.directive
                  , r = t.ifArgument
                  , i = !1;
                return "Variable" === r.value.kind ? (i = e && e[r.value.name.value],
                __DEV__ ? w(void 0 !== i, "Invalid variable referenced in @".concat(n.name.value, " directive.")) : w(void 0 !== i, 40)) : i = r.value.value,
                "skip" === n.name.value ? !i : i
            })
        }
        function tY(t, e, n) {
            var r = new Set(t)
              , i = r.size;
            return tQ(e, {
                Directive: function(t) {
                    if (r.delete(t.name.value) && (!n || !r.size))
                        return tH
                }
            }),
            n ? !r.size : r.size < i
        }
        var tZ = function(t, e) {
            var n;
            try {
                n = JSON.stringify(t)
            } catch (t) {
                var r = __DEV__ ? new b("Network request failed. ".concat(e, " is not serializable: ").concat(t.message)) : new b(24);
                throw r.parseError = t,
                r
            }
            return n
        };
        function tJ(t) {
            var e = {
                next: function() {
                    return t.read()
                }
            };
            return j && (e[Symbol.asyncIterator] = function() {
                return this
            }
            ),
            e
        }
        var tX = function(t, e, n) {
            var r = Error(n);
            throw r.name = "ServerError",
            r.response = t,
            r.statusCode = t.status,
            r.result = e,
            r
        }
          , tK = Symbol()
          , t0 = function(t) {
            var e = $($($([], t.graphQLErrors, !0), t.clientErrors, !0), t.protocolErrors, !0);
            return t.networkError && e.push(t.networkError),
            e.map(function(t) {
                return tm(t) && t.message || "Error message not found."
            }).join("\n")
        }
          , t1 = function(t) {
            function e(n) {
                var r = n.graphQLErrors
                  , i = n.protocolErrors
                  , a = n.clientErrors
                  , o = n.networkError
                  , s = n.errorMessage
                  , l = n.extraInfo
                  , u = t.call(this, s) || this;
                return u.name = "ApolloError",
                u.graphQLErrors = r || [],
                u.protocolErrors = i || [],
                u.clientErrors = a || [],
                u.networkError = o || null,
                u.message = s || t0(u),
                u.extraInfo = l,
                u.__proto__ = e.prototype,
                u
            }
            return B(e, t),
            e
        }(Error)
          , t2 = Array.isArray;
        function t5(t) {
            return Array.isArray(t) && t.length > 0
        }
        var t3 = Object.prototype.hasOwnProperty;
        function t6() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            return t4(t)
        }
        function t4(t) {
            var e = t[0] || {}
              , n = t.length;
            if (n > 1)
                for (var r = new t9, i = 1; i < n; ++i)
                    e = r.merge(e, t[i]);
            return e
        }
        var t8 = function(t, e, n) {
            return this.merge(t[n], e[n])
        }
          , t9 = function() {
            function t(t) {
                void 0 === t && (t = t8),
                this.reconciler = t,
                this.isObject = tm,
                this.pastCopies = new Set
            }
            return t.prototype.merge = function(t, e) {
                for (var n = this, r = [], i = 2; i < arguments.length; i++)
                    r[i - 2] = arguments[i];
                return tm(e) && tm(t) ? (Object.keys(e).forEach(function(i) {
                    if (t3.call(t, i)) {
                        var a = t[i];
                        if (e[i] !== a) {
                            var o = n.reconciler.apply(n, $([t, e, i], r, !1));
                            o !== a && ((t = n.shallowCopyForMerge(t))[i] = o)
                        }
                    } else
                        (t = n.shallowCopyForMerge(t))[i] = e[i]
                }),
                t) : e
            }
            ,
            t.prototype.shallowCopyForMerge = function(t) {
                return tm(t) && !this.pastCopies.has(t) && (t = Array.isArray(t) ? t.slice(0) : G({
                    __proto__: Object.getPrototypeOf(t)
                }, t),
                this.pastCopies.add(t)),
                t
            }
            ,
            t
        }();
        function t7(t) {
            return "incremental"in t
        }
        function et(t, e) {
            var n = t
              , r = new t9;
            return t7(e) && t5(e.incremental) && e.incremental.forEach(function(t) {
                for (var e = t.data, i = t.path, a = i.length - 1; a >= 0; --a) {
                    var o = i[a]
                      , s = isNaN(+o) ? {} : [];
                    s[o] = e,
                    e = s
                }
                n = r.merge(n, e)
            }),
            n
        }
        var ee = Object.prototype.hasOwnProperty;
        function en(t, e) {
            t.status >= 300 && tX(t, function() {
                try {
                    return JSON.parse(e)
                } catch (t) {
                    return e
                }
            }(), "Response not successful: Received status code ".concat(t.status));
            try {
                return JSON.parse(e)
            } catch (n) {
                throw n.name = "ServerParseError",
                n.response = t,
                n.statusCode = t.status,
                n.bodyText = e,
                n
            }
        }
        function er(t, e) {
            var n, r;
            "AbortError" !== t.name && (t.result && t.result.errors && t.result.data && (null === (n = e.next) || void 0 === n || n.call(e, t.result)),
            null === (r = e.error) || void 0 === r || r.call(e, t))
        }
        var ei = function(t) {
            if (!t && "undefined" == typeof fetch)
                throw __DEV__ ? new b("\n\"fetch\" has not been found globally and no fetcher has been configured. To fix this, install a fetch package (like https://www.npmjs.com/package/cross-fetch), instantiate the fetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    ") : new b(23)
        };
        function ea(t) {
            return 9 === t || 32 === t
        }
        let eo = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
        function es(t) {
            return el[t.charCodeAt(0)]
        }
        let el = ["\\u0000", "\\u0001", "\\u0002", "\\u0003", "\\u0004", "\\u0005", "\\u0006", "\\u0007", "\\b", "\\t", "\\n", "\\u000B", "\\f", "\\r", "\\u000E", "\\u000F", "\\u0010", "\\u0011", "\\u0012", "\\u0013", "\\u0014", "\\u0015", "\\u0016", "\\u0017", "\\u0018", "\\u0019", "\\u001A", "\\u001B", "\\u001C", "\\u001D", "\\u001E", "\\u001F", "", "", '\\"', "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\\\", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "\\u007F", "\\u0080", "\\u0081", "\\u0082", "\\u0083", "\\u0084", "\\u0085", "\\u0086", "\\u0087", "\\u0088", "\\u0089", "\\u008A", "\\u008B", "\\u008C", "\\u008D", "\\u008E", "\\u008F", "\\u0090", "\\u0091", "\\u0092", "\\u0093", "\\u0094", "\\u0095", "\\u0096", "\\u0097", "\\u0098", "\\u0099", "\\u009A", "\\u009B", "\\u009C", "\\u009D", "\\u009E", "\\u009F"];
        function eu(t) {
            return tQ(t, ec)
        }
        let ec = {
            Name: {
                leave: t => t.value
            },
            Variable: {
                leave: t => "$" + t.name
            },
            Document: {
                leave: t => eh(t.definitions, "\n\n")
            },
            OperationDefinition: {
                leave(t) {
                    let e = ef("(", eh(t.variableDefinitions, ", "), ")")
                      , n = eh([t.operation, eh([t.name, e]), eh(t.directives, " ")], " ");
                    return ("query" === n ? "" : n + " ") + t.selectionSet
                }
            },
            VariableDefinition: {
                leave: ({variable: t, type: e, defaultValue: n, directives: r}) => t + ": " + e + ef(" = ", n) + ef(" ", eh(r, " "))
            },
            SelectionSet: {
                leave: ({selections: t}) => ed(t)
            },
            Field: {
                leave({alias: t, name: e, arguments: n, directives: r, selectionSet: i}) {
                    let a = ef("", t, ": ") + e
                      , o = a + ef("(", eh(n, ", "), ")");
                    return o.length > 80 && (o = a + ef("(\n", ep(eh(n, "\n")), "\n)")),
                    eh([o, eh(r, " "), i], " ")
                }
            },
            Argument: {
                leave: ({name: t, value: e}) => t + ": " + e
            },
            FragmentSpread: {
                leave: ({name: t, directives: e}) => "..." + t + ef(" ", eh(e, " "))
            },
            InlineFragment: {
                leave: ({typeCondition: t, directives: e, selectionSet: n}) => eh(["...", ef("on ", t), eh(e, " "), n], " ")
            },
            FragmentDefinition: {
                leave: ({name: t, typeCondition: e, variableDefinitions: n, directives: r, selectionSet: i}) => `fragment ${t}${ef("(", eh(n, ", "), ")")} on ${e} ${ef("", eh(r, " "), " ")}` + i
            },
            IntValue: {
                leave: ({value: t}) => t
            },
            FloatValue: {
                leave: ({value: t}) => t
            },
            StringValue: {
                leave: ({value: t, block: e}) => e ? function(t, e) {
                    let n = t.replace(/"""/g, '\\"""')
                      , r = n.split(/\r\n|[\n\r]/g)
                      , i = 1 === r.length
                      , a = r.length > 1 && r.slice(1).every(t => 0 === t.length || ea(t.charCodeAt(0)))
                      , o = n.endsWith('\\"""')
                      , s = t.endsWith('"') && !o
                      , l = t.endsWith("\\")
                      , u = s || l
                      , c = !(null != e && e.minimize) && (!i || t.length > 70 || u || a || o)
                      , h = ""
                      , d = i && ea(t.charCodeAt(0));
                    return (c && !d || a) && (h += "\n"),
                    h += n,
                    (c || u) && (h += "\n"),
                    '"""' + h + '"""'
                }(t) : `"${t.replace(eo, es)}"`
            },
            BooleanValue: {
                leave: ({value: t}) => t ? "true" : "false"
            },
            NullValue: {
                leave: () => "null"
            },
            EnumValue: {
                leave: ({value: t}) => t
            },
            ListValue: {
                leave: ({values: t}) => "[" + eh(t, ", ") + "]"
            },
            ObjectValue: {
                leave: ({fields: t}) => "{" + eh(t, ", ") + "}"
            },
            ObjectField: {
                leave: ({name: t, value: e}) => t + ": " + e
            },
            Directive: {
                leave: ({name: t, arguments: e}) => "@" + t + ef("(", eh(e, ", "), ")")
            },
            NamedType: {
                leave: ({name: t}) => t
            },
            ListType: {
                leave: ({type: t}) => "[" + t + "]"
            },
            NonNullType: {
                leave: ({type: t}) => t + "!"
            },
            SchemaDefinition: {
                leave: ({description: t, directives: e, operationTypes: n}) => ef("", t, "\n") + eh(["schema", eh(e, " "), ed(n)], " ")
            },
            OperationTypeDefinition: {
                leave: ({operation: t, type: e}) => t + ": " + e
            },
            ScalarTypeDefinition: {
                leave: ({description: t, name: e, directives: n}) => ef("", t, "\n") + eh(["scalar", e, eh(n, " ")], " ")
            },
            ObjectTypeDefinition: {
                leave: ({description: t, name: e, interfaces: n, directives: r, fields: i}) => ef("", t, "\n") + eh(["type", e, ef("implements ", eh(n, " & ")), eh(r, " "), ed(i)], " ")
            },
            FieldDefinition: {
                leave: ({description: t, name: e, arguments: n, type: r, directives: i}) => ef("", t, "\n") + e + (em(n) ? ef("(\n", ep(eh(n, "\n")), "\n)") : ef("(", eh(n, ", "), ")")) + ": " + r + ef(" ", eh(i, " "))
            },
            InputValueDefinition: {
                leave: ({description: t, name: e, type: n, defaultValue: r, directives: i}) => ef("", t, "\n") + eh([e + ": " + n, ef("= ", r), eh(i, " ")], " ")
            },
            InterfaceTypeDefinition: {
                leave: ({description: t, name: e, interfaces: n, directives: r, fields: i}) => ef("", t, "\n") + eh(["interface", e, ef("implements ", eh(n, " & ")), eh(r, " "), ed(i)], " ")
            },
            UnionTypeDefinition: {
                leave: ({description: t, name: e, directives: n, types: r}) => ef("", t, "\n") + eh(["union", e, eh(n, " "), ef("= ", eh(r, " | "))], " ")
            },
            EnumTypeDefinition: {
                leave: ({description: t, name: e, directives: n, values: r}) => ef("", t, "\n") + eh(["enum", e, eh(n, " "), ed(r)], " ")
            },
            EnumValueDefinition: {
                leave: ({description: t, name: e, directives: n}) => ef("", t, "\n") + eh([e, eh(n, " ")], " ")
            },
            InputObjectTypeDefinition: {
                leave: ({description: t, name: e, directives: n, fields: r}) => ef("", t, "\n") + eh(["input", e, eh(n, " "), ed(r)], " ")
            },
            DirectiveDefinition: {
                leave: ({description: t, name: e, arguments: n, repeatable: r, locations: i}) => ef("", t, "\n") + "directive @" + e + (em(n) ? ef("(\n", ep(eh(n, "\n")), "\n)") : ef("(", eh(n, ", "), ")")) + (r ? " repeatable" : "") + " on " + eh(i, " | ")
            },
            SchemaExtension: {
                leave: ({directives: t, operationTypes: e}) => eh(["extend schema", eh(t, " "), ed(e)], " ")
            },
            ScalarTypeExtension: {
                leave: ({name: t, directives: e}) => eh(["extend scalar", t, eh(e, " ")], " ")
            },
            ObjectTypeExtension: {
                leave: ({name: t, interfaces: e, directives: n, fields: r}) => eh(["extend type", t, ef("implements ", eh(e, " & ")), eh(n, " "), ed(r)], " ")
            },
            InterfaceTypeExtension: {
                leave: ({name: t, interfaces: e, directives: n, fields: r}) => eh(["extend interface", t, ef("implements ", eh(e, " & ")), eh(n, " "), ed(r)], " ")
            },
            UnionTypeExtension: {
                leave: ({name: t, directives: e, types: n}) => eh(["extend union", t, eh(e, " "), ef("= ", eh(n, " | "))], " ")
            },
            EnumTypeExtension: {
                leave: ({name: t, directives: e, values: n}) => eh(["extend enum", t, eh(e, " "), ed(n)], " ")
            },
            InputObjectTypeExtension: {
                leave: ({name: t, directives: e, fields: n}) => eh(["extend input", t, eh(e, " "), ed(n)], " ")
            }
        };
        function eh(t, e="") {
            var n;
            return null !== (n = null == t ? void 0 : t.filter(t => t).join(e)) && void 0 !== n ? n : ""
        }
        function ed(t) {
            return ef("{\n", ep(eh(t, "\n")), "\n}")
        }
        function ef(t, e, n="") {
            return null != e && "" !== e ? t + e + n : ""
        }
        function ep(t) {
            return ef("  ", t.replace(/\n/g, "\n  "))
        }
        function em(t) {
            var e;
            return null !== (e = null == t ? void 0 : t.some(t => t.includes("\n"))) && void 0 !== e && e
        }
        var ey = {
            http: {
                includeQuery: !0,
                includeExtensions: !1,
                preserveHeaderCase: !1
            },
            headers: {
                accept: "*/*",
                "content-type": "application/json"
            },
            options: {
                method: "POST"
            }
        }
          , eg = function(t, e) {
            return e(t)
        }
          , ev = function() {
            if ("undefined" == typeof AbortController)
                return {
                    controller: !1,
                    signal: !1
                };
            var t = new AbortController
              , e = t.signal;
            return {
                controller: t,
                signal: e
            }
        };
        function e_(t) {
            return new tp(function(e) {
                e.error(t)
            }
            )
        }
        var eb = E(function() {
            return fetch
        })
          , ew = function(t) {
            void 0 === t && (t = {});
            var e = t.uri
              , n = void 0 === e ? "/graphql" : e
              , r = t.fetch
              , i = t.print
              , a = void 0 === i ? eg : i
              , o = t.includeExtensions
              , s = t.preserveHeaderCase
              , l = t.useGETForQueries
              , u = t.includeUnusedVariables
              , c = void 0 !== u && u
              , h = W(t, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "useGETForQueries", "includeUnusedVariables"]);
            __DEV__ && ei(r || eb);
            var d = {
                http: {
                    includeExtensions: o,
                    preserveHeaderCase: s
                },
                options: h.fetchOptions,
                credentials: h.credentials,
                headers: h.headers
            };
            return new tq(function(t) {
                var e, i, o, s, u = (e = t,
                i = n,
                e.getContext().uri || ("function" == typeof i ? i(e) : i || "/graphql")), h = t.getContext(), f = {};
                if (h.clientAwareness) {
                    var p = h.clientAwareness
                      , m = p.name
                      , y = p.version;
                    m && (f["apollographql-client-name"] = m),
                    y && (f["apollographql-client-version"] = y)
                }
                var g = G(G({}, f), h.headers)
                  , v = function(t, e) {
                    for (var n = [], r = 2; r < arguments.length; r++)
                        n[r - 2] = arguments[r];
                    var i = {}
                      , a = {};
                    n.forEach(function(t) {
                        i = G(G(G({}, i), t.options), {
                            headers: G(G({}, i.headers), t.headers)
                        }),
                        t.credentials && (i.credentials = t.credentials),
                        a = G(G({}, a), t.http)
                    }),
                    i.headers && (i.headers = function(t, e) {
                        if (!e) {
                            var n = Object.create(null);
                            return Object.keys(Object(t)).forEach(function(e) {
                                n[e.toLowerCase()] = t[e]
                            }),
                            n
                        }
                        var r = Object.create(null);
                        Object.keys(Object(t)).forEach(function(e) {
                            r[e.toLowerCase()] = {
                                originalName: e,
                                value: t[e]
                            }
                        });
                        var i = Object.create(null);
                        return Object.keys(r).forEach(function(t) {
                            i[r[t].originalName] = r[t].value
                        }),
                        i
                    }(i.headers, a.preserveHeaderCase));
                    var o = t.operationName
                      , s = t.extensions
                      , l = t.variables
                      , u = t.query
                      , c = {
                        operationName: o,
                        variables: l
                    };
                    return a.includeExtensions && (c.extensions = s),
                    a.includeQuery && (c.query = e(u, eu)),
                    {
                        options: i,
                        body: c
                    }
                }(t, a, ey, d, {
                    http: h.http,
                    options: h.fetchOptions,
                    credentials: h.credentials,
                    headers: g
                })
                  , _ = v.options
                  , b = v.body;
                if (b.variables && !c) {
                    var S = new Set(Object.keys(b.variables));
                    tQ(t.query, {
                        Variable: function(t, e, n) {
                            n && "VariableDefinition" !== n.kind && S.delete(t.name.value)
                        }
                    }),
                    S.size && (b.variables = G({}, b.variables),
                    S.forEach(function(t) {
                        delete b.variables[t]
                    }))
                }
                if (!_.signal) {
                    var k = ev()
                      , x = k.controller
                      , T = k.signal;
                    (s = x) && (_.signal = T)
                }
                var O = "OperationDefinition" === (o = tN(t.query)).kind && "subscription" === o.operation
                  , C = tY(["defer"], t.query);
                if (l && !t.query.definitions.some(function(t) {
                    return "OperationDefinition" === t.kind && "mutation" === t.operation
                }) && (_.method = "GET"),
                C || O) {
                    _.headers = _.headers || {};
                    var A = "multipart/mixed;";
                    O && C && __DEV__ && w.warn("Multipart-subscriptions do not support @defer"),
                    O ? A += "boundary=graphql;subscriptionSpec=1.0,application/json" : C && (A += "deferSpec=20220824,application/json"),
                    _.headers.accept = A
                }
                if ("GET" === _.method) {
                    var R = function(t, e) {
                        var n = []
                          , r = function(t, e) {
                            n.push("".concat(t, "=").concat(encodeURIComponent(e)))
                        };
                        if ("query"in e && r("query", e.query),
                        e.operationName && r("operationName", e.operationName),
                        e.variables) {
                            var i = void 0;
                            try {
                                i = tZ(e.variables, "Variables map")
                            } catch (t) {
                                return {
                                    parseError: t
                                }
                            }
                            r("variables", i)
                        }
                        if (e.extensions) {
                            var a = void 0;
                            try {
                                a = tZ(e.extensions, "Extensions map")
                            } catch (t) {
                                return {
                                    parseError: t
                                }
                            }
                            r("extensions", a)
                        }
                        var o = ""
                          , s = t
                          , l = t.indexOf("#");
                        -1 !== l && (o = t.substr(l),
                        s = t.substr(0, l));
                        var u = -1 === s.indexOf("?") ? "?" : "&";
                        return {
                            newURI: s + u + n.join("&") + o
                        }
                    }(u, b)
                      , D = R.newURI
                      , I = R.parseError;
                    if (I)
                        return e_(I);
                    u = D
                } else
                    try {
                        _.body = tZ(b, "Payload")
                    } catch (t) {
                        return e_(t)
                    }
                return new tp(function(e) {
                    return (r || E(function() {
                        return fetch
                    }) || eb)(u, _).then(function(n) {
                        t.setContext({
                            response: n
                        });
                        var r, i = null === (r = n.headers) || void 0 === r ? void 0 : r.get("content-type");
                        return null !== i && /^multipart\/mixed/i.test(i) ? function(t, e) {
                            var n, r, i, a, o;
                            return H(this, void 0, void 0, function() {
                                var s, l, u, c, h, d, f, p, m, y, g, v, _, b, w, S, k, x, E, T, O, C;
                                return Q(this, function(A) {
                                    switch (A.label) {
                                    case 0:
                                        if (void 0 === TextDecoder)
                                            throw Error("TextDecoder must be defined in the environment: please import a polyfill.");
                                        s = new TextDecoder("utf-8"),
                                        l = null === (n = t.headers) || void 0 === n ? void 0 : n.get("content-type"),
                                        u = "boundary=",
                                        c = (null == l ? void 0 : l.includes(u)) ? null == l ? void 0 : l.substring((null == l ? void 0 : l.indexOf(u)) + u.length).replace(/['"]/g, "").replace(/\;(.*)/gm, "").trim() : "-",
                                        h = "\r\n--".concat(c),
                                        d = "",
                                        f = function(t) {
                                            var e, n, r, i, a, o, s = t;
                                            if (t.body && (s = t.body),
                                            e = s,
                                            j && e[Symbol.asyncIterator])
                                                return r = s[Symbol.asyncIterator](),
                                                (n = {
                                                    next: function() {
                                                        return r.next()
                                                    }
                                                })[Symbol.asyncIterator] = function() {
                                                    return this
                                                }
                                                ,
                                                n;
                                            if (s.getReader)
                                                return tJ(s.getReader());
                                            if (s.stream)
                                                return tJ(s.stream().getReader());
                                            if (s.arrayBuffer)
                                                return i = s.arrayBuffer(),
                                                a = !1,
                                                o = {
                                                    next: function() {
                                                        return a ? Promise.resolve({
                                                            value: void 0,
                                                            done: !0
                                                        }) : (a = !0,
                                                        new Promise(function(t, e) {
                                                            i.then(function(e) {
                                                                t({
                                                                    value: e,
                                                                    done: !1
                                                                })
                                                            }).catch(e)
                                                        }
                                                        ))
                                                    }
                                                },
                                                j && (o[Symbol.asyncIterator] = function() {
                                                    return this
                                                }
                                                ),
                                                o;
                                            if (s.pipe)
                                                return function(t) {
                                                    var e = null
                                                      , n = null
                                                      , r = !1
                                                      , i = []
                                                      , a = [];
                                                    function o(t) {
                                                        if (!n) {
                                                            if (a.length) {
                                                                var e = a.shift();
                                                                if (Array.isArray(e) && e[0])
                                                                    return e[0]({
                                                                        value: t,
                                                                        done: !1
                                                                    })
                                                            }
                                                            i.push(t)
                                                        }
                                                    }
                                                    function s(t) {
                                                        n = t,
                                                        a.slice().forEach(function(e) {
                                                            e[1](t)
                                                        }),
                                                        e && e()
                                                    }
                                                    function l() {
                                                        r = !0,
                                                        a.slice().forEach(function(t) {
                                                            t[0]({
                                                                value: void 0,
                                                                done: !0
                                                            })
                                                        }),
                                                        e && e()
                                                    }
                                                    e = function() {
                                                        e = null,
                                                        t.removeListener("data", o),
                                                        t.removeListener("error", s),
                                                        t.removeListener("end", l),
                                                        t.removeListener("finish", l),
                                                        t.removeListener("close", l)
                                                    }
                                                    ,
                                                    t.on("data", o),
                                                    t.on("error", s),
                                                    t.on("end", l),
                                                    t.on("finish", l),
                                                    t.on("close", l);
                                                    var u = {
                                                        next: function() {
                                                            return new Promise(function(t, e) {
                                                                return n ? e(n) : i.length ? t({
                                                                    value: i.shift(),
                                                                    done: !1
                                                                }) : r ? t({
                                                                    value: void 0,
                                                                    done: !0
                                                                }) : void a.push([t, e])
                                                            }
                                                            )
                                                        }
                                                    };
                                                    return j && (u[Symbol.asyncIterator] = function() {
                                                        return this
                                                    }
                                                    ),
                                                    u
                                                }(s);
                                            throw Error("Unknown body type for responseIterator. Please pass a streamable response.")
                                        }(t),
                                        p = !0,
                                        A.label = 1;
                                    case 1:
                                        if (!p)
                                            return [3, 3];
                                        return [4, f.next()];
                                    case 2:
                                        for (y = (m = A.sent()).value,
                                        g = m.done,
                                        v = "string" == typeof y ? y : s.decode(y),
                                        _ = d.length - h.length + 1,
                                        p = !g,
                                        d += v,
                                        b = d.indexOf(h, _); b > -1; ) {
                                            if (w = void 0,
                                            w = (O = [d.slice(0, b), d.slice(b + h.length)])[0],
                                            d = O[1],
                                            S = w.indexOf("\r\n\r\n"),
                                            (k = function(t) {
                                                var e = {};
                                                return t.split("\n").forEach(function(t) {
                                                    var n = t.indexOf(":");
                                                    if (n > -1) {
                                                        var r = t.slice(0, n).trim().toLowerCase()
                                                          , i = t.slice(n + 1).trim();
                                                        e[r] = i
                                                    }
                                                }),
                                                e
                                            }(w.slice(0, S))["content-type"]) && -1 === k.toLowerCase().indexOf("application/json"))
                                                throw Error("Unsupported patch content type: application/json is required.");
                                            if (x = w.slice(S))
                                                try {
                                                    (E = en(t, x),
                                                    Object.keys(E).length > 1 || "data"in E || "incremental"in E || "errors"in E || "payload"in E) ? tm(E) && "payload"in E ? (T = {},
                                                    "payload"in E && (T = G({}, E.payload)),
                                                    "errors"in E && (T = G(G({}, T), {
                                                        extensions: G(G({}, "extensions"in T ? T.extensions : null), ((C = {})[tK] = E.errors,
                                                        C))
                                                    })),
                                                    null === (r = e.next) || void 0 === r || r.call(e, T)) : null === (i = e.next) || void 0 === i || i.call(e, E) : 1 === Object.keys(E).length && "hasNext"in E && !E.hasNext && (null === (a = e.complete) || void 0 === a || a.call(e))
                                                } catch (t) {
                                                    er(t, e)
                                                }
                                            b = d.indexOf(h)
                                        }
                                        return [3, 1];
                                    case 3:
                                        return null === (o = e.complete) || void 0 === o || o.call(e),
                                        [2]
                                    }
                                })
                            })
                        }(n, e) : function(t, e, n) {
                            var r;
                            (r = t).text().then(function(t) {
                                return en(r, t)
                            }).then(function(t) {
                                return r.status >= 300 && tX(r, t, "Response not successful: Received status code ".concat(r.status)),
                                Array.isArray(t) || ee.call(t, "data") || ee.call(t, "errors") || tX(r, t, "Server response was missing for query '".concat(Array.isArray(e) ? e.map(function(t) {
                                    return t.operationName
                                }) : e.operationName, "'.")),
                                t
                            }).then(function(t) {
                                var e, r;
                                null === (e = n.next) || void 0 === e || e.call(n, t),
                                null === (r = n.complete) || void 0 === r || r.call(n)
                            }).catch(function(t) {
                                return er(t, n)
                            })
                        }(n, t, e)
                    }).catch(function(t) {
                        return er(t, e)
                    }),
                    function() {
                        s && s.abort()
                    }
                }
                )
            }
            )
        }
          , eS = function(t) {
            function e(e) {
                void 0 === e && (e = {});
                var n = t.call(this, ew(e).request) || this;
                return n.options = e,
                n
            }
            return B(e, t),
            e
        }(tq);
        let {toString: ek, hasOwnProperty: ex} = Object.prototype
          , eE = Function.prototype.toString
          , eT = new Map;
        function eO(t, e) {
            try {
                return function t(e, n) {
                    if (e === n)
                        return !0;
                    let r = ek.call(e)
                      , i = ek.call(n);
                    if (r !== i)
                        return !1;
                    switch (r) {
                    case "[object Array]":
                        if (e.length !== n.length)
                            break;
                    case "[object Object]":
                        {
                            if (eD(e, n))
                                return !0;
                            let r = eC(e)
                              , i = eC(n)
                              , a = r.length;
                            if (a !== i.length)
                                return !1;
                            for (let t = 0; t < a; ++t)
                                if (!ex.call(n, r[t]))
                                    return !1;
                            for (let i = 0; i < a; ++i) {
                                let a = r[i];
                                if (!t(e[a], n[a]))
                                    return !1
                            }
                            return !0
                        }
                    case "[object Error]":
                        return e.name === n.name && e.message === n.message;
                    case "[object Number]":
                        if (e != e)
                            return n != n;
                    case "[object Boolean]":
                    case "[object Date]":
                        return +e == +n;
                    case "[object RegExp]":
                    case "[object String]":
                        return e == `${n}`;
                    case "[object Map]":
                    case "[object Set]":
                        {
                            if (e.size !== n.size)
                                return !1;
                            if (eD(e, n))
                                return !0;
                            let i = e.entries()
                              , a = "[object Map]" === r;
                            for (; ; ) {
                                let e = i.next();
                                if (e.done)
                                    break;
                                let[r,o] = e.value;
                                if (!n.has(r) || a && !t(o, n.get(r)))
                                    return !1
                            }
                            return !0
                        }
                    case "[object Uint16Array]":
                    case "[object Uint8Array]":
                    case "[object Uint32Array]":
                    case "[object Int32Array]":
                    case "[object Int8Array]":
                    case "[object Int16Array]":
                    case "[object ArrayBuffer]":
                        e = new Uint8Array(e),
                        n = new Uint8Array(n);
                    case "[object DataView]":
                        {
                            let t = e.byteLength;
                            if (t === n.byteLength)
                                for (; t-- && e[t] === n[t]; )
                                    ;
                            return -1 === t
                        }
                    case "[object AsyncFunction]":
                    case "[object GeneratorFunction]":
                    case "[object AsyncGeneratorFunction]":
                    case "[object Function]":
                        {
                            let t = eE.call(e);
                            if (t !== eE.call(n))
                                return !1;
                            return !function(t, e) {
                                let n = t.length - e.length;
                                return n >= 0 && t.indexOf(e, n) === n
                            }(t, eR)
                        }
                    }
                    return !1
                }(t, e)
            } finally {
                eT.clear()
            }
        }
        function eC(t) {
            return Object.keys(t).filter(eA, t)
        }
        function eA(t) {
            return void 0 !== this[t]
        }
        let eR = "{ [native code] }";
        function eD(t, e) {
            let n = eT.get(t);
            if (n) {
                if (n.has(e))
                    return !0
            } else
                eT.set(t, n = new Set);
            return n.add(e),
            !1
        }
        let eI = () => Object.create(null)
          , {forEach: eP, slice: eM} = Array.prototype
          , {hasOwnProperty: eN} = Object.prototype;
        class eL {
            constructor(t=!0, e=eI) {
                this.weakness = t,
                this.makeData = e
            }
            lookup(...t) {
                return this.lookupArray(t)
            }
            lookupArray(t) {
                let e = this;
                return eP.call(t, t => e = e.getChildTrie(t)),
                eN.call(e, "data") ? e.data : e.data = this.makeData(eM.call(t))
            }
            peek(...t) {
                return this.peekArray(t)
            }
            peekArray(t) {
                let e = this;
                for (let n = 0, r = t.length; e && n < r; ++n) {
                    let r = this.weakness && ej(t[n]) ? e.weak : e.strong;
                    e = r && r.get(t[n])
                }
                return e && e.data
            }
            getChildTrie(t) {
                let e = this.weakness && ej(t) ? this.weak || (this.weak = new WeakMap) : this.strong || (this.strong = new Map)
                  , n = e.get(t);
                return n || e.set(t, n = new eL(this.weakness,this.makeData)),
                n
            }
        }
        function ej(t) {
            switch (typeof t) {
            case "object":
                if (null === t)
                    break;
            case "function":
                return !0
            }
            return !1
        }
        var eF = function() {
            function t() {
                this.known = new (N ? WeakSet : Set),
                this.pool = new eL(M),
                this.passes = new WeakMap,
                this.keysByJSON = new Map,
                this.empty = this.admit({})
            }
            return t.prototype.isKnown = function(t) {
                return tm(t) && this.known.has(t)
            }
            ,
            t.prototype.pass = function(t) {
                if (tm(t)) {
                    var e = tm(t) ? t2(t) ? t.slice(0) : G({
                        __proto__: Object.getPrototypeOf(t)
                    }, t) : t;
                    return this.passes.set(e, t),
                    e
                }
                return t
            }
            ,
            t.prototype.admit = function(t) {
                var e = this;
                if (tm(t)) {
                    var n = this.passes.get(t);
                    if (n)
                        return n;
                    switch (Object.getPrototypeOf(t)) {
                    case Array.prototype:
                        if (this.known.has(t))
                            break;
                        var r = t.map(this.admit, this)
                          , i = this.pool.lookupArray(r);
                        return !i.array && (this.known.add(i.array = r),
                        __DEV__ && Object.freeze(r)),
                        i.array;
                    case null:
                    case Object.prototype:
                        if (this.known.has(t))
                            break;
                        var a = Object.getPrototypeOf(t)
                          , o = [a]
                          , s = this.sortedKeys(t);
                        o.push(s.json);
                        var l = o.length;
                        s.sorted.forEach(function(n) {
                            o.push(e.admit(t[n]))
                        });
                        var i = this.pool.lookupArray(o);
                        if (!i.object) {
                            var u = i.object = Object.create(a);
                            this.known.add(u),
                            s.sorted.forEach(function(t, e) {
                                u[t] = o[l + e]
                            }),
                            __DEV__ && Object.freeze(u)
                        }
                        return i.object
                    }
                }
                return t
            }
            ,
            t.prototype.sortedKeys = function(t) {
                var e = Object.keys(t)
                  , n = this.pool.lookupArray(e);
                if (!n.keys) {
                    e.sort();
                    var r = JSON.stringify(e);
                    (n.keys = this.keysByJSON.get(r)) || this.keysByJSON.set(r, n.keys = {
                        sorted: e,
                        json: r
                    })
                }
                return n.keys
            }
            ,
            t
        }()
          , eV = Object.assign(function(t) {
            if (tm(t)) {
                void 0 === h && ez();
                var e = h.admit(t)
                  , n = d.get(e);
                return void 0 === n && d.set(e, n = JSON.stringify(e)),
                n
            }
            return JSON.stringify(t)
        }, {
            reset: ez
        });
        function ez() {
            h = new eF,
            d = new (M ? WeakMap : Map)
        }
        function eq(t, e, n) {
            return new tp(function(r) {
                var i = r.next
                  , a = r.error
                  , o = r.complete
                  , s = 0
                  , l = !1
                  , u = {
                    then: function(t) {
                        return new Promise(function(e) {
                            return e(t())
                        }
                        )
                    }
                };
                function c(t, e) {
                    return t ? function(e) {
                        ++s;
                        var n = function() {
                            return t(e)
                        };
                        u = u.then(n, n).then(function(t) {
                            --s,
                            i && i.call(r, t),
                            l && h.complete()
                        }, function(t) {
                            throw --s,
                            t
                        }).catch(function(t) {
                            a && a.call(r, t)
                        })
                    }
                    : function(t) {
                        return e && e.call(r, t)
                    }
                }
                var h = {
                    next: c(e, i),
                    error: c(n, a),
                    complete: function() {
                        l = !0,
                        !s && o && o.call(r)
                    }
                }
                  , d = t.subscribe(h);
                return function() {
                    return d.unsubscribe()
                }
            }
            )
        }
        function eU(t) {
            var e = t5(t.errors) ? t.errors.slice(0) : [];
            return t7(t) && t5(t.incremental) && t.incremental.forEach(function(t) {
                t.errors && e.push.apply(e, t.errors)
            }),
            e
        }
        var eB = {
            kind: c.FIELD,
            name: {
                kind: c.NAME,
                value: "__typename"
            }
        };
        function eG(t) {
            var e = new Map;
            return function(n) {
                void 0 === n && (n = t);
                var r = e.get(n);
                return r || e.set(n, r = {
                    variables: new Set,
                    fragmentSpreads: new Set
                }),
                r
            }
        }
        function eW(t, e) {
            for (var n, r, i, a, o = eG(""), s = eG(""), l = function(t) {
                for (var e = 0, n = void 0; e < t.length && (n = t[e]); ++e)
                    if (!t2(n)) {
                        if (n.kind === c.OPERATION_DEFINITION)
                            return o(n.name && n.name.value);
                        if (n.kind === c.FRAGMENT_DEFINITION)
                            return s(n.name.value)
                    }
                return __DEV__ && w.error("Could not find operation or fragment"),
                null
            }, u = 0, h = e.definitions.length - 1; h >= 0; --h)
                e.definitions[h].kind === c.OPERATION_DEFINITION && ++u;
            var d = (n = new Set,
            r = [],
            t.forEach(function(t) {
                t.name ? n.add(t.name) : t.test && r.push(t.test)
            }),
            function(t) {
                return n.has(t.name.value) || r.some(function(e) {
                    return e(t)
                })
            }
            )
              , f = t.some(function(t) {
                return t.remove
            })
              , p = function(t) {
                return f && t && t.some(d)
            }
              , m = new Map
              , y = !1
              , g = {
                enter: function(t) {
                    if (p(t.directives))
                        return y = !0,
                        null
                }
            }
              , v = tQ(e, {
                Field: g,
                InlineFragment: g,
                VariableDefinition: {
                    enter: function() {
                        return !1
                    }
                },
                Variable: {
                    enter: function(t, e, n, r, i) {
                        var a = l(i);
                        a && a.variables.add(t.name.value)
                    }
                },
                FragmentSpread: {
                    enter: function(t, e, n, r, i) {
                        if (p(t.directives))
                            return y = !0,
                            null;
                        var a = l(i);
                        a && a.fragmentSpreads.add(t.name.value)
                    }
                },
                FragmentDefinition: {
                    enter: function(t, e, n, r) {
                        m.set(JSON.stringify(r), t)
                    },
                    leave: function(t, e, n, r) {
                        return t === m.get(JSON.stringify(r)) ? t : u > 0 && t.selectionSet.selections.every(function(t) {
                            return t.kind === c.FIELD && "__typename" === t.name.value
                        }) ? (s(t.name.value).removed = !0,
                        y = !0,
                        null) : void 0
                    }
                },
                Directive: {
                    leave: function(t) {
                        if (d(t))
                            return y = !0,
                            null
                    }
                }
            });
            if (!y)
                return e;
            var _ = function(t) {
                return t.transitiveVars || (t.transitiveVars = new Set(t.variables),
                t.removed || t.fragmentSpreads.forEach(function(e) {
                    _(s(e)).transitiveVars.forEach(function(e) {
                        t.transitiveVars.add(e)
                    })
                })),
                t
            }
              , b = new Set;
            v.definitions.forEach(function(t) {
                t.kind === c.OPERATION_DEFINITION ? _(o(t.name && t.name.value)).fragmentSpreads.forEach(function(t) {
                    b.add(t)
                }) : t.kind !== c.FRAGMENT_DEFINITION || 0 !== u || s(t.name.value).removed || b.add(t.name.value)
            }),
            b.forEach(function(t) {
                _(s(t)).fragmentSpreads.forEach(function(t) {
                    b.add(t)
                })
            });
            var S = {
                enter: function(t) {
                    var e;
                    if (e = t.name.value,
                    !b.has(e) || s(e).removed)
                        return null
                }
            };
            return !function t(e, n) {
                return !e || e.selectionSet.selections.every(function(e) {
                    return e.kind === c.FRAGMENT_SPREAD && t(n[e.name.value], n)
                })
            }(tD(i = tQ(v, {
                FragmentSpread: S,
                FragmentDefinition: S,
                OperationDefinition: {
                    leave: function(t) {
                        if (t.variableDefinitions) {
                            var e = _(o(t.name && t.name.value)).transitiveVars;
                            if (e.size < t.variableDefinitions.length)
                                return G(G({}, t), {
                                    variableDefinitions: t.variableDefinitions.filter(function(t) {
                                        return e.has(t.variable.name.value)
                                    })
                                })
                        }
                    }
                }
            })) || (__DEV__ ? w("Document" === i.kind, 'Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a "gql" tag? http://docs.apollostack.com/apollo-client/core.html#gql') : w("Document" === i.kind, 51),
            __DEV__ ? w(i.definitions.length <= 1, "Fragment must have exactly one definition.") : w(i.definitions.length <= 1, 52),
            a = i.definitions[0],
            __DEV__ ? w("FragmentDefinition" === a.kind, "Must be a fragment definition.") : w("FragmentDefinition" === a.kind, 53),
            a), tg(tP(i))) ? i : null
        }
        var eH = Object.assign(function(t) {
            return tQ(t, {
                SelectionSet: {
                    enter: function(t, e, n) {
                        if (!n || n.kind !== c.OPERATION_DEFINITION) {
                            var r = t.selections;
                            if (!(!r || r.some(function(t) {
                                return tA(t) && ("__typename" === t.name.value || 0 === t.name.value.lastIndexOf("__", 0))
                            })) && !(tA(n) && n.directives && n.directives.some(function(t) {
                                return "export" === t.name.value
                            })))
                                return G(G({}, t), {
                                    selections: $($([], r, !0), [eB], !1)
                                })
                        }
                    }
                }
            })
        }, {
            added: function(t) {
                return t === eB
            }
        })
          , eQ = {
            test: function(t) {
                var e = "connection" === t.name.value;
                return e && (!t.arguments || !t.arguments.some(function(t) {
                    return "key" === t.name.value
                })) && __DEV__ && w.warn("Removing an @connection directive even though it does not have a key. You may want to use the key parameter to specify a store key."),
                e
            }
        }
          , e$ = new Map;
        function eY(t) {
            var e = e$.get(t) || 1;
            return e$.set(t, e + 1),
            "".concat(t, ":").concat(e, ":").concat(Math.random().toString(36).slice(2))
        }
        function eZ(t, e, n) {
            var r = [];
            t.forEach(function(t) {
                return t[e] && r.push(t)
            }),
            r.forEach(function(t) {
                return t[e](n)
            })
        }
        function eJ(t) {
            function e(e) {
                Object.defineProperty(t, e, {
                    value: tp
                })
            }
            return L && Symbol.species && e(Symbol.species),
            e("@@species"),
            t
        }
        function eX(t) {
            return t && "function" == typeof t.then
        }
        var eK = function(t) {
            function e(e) {
                var n = t.call(this, function(t) {
                    return n.addObserver(t),
                    function() {
                        return n.removeObserver(t)
                    }
                }) || this;
                return n.observers = new Set,
                n.promise = new Promise(function(t, e) {
                    n.resolve = t,
                    n.reject = e
                }
                ),
                n.handlers = {
                    next: function(t) {
                        null !== n.sub && (n.latest = ["next", t],
                        n.notify("next", t),
                        eZ(n.observers, "next", t))
                    },
                    error: function(t) {
                        var e = n.sub;
                        null !== e && (e && setTimeout(function() {
                            return e.unsubscribe()
                        }),
                        n.sub = null,
                        n.latest = ["error", t],
                        n.reject(t),
                        n.notify("error", t),
                        eZ(n.observers, "error", t))
                    },
                    complete: function() {
                        var t = n.sub
                          , e = n.sources;
                        if (null !== t) {
                            var r = (void 0 === e ? [] : e).shift();
                            r ? eX(r) ? r.then(function(t) {
                                return n.sub = t.subscribe(n.handlers)
                            }) : n.sub = r.subscribe(n.handlers) : (t && setTimeout(function() {
                                return t.unsubscribe()
                            }),
                            n.sub = null,
                            n.latest && "next" === n.latest[0] ? n.resolve(n.latest[1]) : n.resolve(),
                            n.notify("complete"),
                            eZ(n.observers, "complete"))
                        }
                    }
                },
                n.nextResultListeners = new Set,
                n.cancel = function(t) {
                    n.reject(t),
                    n.sources = [],
                    n.handlers.complete()
                }
                ,
                n.promise.catch(function(t) {}),
                "function" == typeof e && (e = [new tp(e)]),
                eX(e) ? e.then(function(t) {
                    return n.start(t)
                }, n.handlers.error) : n.start(e),
                n
            }
            return B(e, t),
            e.prototype.start = function(t) {
                void 0 === this.sub && (this.sources = Array.from(t),
                this.handlers.complete())
            }
            ,
            e.prototype.deliverLastMessage = function(t) {
                if (this.latest) {
                    var e = this.latest[0]
                      , n = t[e];
                    n && n.call(t, this.latest[1]),
                    null === this.sub && "next" === e && t.complete && t.complete()
                }
            }
            ,
            e.prototype.addObserver = function(t) {
                this.observers.has(t) || (this.deliverLastMessage(t),
                this.observers.add(t))
            }
            ,
            e.prototype.removeObserver = function(t) {
                this.observers.delete(t) && this.observers.size < 1 && this.handlers.complete()
            }
            ,
            e.prototype.notify = function(t, e) {
                var n = this.nextResultListeners;
                n.size && (this.nextResultListeners = new Set,
                n.forEach(function(n) {
                    return n(t, e)
                }))
            }
            ,
            e.prototype.beforeNext = function(t) {
                var e = !1;
                this.nextResultListeners.add(function(n, r) {
                    e || (e = !0,
                    t(n, r))
                })
            }
            ,
            e
        }(tp);
        function e0(t) {
            return !!t && t < 7
        }
        eJ(eK),
        (o = f || (f = {}))[o.loading = 1] = "loading",
        o[o.setVariables = 2] = "setVariables",
        o[o.fetchMore = 3] = "fetchMore",
        o[o.refetch = 4] = "refetch",
        o[o.poll = 6] = "poll",
        o[o.ready = 7] = "ready",
        o[o.error = 8] = "error";
        var e1 = Object.prototype.toString;
        function e2(t, e) {
            switch (e1.call(t)) {
            case "[object Array]":
                if ((e = e || new Map).has(t))
                    return e.get(t);
                var n = t.slice(0);
                return e.set(t, n),
                n.forEach(function(t, r) {
                    n[r] = e2(t, e)
                }),
                n;
            case "[object Object]":
                if ((e = e || new Map).has(t))
                    return e.get(t);
                var r = Object.create(Object.getPrototypeOf(t));
                return e.set(t, r),
                Object.keys(t).forEach(function(n) {
                    r[n] = e2(t[n], e)
                }),
                r;
            default:
                return t
            }
        }
        function e5() {
            for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
            var n = Object.create(null);
            return t.forEach(function(t) {
                t && Object.keys(t).forEach(function(e) {
                    var r = t[e];
                    void 0 !== r && (n[e] = r)
                })
            }),
            n
        }
        var e3 = Object.assign
          , e6 = Object.hasOwnProperty
          , e4 = function(t) {
            function e(e) {
                var n = e.queryManager
                  , r = e.queryInfo
                  , i = e.options
                  , a = t.call(this, function(t) {
                    try {
                        var e = t._subscription._observer;
                        e && !e.error && (e.error = e9)
                    } catch (t) {}
                    var n = !a.observers.size;
                    a.observers.add(t);
                    var r = a.last;
                    return r && r.error ? t.error && t.error(r.error) : r && r.result && t.next && t.next(r.result),
                    n && a.reobserve().catch(function() {}),
                    function() {
                        a.observers.delete(t) && !a.observers.size && a.tearDownQuery()
                    }
                }) || this;
                a.observers = new Set,
                a.subscriptions = new Set,
                a.queryInfo = r,
                a.queryManager = n,
                a.waitForOwnResult = nt(i.fetchPolicy),
                a.isTornDown = !1;
                var o = n.defaultOptions.watchQuery
                  , s = (void 0 === o ? {} : o).fetchPolicy
                  , l = void 0 === s ? "cache-first" : s
                  , u = i.fetchPolicy
                  , c = void 0 === u ? l : u
                  , h = i.initialFetchPolicy
                  , d = void 0 === h ? "standby" === c ? l : c : h;
                a.options = G(G({}, i), {
                    initialFetchPolicy: d,
                    fetchPolicy: c
                }),
                a.queryId = r.queryId || n.generateQueryId();
                var f = tD(a.query);
                return a.queryName = f && f.name && f.name.value,
                a
            }
            return B(e, t),
            Object.defineProperty(e.prototype, "query", {
                get: function() {
                    return this.queryManager.transform(this.options.query).document
                },
                enumerable: !1,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "variables", {
                get: function() {
                    return this.options.variables
                },
                enumerable: !1,
                configurable: !0
            }),
            e.prototype.result = function() {
                var t = this;
                return new Promise(function(e, n) {
                    var r = {
                        next: function(n) {
                            e(n),
                            t.observers.delete(r),
                            t.observers.size || t.queryManager.removeQuery(t.queryId),
                            setTimeout(function() {
                                i.unsubscribe()
                            }, 0)
                        },
                        error: n
                    }
                      , i = t.subscribe(r)
                }
                )
            }
            ,
            e.prototype.getCurrentResult = function(t) {
                void 0 === t && (t = !0);
                var e = this.getLastResult(!0)
                  , n = this.queryInfo.networkStatus || e && e.networkStatus || f.ready
                  , r = G(G({}, e), {
                    loading: e0(n),
                    networkStatus: n
                })
                  , i = this.options.fetchPolicy
                  , a = void 0 === i ? "cache-first" : i;
                if (nt(a) || this.queryManager.transform(this.options.query).hasForcedResolvers)
                    ;
                else if (this.waitForOwnResult)
                    this.queryInfo.updateWatch();
                else {
                    var o = this.queryInfo.getDiff();
                    (o.complete || this.options.returnPartialData) && (r.data = o.result),
                    eO(r.data, {}) && (r.data = void 0),
                    o.complete ? (delete r.partial,
                    o.complete && r.networkStatus === f.loading && ("cache-first" === a || "cache-only" === a) && (r.networkStatus = f.ready,
                    r.loading = !1)) : r.partial = !0,
                    !__DEV__ || o.complete || this.options.partialRefetch || r.loading || r.data || r.error || e7(o.missing)
                }
                return t && this.updateLastResult(r),
                r
            }
            ,
            e.prototype.isDifferentFromLastResult = function(t, e) {
                return !this.last || !eO(this.last.result, t) || e && !eO(this.last.variables, e)
            }
            ,
            e.prototype.getLast = function(t, e) {
                var n = this.last;
                if (n && n[t] && (!e || eO(n.variables, this.variables)))
                    return n[t]
            }
            ,
            e.prototype.getLastResult = function(t) {
                return this.getLast("result", t)
            }
            ,
            e.prototype.getLastError = function(t) {
                return this.getLast("error", t)
            }
            ,
            e.prototype.resetLastResults = function() {
                delete this.last,
                this.isTornDown = !1
            }
            ,
            e.prototype.resetQueryStoreErrors = function() {
                this.queryManager.resetErrors(this.queryId)
            }
            ,
            e.prototype.refetch = function(t) {
                var e, n = {
                    pollInterval: 0
                }, r = this.options.fetchPolicy;
                if ("cache-and-network" === r ? n.fetchPolicy = r : "no-cache" === r ? n.fetchPolicy = "no-cache" : n.fetchPolicy = "network-only",
                __DEV__ && t && e6.call(t, "variables")) {
                    var i = tM(this.query)
                      , a = i.variableDefinitions;
                    (!a || !a.some(function(t) {
                        return "variables" === t.variable.name.value
                    })) && __DEV__ && w.warn("Called refetch(".concat(JSON.stringify(t), ") for query ").concat((null === (e = i.name) || void 0 === e ? void 0 : e.value) || JSON.stringify(i), ", which does not declare a $variables variable.\nDid you mean to call refetch(variables) instead of refetch({ variables })?"))
                }
                return t && !eO(this.options.variables, t) && (n.variables = this.options.variables = G(G({}, this.options.variables), t)),
                this.queryInfo.resetLastWrite(),
                this.reobserve(n, f.refetch)
            }
            ,
            e.prototype.fetchMore = function(t) {
                var e = this
                  , n = G(G({}, t.query ? t : G(G(G(G({}, this.options), {
                    query: this.query
                }), t), {
                    variables: G(G({}, this.options.variables), t.variables)
                })), {
                    fetchPolicy: "no-cache"
                })
                  , r = this.queryManager.generateQueryId()
                  , i = this.queryInfo
                  , a = i.networkStatus;
                i.networkStatus = f.fetchMore,
                n.notifyOnNetworkStatusChange && this.observe();
                var o = new Set;
                return this.queryManager.fetchQuery(r, n, f.fetchMore).then(function(s) {
                    return e.queryManager.removeQuery(r),
                    i.networkStatus === f.fetchMore && (i.networkStatus = a),
                    e.queryManager.cache.batch({
                        update: function(r) {
                            var i = t.updateQuery;
                            i ? r.updateQuery({
                                query: e.query,
                                variables: e.variables,
                                returnPartialData: !0,
                                optimistic: !1
                            }, function(t) {
                                return i(t, {
                                    fetchMoreResult: s.data,
                                    variables: n.variables
                                })
                            }) : r.writeQuery({
                                query: n.query,
                                variables: n.variables,
                                data: s.data
                            })
                        },
                        onWatchUpdated: function(t) {
                            o.add(t.query)
                        }
                    }),
                    s
                }).finally(function() {
                    o.has(e.query) || e8(e)
                })
            }
            ,
            e.prototype.subscribeToMore = function(t) {
                var e = this
                  , n = this.queryManager.startGraphQLSubscription({
                    query: t.document,
                    variables: t.variables,
                    context: t.context
                }).subscribe({
                    next: function(n) {
                        var r = t.updateQuery;
                        r && e.updateQuery(function(t, e) {
                            return r(t, {
                                subscriptionData: n,
                                variables: e.variables
                            })
                        })
                    },
                    error: function(e) {
                        if (t.onError) {
                            t.onError(e);
                            return
                        }
                        __DEV__ && w.error("Unhandled GraphQL subscription error", e)
                    }
                });
                return this.subscriptions.add(n),
                function() {
                    e.subscriptions.delete(n) && n.unsubscribe()
                }
            }
            ,
            e.prototype.setOptions = function(t) {
                return this.reobserve(t)
            }
            ,
            e.prototype.setVariables = function(t) {
                return eO(this.variables, t) ? this.observers.size ? this.result() : Promise.resolve() : (this.options.variables = t,
                this.observers.size) ? this.reobserve({
                    fetchPolicy: this.options.initialFetchPolicy,
                    variables: t
                }, f.setVariables) : Promise.resolve()
            }
            ,
            e.prototype.updateQuery = function(t) {
                var e = this.queryManager
                  , n = t(e.cache.diff({
                    query: this.options.query,
                    variables: this.variables,
                    returnPartialData: !0,
                    optimistic: !1
                }).result, {
                    variables: this.variables
                });
                n && (e.cache.writeQuery({
                    query: this.options.query,
                    data: n,
                    variables: this.variables
                }),
                e.broadcastQueries())
            }
            ,
            e.prototype.startPolling = function(t) {
                this.options.pollInterval = t,
                this.updatePolling()
            }
            ,
            e.prototype.stopPolling = function() {
                this.options.pollInterval = 0,
                this.updatePolling()
            }
            ,
            e.prototype.applyNextFetchPolicy = function(t, e) {
                if (e.nextFetchPolicy) {
                    var n = e.fetchPolicy
                      , r = void 0 === n ? "cache-first" : n
                      , i = e.initialFetchPolicy
                      , a = void 0 === i ? r : i;
                    "standby" === r || ("function" == typeof e.nextFetchPolicy ? e.fetchPolicy = e.nextFetchPolicy(r, {
                        reason: t,
                        options: e,
                        observable: this,
                        initialFetchPolicy: a
                    }) : "variables-changed" === t ? e.fetchPolicy = a : e.fetchPolicy = e.nextFetchPolicy)
                }
                return e.fetchPolicy
            }
            ,
            e.prototype.fetch = function(t, e) {
                return this.queryManager.setObservableQuery(this),
                this.queryManager.fetchConcastWithInfo(this.queryId, t, e)
            }
            ,
            e.prototype.updatePolling = function() {
                var t = this;
                if (!this.queryManager.ssrMode) {
                    var e = this.pollingInfo
                      , n = this.options.pollInterval;
                    if (!n) {
                        e && (clearTimeout(e.timeout),
                        delete this.pollingInfo);
                        return
                    }
                    if (!e || e.interval !== n) {
                        __DEV__ ? w(n, "Attempted to start a polling query without a polling interval.") : w(n, 13),
                        (e || (this.pollingInfo = {})).interval = n;
                        var r = function() {
                            t.pollingInfo && (e0(t.queryInfo.networkStatus) ? i() : t.reobserve({
                                fetchPolicy: "no-cache" === t.options.initialFetchPolicy ? "no-cache" : "network-only"
                            }, f.poll).then(i, i))
                        }
                          , i = function() {
                            var e = t.pollingInfo;
                            e && (clearTimeout(e.timeout),
                            e.timeout = setTimeout(r, e.interval))
                        };
                        i()
                    }
                }
            }
            ,
            e.prototype.updateLastResult = function(t, e) {
                return void 0 === e && (e = this.variables),
                this.last = G(G({}, this.last), {
                    result: this.queryManager.assumeImmutableResults ? t : e2(t),
                    variables: e
                }),
                t5(t.errors) || delete this.last.error,
                this.last
            }
            ,
            e.prototype.reobserveAsConcast = function(t, e) {
                var n = this;
                this.isTornDown = !1;
                var r = e === f.refetch || e === f.fetchMore || e === f.poll
                  , i = this.options.variables
                  , a = this.options.fetchPolicy
                  , o = e5(this.options, t || {})
                  , s = r ? o : e3(this.options, o);
                !r && (this.updatePolling(),
                t && t.variables && !eO(t.variables, i) && "standby" !== s.fetchPolicy && s.fetchPolicy === a && (this.applyNextFetchPolicy("variables-changed", s),
                void 0 === e && (e = f.setVariables))),
                this.waitForOwnResult && (this.waitForOwnResult = nt(s.fetchPolicy));
                var l = function() {
                    n.concast === h && (n.waitForOwnResult = !1)
                }
                  , u = s.variables && G({}, s.variables)
                  , c = this.fetch(s, e)
                  , h = c.concast
                  , d = c.fromLink
                  , p = {
                    next: function(t) {
                        l(),
                        n.reportResult(t, u)
                    },
                    error: function(t) {
                        l(),
                        n.reportError(t, u)
                    }
                };
                return !r && d && (this.concast && this.observer && this.concast.removeObserver(this.observer),
                this.concast = h,
                this.observer = p),
                h.addObserver(p),
                h
            }
            ,
            e.prototype.reobserve = function(t, e) {
                return this.reobserveAsConcast(t, e).promise
            }
            ,
            e.prototype.observe = function() {
                this.reportResult(this.getCurrentResult(!1), this.variables)
            }
            ,
            e.prototype.reportResult = function(t, e) {
                var n = this.getLastError();
                (n || this.isDifferentFromLastResult(t, e)) && ((n || !t.partial || this.options.returnPartialData) && this.updateLastResult(t, e),
                eZ(this.observers, "next", t))
            }
            ,
            e.prototype.reportError = function(t, e) {
                var n = G(G({}, this.getLastResult()), {
                    error: t,
                    errors: t.graphQLErrors,
                    networkStatus: f.error,
                    loading: !1
                });
                this.updateLastResult(n, e),
                eZ(this.observers, "error", this.last.error = t)
            }
            ,
            e.prototype.hasObservers = function() {
                return this.observers.size > 0
            }
            ,
            e.prototype.tearDownQuery = function() {
                this.isTornDown || (this.concast && this.observer && (this.concast.removeObserver(this.observer),
                delete this.concast,
                delete this.observer),
                this.stopPolling(),
                this.subscriptions.forEach(function(t) {
                    return t.unsubscribe()
                }),
                this.subscriptions.clear(),
                this.queryManager.stopQuery(this.queryId),
                this.observers.clear(),
                this.isTornDown = !0)
            }
            ,
            e
        }(tp);
        function e8(t) {
            var e = t.options
              , n = e.fetchPolicy
              , r = e.nextFetchPolicy;
            return "cache-and-network" === n || "network-only" === n ? t.reobserve({
                fetchPolicy: "cache-first",
                nextFetchPolicy: function() {
                    return (this.nextFetchPolicy = r,
                    "function" == typeof r) ? r.apply(this, arguments) : n
                }
            }) : t.reobserve()
        }
        function e9(t) {
            __DEV__ && w.error("Unhandled error", t.message, t.stack)
        }
        function e7(t) {
            __DEV__ && t && __DEV__ && w.debug("Missing cache result fields: ".concat(JSON.stringify(t)), t)
        }
        function nt(t) {
            return "network-only" === t || "no-cache" === t || "standby" === t
        }
        function ne(t) {
            return t.kind === c.FIELD || t.kind === c.FRAGMENT_SPREAD || t.kind === c.INLINE_FRAGMENT
        }
        eJ(e4);
        var nn = function() {
            return Object.create(null)
        }
          , nr = Array.prototype
          , ni = nr.forEach
          , na = nr.slice
          , no = function() {
            function t(t, e) {
                void 0 === t && (t = !0),
                void 0 === e && (e = nn),
                this.weakness = t,
                this.makeData = e
            }
            return t.prototype.lookup = function() {
                for (var t = [], e = 0; e < arguments.length; e++)
                    t[e] = arguments[e];
                return this.lookupArray(t)
            }
            ,
            t.prototype.lookupArray = function(t) {
                var e = this;
                return ni.call(t, function(t) {
                    return e = e.getChildTrie(t)
                }),
                e.data || (e.data = this.makeData(na.call(t)))
            }
            ,
            t.prototype.getChildTrie = function(e) {
                var n = this.weakness && function(t) {
                    switch (typeof t) {
                    case "object":
                        if (null === t)
                            break;
                    case "function":
                        return !0
                    }
                    return !1
                }(e) ? this.weak || (this.weak = new WeakMap) : this.strong || (this.strong = new Map)
                  , r = n.get(e);
                return r || n.set(e, r = new t(this.weakness,this.makeData)),
                r
            }
            ,
            t
        }();
        let ns = null
          , nl = {}
          , nu = 1;
        function nc(t) {
            try {
                return t()
            } catch (t) {}
        }
        let nh = "@wry/context:Slot"
          , nd = nc( () => globalThis) || nc( () => global) || Object.create(null)
          , nf = nd[nh] || Array[nh] || function(t) {
            try {
                Object.defineProperty(nd, nh, {
                    value: t,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                })
            } finally {
                return t
            }
        }(class {
            constructor() {
                this.id = ["slot", nu++, Date.now(), Math.random().toString(36).slice(2)].join(":")
            }
            hasValue() {
                for (let t = ns; t; t = t.parent)
                    if (this.id in t.slots) {
                        let e = t.slots[this.id];
                        if (e === nl)
                            break;
                        return t !== ns && (ns.slots[this.id] = e),
                        !0
                    }
                return ns && (ns.slots[this.id] = nl),
                !1
            }
            getValue() {
                if (this.hasValue())
                    return ns.slots[this.id]
            }
            withValue(t, e, n, r) {
                let i = {
                    __proto__: null,
                    [this.id]: t
                }
                  , a = ns;
                ns = {
                    parent: a,
                    slots: i
                };
                try {
                    return e.apply(r, n)
                } finally {
                    ns = a
                }
            }
            static bind(t) {
                let e = ns;
                return function() {
                    let n = ns;
                    try {
                        return ns = e,
                        t.apply(this, arguments)
                    } finally {
                        ns = n
                    }
                }
            }
            static noContext(t, e, n) {
                if (!ns)
                    return t.apply(n, e);
                {
                    let r = ns;
                    try {
                        return ns = null,
                        t.apply(n, e)
                    } finally {
                        ns = r
                    }
                }
            }
        }
        )
          , {bind: np, noContext: nm} = nf;
        function ny() {}
        var ng = function() {
            function t(t, e) {
                void 0 === t && (t = 1 / 0),
                void 0 === e && (e = ny),
                this.max = t,
                this.dispose = e,
                this.map = new Map,
                this.newest = null,
                this.oldest = null
            }
            return t.prototype.has = function(t) {
                return this.map.has(t)
            }
            ,
            t.prototype.get = function(t) {
                var e = this.getNode(t);
                return e && e.value
            }
            ,
            t.prototype.getNode = function(t) {
                var e = this.map.get(t);
                if (e && e !== this.newest) {
                    var n = e.older
                      , r = e.newer;
                    r && (r.older = n),
                    n && (n.newer = r),
                    e.older = this.newest,
                    e.older.newer = e,
                    e.newer = null,
                    this.newest = e,
                    e === this.oldest && (this.oldest = r)
                }
                return e
            }
            ,
            t.prototype.set = function(t, e) {
                var n = this.getNode(t);
                return n ? n.value = e : (n = {
                    key: t,
                    value: e,
                    newer: null,
                    older: this.newest
                },
                this.newest && (this.newest.newer = n),
                this.newest = n,
                this.oldest = this.oldest || n,
                this.map.set(t, n),
                n.value)
            }
            ,
            t.prototype.clean = function() {
                for (; this.oldest && this.map.size > this.max; )
                    this.delete(this.oldest.key)
            }
            ,
            t.prototype.delete = function(t) {
                var e = this.map.get(t);
                return !!e && (e === this.newest && (this.newest = e.older),
                e === this.oldest && (this.oldest = e.newer),
                e.newer && (e.newer.older = e.older),
                e.older && (e.older.newer = e.newer),
                this.map.delete(t),
                this.dispose(e.value, t),
                !0)
            }
            ,
            t
        }()
          , nv = new nf
          , n_ = Object.prototype.hasOwnProperty
          , nb = void 0 === (p = Array.from) ? function(t) {
            var e = [];
            return t.forEach(function(t) {
                return e.push(t)
            }),
            e
        }
        : p;
        function nw(t) {
            var e = t.unsubscribe;
            "function" == typeof e && (t.unsubscribe = void 0,
            e())
        }
        var nS = [];
        function nk(t, e) {
            if (!t)
                throw Error(e || "assertion failure")
        }
        function nx(t) {
            switch (t.length) {
            case 0:
                throw Error("unknown value");
            case 1:
                return t[0];
            case 2:
                throw t[1]
            }
        }
        var nE = function() {
            function t(e) {
                this.fn = e,
                this.parents = new Set,
                this.childValues = new Map,
                this.dirtyChildren = null,
                this.dirty = !0,
                this.recomputing = !1,
                this.value = [],
                this.deps = null,
                ++t.count
            }
            return t.prototype.peek = function() {
                if (1 === this.value.length && !nC(this))
                    return nT(this),
                    this.value[0]
            }
            ,
            t.prototype.recompute = function(t) {
                var e;
                return nk(!this.recomputing, "already recomputing"),
                nT(this),
                nC(this) && (nP(this),
                nv.withValue(this, nO, [this, t]),
                function(t, e) {
                    if ("function" == typeof t.subscribe)
                        try {
                            nw(t),
                            t.unsubscribe = t.subscribe.apply(null, e)
                        } catch (e) {
                            return t.setDirty(),
                            !1
                        }
                    return !0
                }(this, t) && (this.dirty = !1,
                nC(this) || (e = this,
                nA(e, nD)))),
                nx(this.value)
            }
            ,
            t.prototype.setDirty = function() {
                this.dirty || (this.dirty = !0,
                this.value.length = 0,
                nA(this, nR),
                nw(this))
            }
            ,
            t.prototype.dispose = function() {
                var t = this;
                this.setDirty(),
                nP(this),
                nA(this, function(e, n) {
                    e.setDirty(),
                    nM(e, t)
                })
            }
            ,
            t.prototype.forget = function() {
                this.dispose()
            }
            ,
            t.prototype.dependOn = function(t) {
                t.add(this),
                this.deps || (this.deps = nS.pop() || new Set),
                this.deps.add(t)
            }
            ,
            t.prototype.forgetDeps = function() {
                var t = this;
                this.deps && (nb(this.deps).forEach(function(e) {
                    return e.delete(t)
                }),
                this.deps.clear(),
                nS.push(this.deps),
                this.deps = null)
            }
            ,
            t.count = 0,
            t
        }();
        function nT(t) {
            var e = nv.getValue();
            if (e)
                return t.parents.add(e),
                e.childValues.has(t) || e.childValues.set(t, []),
                nC(t) ? nR(e, t) : nD(e, t),
                e
        }
        function nO(t, e) {
            t.recomputing = !0,
            t.value.length = 0;
            try {
                t.value[0] = t.fn.apply(null, e)
            } catch (e) {
                t.value[1] = e
            }
            t.recomputing = !1
        }
        function nC(t) {
            return t.dirty || !!(t.dirtyChildren && t.dirtyChildren.size)
        }
        function nA(t, e) {
            var n = t.parents.size;
            if (n)
                for (var r = nb(t.parents), i = 0; i < n; ++i)
                    e(r[i], t)
        }
        function nR(t, e) {
            nk(t.childValues.has(e)),
            nk(nC(e));
            var n = !nC(t);
            if (t.dirtyChildren) {
                if (t.dirtyChildren.has(e))
                    return
            } else
                t.dirtyChildren = nS.pop() || new Set;
            t.dirtyChildren.add(e),
            n && nA(t, nR)
        }
        function nD(t, e) {
            nk(t.childValues.has(e)),
            nk(!nC(e));
            var n, r, i = t.childValues.get(e);
            0 === i.length ? t.childValues.set(e, e.value.slice(0)) : (n = e.value,
            (r = i.length) > 0 && r === n.length && i[r - 1] === n[r - 1] || t.setDirty()),
            nI(t, e),
            nC(t) || nA(t, nD)
        }
        function nI(t, e) {
            var n = t.dirtyChildren;
            n && (n.delete(e),
            0 === n.size && (nS.length < 100 && nS.push(n),
            t.dirtyChildren = null))
        }
        function nP(t) {
            t.childValues.size > 0 && t.childValues.forEach(function(e, n) {
                nM(t, n)
            }),
            t.forgetDeps(),
            nk(null === t.dirtyChildren)
        }
        function nM(t, e) {
            e.parents.delete(t),
            t.childValues.delete(e),
            nI(t, e)
        }
        var nN = {
            setDirty: !0,
            dispose: !0,
            forget: !0
        };
        function nL(t) {
            var e = new Map
              , n = t && t.subscribe;
            function r(t) {
                var r = nv.getValue();
                if (r) {
                    var i = e.get(t);
                    i || e.set(t, i = new Set),
                    r.dependOn(i),
                    "function" == typeof n && (nw(i),
                    i.unsubscribe = n(t))
                }
            }
            return r.dirty = function(t, n) {
                var r = e.get(t);
                if (r) {
                    var i = n && n_.call(nN, n) ? n : "setDirty";
                    nb(r).forEach(function(t) {
                        return t[i]()
                    }),
                    e.delete(t),
                    nw(r)
                }
            }
            ,
            r
        }
        function nj() {
            var t = new no("function" == typeof WeakMap);
            return function() {
                return t.lookupArray(arguments)
            }
        }
        nj();
        var nF = new Set;
        function nV(t, e) {
            void 0 === e && (e = Object.create(null));
            var n = new ng(e.max || 65536,function(t) {
                return t.dispose()
            }
            )
              , r = e.keyArgs
              , i = e.makeCacheKey || nj()
              , a = function() {
                var a = i.apply(null, r ? r.apply(null, arguments) : arguments);
                if (void 0 === a)
                    return t.apply(null, arguments);
                var o = n.get(a);
                o || (n.set(a, o = new nE(t)),
                o.subscribe = e.subscribe,
                o.forget = function() {
                    return n.delete(a)
                }
                );
                var s = o.recompute(Array.prototype.slice.call(arguments));
                return n.set(a, o),
                nF.add(n),
                nv.hasValue() || (nF.forEach(function(t) {
                    return t.clean()
                }),
                nF.clear()),
                s
            };
            function o(t) {
                var e = n.get(t);
                e && e.setDirty()
            }
            function s(t) {
                var e = n.get(t);
                if (e)
                    return e.peek()
            }
            function l(t) {
                return n.delete(t)
            }
            return Object.defineProperty(a, "size", {
                get: function() {
                    return n.map.size
                },
                configurable: !1,
                enumerable: !1
            }),
            a.dirtyKey = o,
            a.dirty = function() {
                o(i.apply(null, arguments))
            }
            ,
            a.peekKey = s,
            a.peek = function() {
                return s(i.apply(null, arguments))
            }
            ,
            a.forgetKey = l,
            a.forget = function() {
                return l(i.apply(null, arguments))
            }
            ,
            a.makeCacheKey = i,
            a.getKey = r ? function() {
                return i.apply(null, r.apply(null, arguments))
            }
            : i,
            Object.freeze(a)
        }
        var nz = new nf
          , nq = new WeakMap;
        function nU(t) {
            var e = nq.get(t);
            return e || nq.set(t, e = {
                vars: new Set,
                dep: nL()
            }),
            e
        }
        function nB(t) {
            nU(t).vars.forEach(function(e) {
                return e.forgetCache(t)
            })
        }
        function nG(t) {
            var e = new Set
              , n = new Set
              , r = function(a) {
                if (arguments.length > 0) {
                    if (t !== a) {
                        t = a,
                        e.forEach(function(t) {
                            nU(t).dep.dirty(r),
                            t.broadcastWatches && t.broadcastWatches()
                        });
                        var o = Array.from(n);
                        n.clear(),
                        o.forEach(function(e) {
                            return e(t)
                        })
                    }
                } else {
                    var s = nz.getValue();
                    s && (i(s),
                    nU(s).dep(r))
                }
                return t
            };
            r.onNextChange = function(t) {
                return n.add(t),
                function() {
                    n.delete(t)
                }
            }
            ;
            var i = r.attachCache = function(t) {
                return e.add(t),
                nU(t).vars.add(r),
                r
            }
            ;
            return r.forgetCache = function(t) {
                return e.delete(t)
            }
            ,
            r
        }
        var nW = function() {
            function t(t) {
                var e = t.cache
                  , n = t.client
                  , r = t.resolvers
                  , i = t.fragmentMatcher;
                this.selectionsToResolveCache = new WeakMap,
                this.cache = e,
                n && (this.client = n),
                r && this.addResolvers(r),
                i && this.setFragmentMatcher(i)
            }
            return t.prototype.addResolvers = function(t) {
                var e = this;
                this.resolvers = this.resolvers || {},
                Array.isArray(t) ? t.forEach(function(t) {
                    e.resolvers = t6(e.resolvers, t)
                }) : this.resolvers = t6(this.resolvers, t)
            }
            ,
            t.prototype.setResolvers = function(t) {
                this.resolvers = {},
                this.addResolvers(t)
            }
            ,
            t.prototype.getResolvers = function() {
                return this.resolvers || {}
            }
            ,
            t.prototype.runResolvers = function(t) {
                var e = t.document
                  , n = t.remoteResult
                  , r = t.context
                  , i = t.variables
                  , a = t.onlyRunForcedResolvers
                  , o = void 0 !== a && a;
                return H(this, void 0, void 0, function() {
                    return Q(this, function(t) {
                        return e ? [2, this.resolveDocument(e, n.data, r, i, this.fragmentMatcher, o).then(function(t) {
                            return G(G({}, n), {
                                data: t.result
                            })
                        })] : [2, n]
                    })
                })
            }
            ,
            t.prototype.setFragmentMatcher = function(t) {
                this.fragmentMatcher = t
            }
            ,
            t.prototype.getFragmentMatcher = function() {
                return this.fragmentMatcher
            }
            ,
            t.prototype.clientQuery = function(t) {
                return tY(["client"], t) && this.resolvers ? t : null
            }
            ,
            t.prototype.serverQuery = function(t) {
                return tR(t),
                eW([{
                    test: function(t) {
                        return "client" === t.name.value
                    },
                    remove: !0
                }], t)
            }
            ,
            t.prototype.prepareContext = function(t) {
                var e = this.cache;
                return G(G({}, t), {
                    cache: e,
                    getCacheKey: function(t) {
                        return e.identify(t)
                    }
                })
            }
            ,
            t.prototype.addExportedVariables = function(t, e, n) {
                return void 0 === e && (e = {}),
                void 0 === n && (n = {}),
                H(this, void 0, void 0, function() {
                    return Q(this, function(r) {
                        return t ? [2, this.resolveDocument(t, this.buildRootValueFromCache(t, e) || {}, this.prepareContext(n), e).then(function(t) {
                            return G(G({}, e), t.exportedVariables)
                        })] : [2, G({}, e)]
                    })
                })
            }
            ,
            t.prototype.shouldForceResolvers = function(t) {
                var e = !1;
                return tQ(t, {
                    Directive: {
                        enter: function(t) {
                            if ("client" === t.name.value && t.arguments && (e = t.arguments.some(function(t) {
                                return "always" === t.name.value && "BooleanValue" === t.value.kind && !0 === t.value.value
                            })))
                                return tH
                        }
                    }
                }),
                e
            }
            ,
            t.prototype.buildRootValueFromCache = function(t, e) {
                return this.cache.diff({
                    query: "query" === tN(t).operation ? t : tQ(t, {
                        OperationDefinition: {
                            enter: function(t) {
                                return G(G({}, t), {
                                    operation: "query"
                                })
                            }
                        }
                    }),
                    variables: e,
                    returnPartialData: !0,
                    optimistic: !1
                }).result
            }
            ,
            t.prototype.resolveDocument = function(t, e, n, r, i, a) {
                return void 0 === n && (n = {}),
                void 0 === r && (r = {}),
                void 0 === i && (i = function() {
                    return !0
                }
                ),
                void 0 === a && (a = !1),
                H(this, void 0, void 0, function() {
                    var o, s, l, u, c, h, d, f, p;
                    return Q(this, function(m) {
                        return o = tN(t),
                        s = tg(tP(t)),
                        l = this.collectSelectionsToResolve(o, s),
                        c = (u = o.operation) ? u.charAt(0).toUpperCase() + u.slice(1) : "Query",
                        h = this,
                        d = h.cache,
                        f = h.client,
                        p = {
                            fragmentMap: s,
                            context: G(G({}, n), {
                                cache: d,
                                client: f
                            }),
                            variables: r,
                            fragmentMatcher: i,
                            defaultOperationType: c,
                            exportedVariables: {},
                            selectionsToResolve: l,
                            onlyRunForcedResolvers: a
                        },
                        [2, this.resolveSelectionSet(o.selectionSet, !1, e, p).then(function(t) {
                            return {
                                result: t,
                                exportedVariables: p.exportedVariables
                            }
                        })]
                    })
                })
            }
            ,
            t.prototype.resolveSelectionSet = function(t, e, n, r) {
                return H(this, void 0, void 0, function() {
                    var i, a, o, s, l, u = this;
                    return Q(this, function(c) {
                        return i = r.fragmentMap,
                        a = r.context,
                        o = r.variables,
                        s = [n],
                        l = function(t) {
                            return H(u, void 0, void 0, function() {
                                var l, u;
                                return Q(this, function(c) {
                                    return (e || r.selectionsToResolve.has(t)) && t$(t, o) ? tA(t) ? [2, this.resolveField(t, e, n, r).then(function(e) {
                                        var n;
                                        void 0 !== e && s.push(((n = {})[tO(t)] = e,
                                        n))
                                    })] : ("InlineFragment" === t.kind ? l = t : (l = i[t.name.value],
                                    __DEV__ ? w(l, "No fragment named ".concat(t.name.value)) : w(l, 11)),
                                    l && l.typeCondition && (u = l.typeCondition.name.value,
                                    r.fragmentMatcher(n, u, a)) ? [2, this.resolveSelectionSet(l.selectionSet, e, n, r).then(function(t) {
                                        s.push(t)
                                    })] : [2]) : [2]
                                })
                            })
                        }
                        ,
                        [2, Promise.all(t.selections.map(l)).then(function() {
                            return t4(s)
                        })]
                    })
                })
            }
            ,
            t.prototype.resolveField = function(t, e, n, r) {
                return H(this, void 0, void 0, function() {
                    var i, a, o, s, l, u, c, h, d, f = this;
                    return Q(this, function(p) {
                        return n ? (i = r.variables,
                        s = (a = t.name.value) !== (o = tO(t)),
                        u = Promise.resolve(l = n[o] || n[a]),
                        (!r.onlyRunForcedResolvers || this.shouldForceResolvers(t)) && (c = n.__typename || r.defaultOperationType,
                        (h = this.resolvers && this.resolvers[c]) && (d = h[s ? a : o]) && (u = Promise.resolve(nz.withValue(this.cache, d, [n, tT(t, i), r.context, {
                            field: t,
                            fragmentMap: r.fragmentMap
                        }])))),
                        [2, u.then(function(n) {
                            if (void 0 === n && (n = l),
                            t.directives && t.directives.forEach(function(t) {
                                "export" === t.name.value && t.arguments && t.arguments.forEach(function(t) {
                                    "as" === t.name.value && "StringValue" === t.value.kind && (r.exportedVariables[t.value.value] = n)
                                })
                            }),
                            !t.selectionSet || null == n)
                                return n;
                            var i, a, o = null !== (a = null === (i = t.directives) || void 0 === i ? void 0 : i.some(function(t) {
                                return "client" === t.name.value
                            })) && void 0 !== a && a;
                            return Array.isArray(n) ? f.resolveSubSelectedArray(t, e || o, n, r) : t.selectionSet ? f.resolveSelectionSet(t.selectionSet, e || o, n, r) : void 0
                        })]) : [2, null]
                    })
                })
            }
            ,
            t.prototype.resolveSubSelectedArray = function(t, e, n, r) {
                var i = this;
                return Promise.all(n.map(function(n) {
                    return null === n ? null : Array.isArray(n) ? i.resolveSubSelectedArray(t, e, n, r) : t.selectionSet ? i.resolveSelectionSet(t.selectionSet, e, n, r) : void 0
                }))
            }
            ,
            t.prototype.collectSelectionsToResolve = function(t, e) {
                var n = function(t) {
                    return !Array.isArray(t)
                }
                  , r = this.selectionsToResolveCache;
                return function t(i) {
                    if (!r.has(i)) {
                        var a = new Set;
                        r.set(i, a),
                        tQ(i, {
                            Directive: function(t, e, r, i, o) {
                                "client" === t.name.value && o.forEach(function(t) {
                                    n(t) && ne(t) && a.add(t)
                                })
                            },
                            FragmentSpread: function(r, i, o, s, l) {
                                var u = e[r.name.value];
                                __DEV__ ? w(u, "No fragment named ".concat(r.name.value)) : w(u, 12);
                                var c = t(u);
                                c.size > 0 && (l.forEach(function(t) {
                                    n(t) && ne(t) && a.add(t)
                                }),
                                a.add(r),
                                c.forEach(function(t) {
                                    a.add(t)
                                }))
                            }
                        })
                    }
                    return r.get(i)
                }(t)
            }
            ,
            t
        }()
          , nH = new (M ? WeakMap : Map);
        function nQ(t, e) {
            var n = t[e];
            "function" == typeof n && (t[e] = function() {
                return nH.set(t, (nH.get(t) + 1) % 1e15),
                n.apply(this, arguments)
            }
            )
        }
        function n$(t) {
            t.notifyTimeout && (clearTimeout(t.notifyTimeout),
            t.notifyTimeout = void 0)
        }
        var nY = function() {
            function t(t, e) {
                void 0 === e && (e = t.generateQueryId()),
                this.queryId = e,
                this.listeners = new Set,
                this.document = null,
                this.lastRequestId = 1,
                this.subscriptions = new Set,
                this.stopped = !1,
                this.dirty = !1,
                this.observableQuery = null;
                var n = this.cache = t.cache;
                nH.has(n) || (nH.set(n, 0),
                nQ(n, "evict"),
                nQ(n, "modify"),
                nQ(n, "reset"))
            }
            return t.prototype.init = function(t) {
                var e = t.networkStatus || f.loading;
                return this.variables && this.networkStatus !== f.loading && !eO(this.variables, t.variables) && (e = f.setVariables),
                eO(t.variables, this.variables) || (this.lastDiff = void 0),
                Object.assign(this, {
                    document: t.document,
                    variables: t.variables,
                    networkError: null,
                    graphQLErrors: this.graphQLErrors || [],
                    networkStatus: e
                }),
                t.observableQuery && this.setObservableQuery(t.observableQuery),
                t.lastRequestId && (this.lastRequestId = t.lastRequestId),
                this
            }
            ,
            t.prototype.reset = function() {
                n$(this),
                this.dirty = !1
            }
            ,
            t.prototype.getDiff = function(t) {
                void 0 === t && (t = this.variables);
                var e = this.getDiffOptions(t);
                if (this.lastDiff && eO(e, this.lastDiff.options))
                    return this.lastDiff.diff;
                this.updateWatch(this.variables = t);
                var n = this.observableQuery;
                if (n && "no-cache" === n.options.fetchPolicy)
                    return {
                        complete: !1
                    };
                var r = this.cache.diff(e);
                return this.updateLastDiff(r, e),
                r
            }
            ,
            t.prototype.updateLastDiff = function(t, e) {
                this.lastDiff = t ? {
                    diff: t,
                    options: e || this.getDiffOptions()
                } : void 0
            }
            ,
            t.prototype.getDiffOptions = function(t) {
                var e;
                return void 0 === t && (t = this.variables),
                {
                    query: this.document,
                    variables: t,
                    returnPartialData: !0,
                    optimistic: !0,
                    canonizeResults: null === (e = this.observableQuery) || void 0 === e ? void 0 : e.options.canonizeResults
                }
            }
            ,
            t.prototype.setDiff = function(t) {
                var e = this
                  , n = this.lastDiff && this.lastDiff.diff;
                this.updateLastDiff(t),
                this.dirty || eO(n && n.result, t && t.result) || (this.dirty = !0,
                this.notifyTimeout || (this.notifyTimeout = setTimeout(function() {
                    return e.notify()
                }, 0)))
            }
            ,
            t.prototype.setObservableQuery = function(t) {
                var e = this;
                t !== this.observableQuery && (this.oqListener && this.listeners.delete(this.oqListener),
                this.observableQuery = t,
                t ? (t.queryInfo = this,
                this.listeners.add(this.oqListener = function() {
                    e.getDiff().fromOptimisticTransaction ? t.observe() : e8(t)
                }
                )) : delete this.oqListener)
            }
            ,
            t.prototype.notify = function() {
                var t = this;
                n$(this),
                this.shouldNotify() && this.listeners.forEach(function(e) {
                    return e(t)
                }),
                this.dirty = !1
            }
            ,
            t.prototype.shouldNotify = function() {
                if (!this.dirty || !this.listeners.size)
                    return !1;
                if (e0(this.networkStatus) && this.observableQuery) {
                    var t = this.observableQuery.options.fetchPolicy;
                    if ("cache-only" !== t && "cache-and-network" !== t)
                        return !1
                }
                return !0
            }
            ,
            t.prototype.stop = function() {
                if (!this.stopped) {
                    this.stopped = !0,
                    this.reset(),
                    this.cancel(),
                    this.cancel = t.prototype.cancel,
                    this.subscriptions.forEach(function(t) {
                        return t.unsubscribe()
                    });
                    var e = this.observableQuery;
                    e && e.stopPolling()
                }
            }
            ,
            t.prototype.cancel = function() {}
            ,
            t.prototype.updateWatch = function(t) {
                var e = this;
                void 0 === t && (t = this.variables);
                var n = this.observableQuery;
                if (!n || "no-cache" !== n.options.fetchPolicy) {
                    var r = G(G({}, this.getDiffOptions(t)), {
                        watcher: this,
                        callback: function(t) {
                            return e.setDiff(t)
                        }
                    });
                    this.lastWatch && eO(r, this.lastWatch) || (this.cancel(),
                    this.cancel = this.cache.watch(this.lastWatch = r))
                }
            }
            ,
            t.prototype.resetLastWrite = function() {
                this.lastWrite = void 0
            }
            ,
            t.prototype.shouldWrite = function(t, e) {
                var n = this.lastWrite;
                return !(n && n.dmCount === nH.get(this.cache) && eO(e, n.variables) && eO(t.data, n.result.data))
            }
            ,
            t.prototype.markResult = function(t, e, n, r) {
                var i = this
                  , a = new t9
                  , o = t5(t.errors) ? t.errors.slice(0) : [];
                if (this.reset(),
                "incremental"in t && t5(t.incremental)) {
                    var s = et(this.getDiff().result, t);
                    t.data = s
                } else if ("hasNext"in t && t.hasNext) {
                    var l = this.getDiff();
                    t.data = a.merge(l.result, t.data)
                }
                this.graphQLErrors = o,
                "no-cache" === n.fetchPolicy ? this.updateLastDiff({
                    result: t.data,
                    complete: !0
                }, this.getDiffOptions(n.variables)) : 0 !== r && (nZ(t, n.errorPolicy) ? this.cache.performTransaction(function(a) {
                    if (i.shouldWrite(t, n.variables))
                        a.writeQuery({
                            query: e,
                            data: t.data,
                            variables: n.variables,
                            overwrite: 1 === r
                        }),
                        i.lastWrite = {
                            result: t,
                            variables: n.variables,
                            dmCount: nH.get(i.cache)
                        };
                    else if (i.lastDiff && i.lastDiff.diff.complete) {
                        t.data = i.lastDiff.diff.result;
                        return
                    }
                    var o = i.getDiffOptions(n.variables)
                      , s = a.diff(o);
                    i.stopped || i.updateWatch(n.variables),
                    i.updateLastDiff(s, o),
                    s.complete && (t.data = s.result)
                }) : this.lastWrite = void 0)
            }
            ,
            t.prototype.markReady = function() {
                return this.networkError = null,
                this.networkStatus = f.ready
            }
            ,
            t.prototype.markError = function(t) {
                return this.networkStatus = f.error,
                this.lastWrite = void 0,
                this.reset(),
                t.graphQLErrors && (this.graphQLErrors = t.graphQLErrors),
                t.networkError && (this.networkError = t.networkError),
                t
            }
            ,
            t
        }();
        function nZ(t, e) {
            void 0 === e && (e = "none");
            var n = "ignore" === e || "all" === e
              , r = !t5(eU(t));
            return !r && n && t.data && (r = !0),
            r
        }
        var nJ = Object.prototype.hasOwnProperty
          , nX = function() {
            function t(t) {
                var e = t.cache
                  , n = t.link
                  , r = t.defaultOptions
                  , i = t.queryDeduplication
                  , a = t.onBroadcast
                  , o = t.ssrMode
                  , s = t.clientAwareness
                  , l = t.localState
                  , u = t.assumeImmutableResults;
                this.clientAwareness = {},
                this.queries = new Map,
                this.fetchCancelFns = new Map,
                this.transformCache = new (M ? WeakMap : Map),
                this.queryIdCounter = 1,
                this.requestIdCounter = 1,
                this.mutationIdCounter = 1,
                this.inFlightLinkObservables = new Map,
                this.cache = e,
                this.link = n,
                this.defaultOptions = r || Object.create(null),
                this.queryDeduplication = void 0 !== i && i,
                this.clientAwareness = void 0 === s ? {} : s,
                this.localState = l || new nW({
                    cache: e
                }),
                this.ssrMode = void 0 !== o && o,
                this.assumeImmutableResults = !!u,
                (this.onBroadcast = a) && (this.mutationStore = Object.create(null))
            }
            return t.prototype.stop = function() {
                var t = this;
                this.queries.forEach(function(e, n) {
                    t.stopQueryNoBroadcast(n)
                }),
                this.cancelPendingFetches(__DEV__ ? new b("QueryManager stopped while query was in flight") : new b(14))
            }
            ,
            t.prototype.cancelPendingFetches = function(t) {
                this.fetchCancelFns.forEach(function(e) {
                    return e(t)
                }),
                this.fetchCancelFns.clear()
            }
            ,
            t.prototype.mutate = function(t) {
                var e, n, r = t.mutation, i = t.variables, a = t.optimisticResponse, o = t.updateQueries, s = t.refetchQueries, l = void 0 === s ? [] : s, u = t.awaitRefetchQueries, c = void 0 !== u && u, h = t.update, d = t.onQueryUpdated, f = t.fetchPolicy, p = void 0 === f ? (null === (e = this.defaultOptions.mutate) || void 0 === e ? void 0 : e.fetchPolicy) || "network-only" : f, m = t.errorPolicy, y = void 0 === m ? (null === (n = this.defaultOptions.mutate) || void 0 === n ? void 0 : n.errorPolicy) || "none" : m, g = t.keepRootFields, v = t.context;
                return H(this, void 0, void 0, function() {
                    var t, e, n, s, u, f;
                    return Q(this, function(m) {
                        switch (m.label) {
                        case 0:
                            if (__DEV__ ? w(r, "mutation option is required. You must specify your GraphQL document in the mutation option.") : w(r, 15),
                            __DEV__ ? w("network-only" === p || "no-cache" === p, "Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.") : w("network-only" === p || "no-cache" === p, 16),
                            t = this.generateMutationId(),
                            n = (e = this.transform(r)).document,
                            s = e.hasClientExports,
                            r = this.cache.transformForLink(n),
                            i = this.getVariables(r, i),
                            !s)
                                return [3, 2];
                            return [4, this.localState.addExportedVariables(r, i, v)];
                        case 1:
                            i = m.sent(),
                            m.label = 2;
                        case 2:
                            return u = this.mutationStore && (this.mutationStore[t] = {
                                mutation: r,
                                variables: i,
                                loading: !0,
                                error: null
                            }),
                            a && this.markMutationOptimistic(a, {
                                mutationId: t,
                                document: r,
                                variables: i,
                                fetchPolicy: p,
                                errorPolicy: y,
                                context: v,
                                updateQueries: o,
                                update: h,
                                keepRootFields: g
                            }),
                            this.broadcastQueries(),
                            f = this,
                            [2, new Promise(function(e, n) {
                                return eq(f.getObservableFromLink(r, G(G({}, v), {
                                    optimisticResponse: a
                                }), i, !1), function(e) {
                                    if (t5(eU(e)) && "none" === y)
                                        throw new t1({
                                            graphQLErrors: eU(e)
                                        });
                                    u && (u.loading = !1,
                                    u.error = null);
                                    var n = G({}, e);
                                    return "function" == typeof l && (l = l(n)),
                                    "ignore" === y && t5(eU(n)) && delete n.errors,
                                    f.markMutationResult({
                                        mutationId: t,
                                        result: n,
                                        document: r,
                                        variables: i,
                                        fetchPolicy: p,
                                        errorPolicy: y,
                                        context: v,
                                        update: h,
                                        updateQueries: o,
                                        awaitRefetchQueries: c,
                                        refetchQueries: l,
                                        removeOptimistic: a ? t : void 0,
                                        onQueryUpdated: d,
                                        keepRootFields: g
                                    })
                                }).subscribe({
                                    next: function(t) {
                                        f.broadcastQueries(),
                                        "hasNext"in t && !1 !== t.hasNext || e(t)
                                    },
                                    error: function(e) {
                                        u && (u.loading = !1,
                                        u.error = e),
                                        a && f.cache.removeOptimistic(t),
                                        f.broadcastQueries(),
                                        n(e instanceof t1 ? e : new t1({
                                            networkError: e
                                        }))
                                    }
                                })
                            }
                            )]
                        }
                    })
                })
            }
            ,
            t.prototype.markMutationResult = function(t, e) {
                var n = this;
                void 0 === e && (e = this.cache);
                var r = t.result
                  , i = []
                  , a = "no-cache" === t.fetchPolicy;
                if (!a && nZ(r, t.errorPolicy)) {
                    if (t7(r) || i.push({
                        result: r.data,
                        dataId: "ROOT_MUTATION",
                        query: t.document,
                        variables: t.variables
                    }),
                    t7(r) && t5(r.incremental)) {
                        var o = e.diff({
                            id: "ROOT_MUTATION",
                            query: this.transform(t.document).asQuery,
                            variables: t.variables,
                            optimistic: !1,
                            returnPartialData: !0
                        })
                          , s = void 0;
                        o.result && (s = et(o.result, r)),
                        void 0 !== s && (r.data = s,
                        i.push({
                            result: s,
                            dataId: "ROOT_MUTATION",
                            query: t.document,
                            variables: t.variables
                        }))
                    }
                    var l = t.updateQueries;
                    l && this.queries.forEach(function(t, a) {
                        var o = t.observableQuery
                          , s = o && o.queryName;
                        if (s && nJ.call(l, s)) {
                            var u = l[s]
                              , c = n.queries.get(a)
                              , h = c.document
                              , d = c.variables
                              , f = e.diff({
                                query: h,
                                variables: d,
                                returnPartialData: !0,
                                optimistic: !1
                            })
                              , p = f.result;
                            if (f.complete && p) {
                                var m = u(p, {
                                    mutationResult: r,
                                    queryName: h && tI(h) || void 0,
                                    queryVariables: d
                                });
                                m && i.push({
                                    result: m,
                                    dataId: "ROOT_QUERY",
                                    query: h,
                                    variables: d
                                })
                            }
                        }
                    })
                }
                if (i.length > 0 || t.refetchQueries || t.update || t.onQueryUpdated || t.removeOptimistic) {
                    var u = [];
                    if (this.refetchQueries({
                        updateCache: function(e) {
                            a || i.forEach(function(t) {
                                return e.write(t)
                            });
                            var o, s = t.update, l = !(t7(o = r) || "hasNext"in o && "data"in o) || t7(r) && !r.hasNext;
                            if (s) {
                                if (!a) {
                                    var u = e.diff({
                                        id: "ROOT_MUTATION",
                                        query: n.transform(t.document).asQuery,
                                        variables: t.variables,
                                        optimistic: !1,
                                        returnPartialData: !0
                                    });
                                    u.complete && ("incremental"in (r = G(G({}, r), {
                                        data: u.result
                                    })) && delete r.incremental,
                                    "hasNext"in r && delete r.hasNext)
                                }
                                l && s(e, r, {
                                    context: t.context,
                                    variables: t.variables
                                })
                            }
                            a || t.keepRootFields || !l || e.modify({
                                id: "ROOT_MUTATION",
                                fields: function(t, e) {
                                    var n = e.fieldName
                                      , r = e.DELETE;
                                    return "__typename" === n ? t : r
                                }
                            })
                        },
                        include: t.refetchQueries,
                        optimistic: !1,
                        removeOptimistic: t.removeOptimistic,
                        onQueryUpdated: t.onQueryUpdated || null
                    }).forEach(function(t) {
                        return u.push(t)
                    }),
                    t.awaitRefetchQueries || t.onQueryUpdated)
                        return Promise.all(u).then(function() {
                            return r
                        })
                }
                return Promise.resolve(r)
            }
            ,
            t.prototype.markMutationOptimistic = function(t, e) {
                var n = this
                  , r = "function" == typeof t ? t(e.variables) : t;
                return this.cache.recordOptimisticTransaction(function(t) {
                    try {
                        n.markMutationResult(G(G({}, e), {
                            result: {
                                data: r
                            }
                        }), t)
                    } catch (t) {
                        __DEV__ && w.error(t)
                    }
                }, e.mutationId)
            }
            ,
            t.prototype.fetchQuery = function(t, e, n) {
                return this.fetchQueryObservable(t, e, n).promise
            }
            ,
            t.prototype.getQueryStore = function() {
                var t = Object.create(null);
                return this.queries.forEach(function(e, n) {
                    t[n] = {
                        variables: e.variables,
                        networkStatus: e.networkStatus,
                        networkError: e.networkError,
                        graphQLErrors: e.graphQLErrors
                    }
                }),
                t
            }
            ,
            t.prototype.resetErrors = function(t) {
                var e = this.queries.get(t);
                e && (e.networkError = void 0,
                e.graphQLErrors = [])
            }
            ,
            t.prototype.transform = function(t) {
                var e = this.transformCache;
                if (!e.has(t)) {
                    var n = this.cache.transformDocument(t)
                      , r = eW([eQ], tR(n))
                      , i = this.localState.clientQuery(n)
                      , a = r && this.localState.serverQuery(r)
                      , o = {
                        document: n,
                        hasClientExports: n && tY(["client", "export"], n, !0),
                        hasForcedResolvers: this.localState.shouldForceResolvers(n),
                        clientQuery: i,
                        serverQuery: a,
                        defaultVars: tL(tD(n)),
                        asQuery: G(G({}, n), {
                            definitions: n.definitions.map(function(t) {
                                return "OperationDefinition" === t.kind && "query" !== t.operation ? G(G({}, t), {
                                    operation: "query"
                                }) : t
                            })
                        })
                    }
                      , s = function(t) {
                        t && !e.has(t) && e.set(t, o)
                    };
                    s(t),
                    s(n),
                    s(i),
                    s(a)
                }
                return e.get(t)
            }
            ,
            t.prototype.getVariables = function(t, e) {
                return G(G({}, this.transform(t).defaultVars), e)
            }
            ,
            t.prototype.watchQuery = function(t) {
                void 0 === (t = G(G({}, t), {
                    variables: this.getVariables(t.query, t.variables)
                })).notifyOnNetworkStatusChange && (t.notifyOnNetworkStatusChange = !1);
                var e = new nY(this)
                  , n = new e4({
                    queryManager: this,
                    queryInfo: e,
                    options: t
                });
                return this.queries.set(n.queryId, e),
                e.init({
                    document: n.query,
                    observableQuery: n,
                    variables: n.variables
                }),
                n
            }
            ,
            t.prototype.query = function(t, e) {
                var n = this;
                return void 0 === e && (e = this.generateQueryId()),
                __DEV__ ? w(t.query, "query option is required. You must specify your GraphQL document in the query option.") : w(t.query, 17),
                __DEV__ ? w("Document" === t.query.kind, 'You must wrap the query string in a "gql" tag.') : w("Document" === t.query.kind, 18),
                __DEV__ ? w(!t.returnPartialData, "returnPartialData option only supported on watchQuery.") : w(!t.returnPartialData, 19),
                __DEV__ ? w(!t.pollInterval, "pollInterval option only supported on watchQuery.") : w(!t.pollInterval, 20),
                this.fetchQuery(e, t).finally(function() {
                    return n.stopQuery(e)
                })
            }
            ,
            t.prototype.generateQueryId = function() {
                return String(this.queryIdCounter++)
            }
            ,
            t.prototype.generateRequestId = function() {
                return this.requestIdCounter++
            }
            ,
            t.prototype.generateMutationId = function() {
                return String(this.mutationIdCounter++)
            }
            ,
            t.prototype.stopQueryInStore = function(t) {
                this.stopQueryInStoreNoBroadcast(t),
                this.broadcastQueries()
            }
            ,
            t.prototype.stopQueryInStoreNoBroadcast = function(t) {
                var e = this.queries.get(t);
                e && e.stop()
            }
            ,
            t.prototype.clearStore = function(t) {
                return void 0 === t && (t = {
                    discardWatches: !0
                }),
                this.cancelPendingFetches(__DEV__ ? new b("Store reset while query was in flight (not completed in link chain)") : new b(21)),
                this.queries.forEach(function(t) {
                    t.observableQuery ? t.networkStatus = f.loading : t.stop()
                }),
                this.mutationStore && (this.mutationStore = Object.create(null)),
                this.cache.reset(t)
            }
            ,
            t.prototype.getObservableQueries = function(t) {
                var e = this;
                void 0 === t && (t = "active");
                var n = new Map
                  , r = new Map
                  , i = new Set;
                return Array.isArray(t) && t.forEach(function(t) {
                    "string" == typeof t ? r.set(t, !1) : tm(t) && "Document" === t.kind && Array.isArray(t.definitions) ? r.set(e.transform(t).document, !1) : tm(t) && t.query && i.add(t)
                }),
                this.queries.forEach(function(e, i) {
                    var a = e.observableQuery
                      , o = e.document;
                    if (a) {
                        if ("all" === t) {
                            n.set(i, a);
                            return
                        }
                        var s = a.queryName;
                        if ("standby" === a.options.fetchPolicy || "active" === t && !a.hasObservers())
                            return;
                        ("active" === t || s && r.has(s) || o && r.has(o)) && (n.set(i, a),
                        s && r.set(s, !0),
                        o && r.set(o, !0))
                    }
                }),
                i.size && i.forEach(function(t) {
                    var r = eY("legacyOneTimeQuery")
                      , i = e.getQuery(r).init({
                        document: t.query,
                        variables: t.variables
                    })
                      , a = new e4({
                        queryManager: e,
                        queryInfo: i,
                        options: G(G({}, t), {
                            fetchPolicy: "network-only"
                        })
                    });
                    w(a.queryId === r),
                    i.setObservableQuery(a),
                    n.set(r, a)
                }),
                __DEV__ && r.size && r.forEach(function(t, e) {
                    !t && __DEV__ && w.warn("Unknown query ".concat("string" == typeof e ? "named " : "").concat(JSON.stringify(e, null, 2), " requested in refetchQueries options.include array"))
                }),
                n
            }
            ,
            t.prototype.reFetchObservableQueries = function(t) {
                var e = this;
                void 0 === t && (t = !1);
                var n = [];
                return this.getObservableQueries(t ? "all" : "active").forEach(function(r, i) {
                    var a = r.options.fetchPolicy;
                    r.resetLastResults(),
                    (t || "standby" !== a && "cache-only" !== a) && n.push(r.refetch()),
                    e.getQuery(i).setDiff(null)
                }),
                this.broadcastQueries(),
                Promise.all(n)
            }
            ,
            t.prototype.setObservableQuery = function(t) {
                this.getQuery(t.queryId).setObservableQuery(t)
            }
            ,
            t.prototype.startGraphQLSubscription = function(t) {
                var e = this
                  , n = t.query
                  , r = t.fetchPolicy
                  , i = t.errorPolicy
                  , a = t.variables
                  , o = t.context
                  , s = void 0 === o ? {} : o;
                n = this.transform(n).document,
                a = this.getVariables(n, a);
                var l = function(t) {
                    return e.getObservableFromLink(n, s, t).map(function(a) {
                        "no-cache" !== r && (nZ(a, i) && e.cache.write({
                            query: n,
                            result: a.data,
                            dataId: "ROOT_SUBSCRIPTION",
                            variables: t
                        }),
                        e.broadcastQueries());
                        var o = t5(eU(a))
                          , s = !!a.extensions && Array.isArray(a.extensions[tK]);
                        if (o || s) {
                            var l = {};
                            throw o && (l.graphQLErrors = a.errors),
                            s && (l.protocolErrors = a.extensions[tK]),
                            new t1(l)
                        }
                        return a
                    })
                };
                if (this.transform(n).hasClientExports) {
                    var u = this.localState.addExportedVariables(n, a, s).then(l);
                    return new tp(function(t) {
                        var e = null;
                        return u.then(function(n) {
                            return e = n.subscribe(t)
                        }, t.error),
                        function() {
                            return e && e.unsubscribe()
                        }
                    }
                    )
                }
                return l(a)
            }
            ,
            t.prototype.stopQuery = function(t) {
                this.stopQueryNoBroadcast(t),
                this.broadcastQueries()
            }
            ,
            t.prototype.stopQueryNoBroadcast = function(t) {
                this.stopQueryInStoreNoBroadcast(t),
                this.removeQuery(t)
            }
            ,
            t.prototype.removeQuery = function(t) {
                this.fetchCancelFns.delete(t),
                this.queries.has(t) && (this.getQuery(t).stop(),
                this.queries.delete(t))
            }
            ,
            t.prototype.broadcastQueries = function() {
                this.onBroadcast && this.onBroadcast(),
                this.queries.forEach(function(t) {
                    return t.notify()
                })
            }
            ,
            t.prototype.getLocalState = function() {
                return this.localState
            }
            ,
            t.prototype.getObservableFromLink = function(t, e, n, r) {
                var i, a, o = this;
                void 0 === r && (r = null !== (i = null == e ? void 0 : e.queryDeduplication) && void 0 !== i ? i : this.queryDeduplication);
                var s = this.transform(t).serverQuery;
                if (s) {
                    var l = this.inFlightLinkObservables
                      , u = this.link
                      , c = {
                        query: s,
                        variables: n,
                        operationName: tI(s) || void 0,
                        context: this.prepareContext(G(G({}, e), {
                            forceFetch: !r
                        }))
                    };
                    if (e = c.context,
                    r) {
                        var h = l.get(s) || new Map;
                        l.set(s, h);
                        var d = eV(n);
                        if (!(a = h.get(d))) {
                            var f = new eK([tU(u, c)]);
                            h.set(d, a = f),
                            f.beforeNext(function() {
                                h.delete(d) && h.size < 1 && l.delete(s)
                            })
                        }
                    } else
                        a = new eK([tU(u, c)])
                } else
                    a = new eK([tp.of({
                        data: {}
                    })]),
                    e = this.prepareContext(e);
                var p = this.transform(t).clientQuery;
                return p && (a = eq(a, function(t) {
                    return o.localState.runResolvers({
                        document: p,
                        remoteResult: t,
                        context: e,
                        variables: n
                    })
                })),
                a
            }
            ,
            t.prototype.getResultsFromLink = function(t, e, n) {
                var r = t.lastRequestId = this.generateRequestId()
                  , i = this.cache.transformForLink(this.transform(t.document).document);
                return eq(this.getObservableFromLink(i, n.context, n.variables), function(a) {
                    var o = eU(a)
                      , s = o.length > 0;
                    if (r >= t.lastRequestId) {
                        if (s && "none" === n.errorPolicy)
                            throw t.markError(new t1({
                                graphQLErrors: o
                            }));
                        t.markResult(a, i, n, e),
                        t.markReady()
                    }
                    var l = {
                        data: a.data,
                        loading: !1,
                        networkStatus: f.ready
                    };
                    return s && "ignore" !== n.errorPolicy && (l.errors = o,
                    l.networkStatus = f.error),
                    l
                }, function(e) {
                    var n = e.hasOwnProperty("graphQLErrors") ? e : new t1({
                        networkError: e
                    });
                    throw r >= t.lastRequestId && t.markError(n),
                    n
                })
            }
            ,
            t.prototype.fetchQueryObservable = function(t, e, n) {
                return this.fetchConcastWithInfo(t, e, n).concast
            }
            ,
            t.prototype.fetchConcastWithInfo = function(t, e, n) {
                var r, i, a = this;
                void 0 === n && (n = f.loading);
                var o = this.transform(e.query).document
                  , s = this.getVariables(o, e.variables)
                  , l = this.getQuery(t)
                  , u = this.defaultOptions.watchQuery
                  , c = e.fetchPolicy
                  , h = void 0 === c ? u && u.fetchPolicy || "cache-first" : c
                  , d = e.errorPolicy
                  , p = void 0 === d ? u && u.errorPolicy || "none" : d
                  , m = e.returnPartialData
                  , y = e.notifyOnNetworkStatusChange
                  , g = e.context
                  , v = Object.assign({}, e, {
                    query: o,
                    variables: s,
                    fetchPolicy: h,
                    errorPolicy: p,
                    returnPartialData: void 0 !== m && m,
                    notifyOnNetworkStatusChange: void 0 !== y && y,
                    context: void 0 === g ? {} : g
                })
                  , _ = function(t) {
                    v.variables = t;
                    var r = a.fetchQueryByPolicy(l, v, n);
                    return "standby" !== v.fetchPolicy && r.sources.length > 0 && l.observableQuery && l.observableQuery.applyNextFetchPolicy("after-fetch", e),
                    r
                }
                  , b = function() {
                    return a.fetchCancelFns.delete(t)
                };
                if (this.fetchCancelFns.set(t, function(t) {
                    b(),
                    setTimeout(function() {
                        return r.cancel(t)
                    })
                }),
                this.transform(v.query).hasClientExports)
                    r = new eK(this.localState.addExportedVariables(v.query, v.variables, v.context).then(_).then(function(t) {
                        return t.sources
                    })),
                    i = !0;
                else {
                    var w = _(v.variables);
                    i = w.fromLink,
                    r = new eK(w.sources)
                }
                return r.promise.then(b, b),
                {
                    concast: r,
                    fromLink: i
                }
            }
            ,
            t.prototype.refetchQueries = function(t) {
                var e = this
                  , n = t.updateCache
                  , r = t.include
                  , i = t.optimistic
                  , a = void 0 !== i && i
                  , o = t.removeOptimistic
                  , s = void 0 === o ? a ? eY("refetchQueries") : void 0 : o
                  , l = t.onQueryUpdated
                  , u = new Map;
                r && this.getObservableQueries(r).forEach(function(t, n) {
                    u.set(n, {
                        oq: t,
                        lastDiff: e.getQuery(n).getDiff()
                    })
                });
                var c = new Map;
                return n && this.cache.batch({
                    update: n,
                    optimistic: a && s || !1,
                    removeOptimistic: s,
                    onWatchUpdated: function(t, e, n) {
                        var r = t.watcher instanceof nY && t.watcher.observableQuery;
                        if (r) {
                            if (l) {
                                u.delete(r.queryId);
                                var i = l(r, e, n);
                                return !0 === i && (i = r.refetch()),
                                !1 !== i && c.set(r, i),
                                i
                            }
                            null !== l && u.set(r.queryId, {
                                oq: r,
                                lastDiff: n,
                                diff: e
                            })
                        }
                    }
                }),
                u.size && u.forEach(function(t, n) {
                    var r, i = t.oq, a = t.lastDiff, o = t.diff;
                    if (l) {
                        if (!o) {
                            var s = i.queryInfo;
                            s.reset(),
                            o = s.getDiff()
                        }
                        r = l(i, o, a)
                    }
                    l && !0 !== r || (r = i.refetch()),
                    !1 !== r && c.set(i, r),
                    n.indexOf("legacyOneTimeQuery") >= 0 && e.stopQueryNoBroadcast(n)
                }),
                s && this.cache.removeOptimistic(s),
                c
            }
            ,
            t.prototype.fetchQueryByPolicy = function(t, e, n) {
                var r = this
                  , i = e.query
                  , a = e.variables
                  , o = e.fetchPolicy
                  , s = e.refetchWritePolicy
                  , l = e.errorPolicy
                  , u = e.returnPartialData
                  , c = e.context
                  , h = e.notifyOnNetworkStatusChange
                  , d = t.networkStatus;
                t.init({
                    document: this.transform(i).document,
                    variables: a,
                    networkStatus: n
                });
                var p = function() {
                    return t.getDiff(a)
                }
                  , m = function(e, n) {
                    void 0 === n && (n = t.networkStatus || f.loading);
                    var o = e.result;
                    !__DEV__ || u || eO(o, {}) || e7(e.missing);
                    var s = function(t) {
                        return tp.of(G({
                            data: t,
                            loading: e0(n),
                            networkStatus: n
                        }, e.complete ? null : {
                            partial: !0
                        }))
                    };
                    return o && r.transform(i).hasForcedResolvers ? r.localState.runResolvers({
                        document: i,
                        remoteResult: {
                            data: o
                        },
                        context: c,
                        variables: a,
                        onlyRunForcedResolvers: !0
                    }).then(function(t) {
                        return s(t.data || void 0)
                    }) : "none" === l && n === f.refetch && Array.isArray(e.missing) ? s(void 0) : s(o)
                }
                  , y = "no-cache" === o ? 0 : n === f.refetch && "merge" !== s ? 1 : 2
                  , g = function() {
                    return r.getResultsFromLink(t, y, {
                        variables: a,
                        context: c,
                        fetchPolicy: o,
                        errorPolicy: l
                    })
                }
                  , v = h && "number" == typeof d && d !== n && e0(n);
                switch (o) {
                default:
                case "cache-first":
                    var _ = p();
                    if (_.complete)
                        return {
                            fromLink: !1,
                            sources: [m(_, t.markReady())]
                        };
                    if (u || v)
                        return {
                            fromLink: !0,
                            sources: [m(_), g()]
                        };
                    return {
                        fromLink: !0,
                        sources: [g()]
                    };
                case "cache-and-network":
                    var _ = p();
                    if (_.complete || u || v)
                        return {
                            fromLink: !0,
                            sources: [m(_), g()]
                        };
                    return {
                        fromLink: !0,
                        sources: [g()]
                    };
                case "cache-only":
                    return {
                        fromLink: !1,
                        sources: [m(p(), t.markReady())]
                    };
                case "network-only":
                    if (v)
                        return {
                            fromLink: !0,
                            sources: [m(p()), g()]
                        };
                    return {
                        fromLink: !0,
                        sources: [g()]
                    };
                case "no-cache":
                    if (v)
                        return {
                            fromLink: !0,
                            sources: [m(t.getDiff()), g()]
                        };
                    return {
                        fromLink: !0,
                        sources: [g()]
                    };
                case "standby":
                    return {
                        fromLink: !1,
                        sources: []
                    }
                }
            }
            ,
            t.prototype.getQuery = function(t) {
                return t && !this.queries.has(t) && this.queries.set(t, new nY(this,t)),
                this.queries.get(t)
            }
            ,
            t.prototype.prepareContext = function(t) {
                return void 0 === t && (t = {}),
                G(G({}, this.localState.prepareContext(t)), {
                    clientAwareness: this.clientAwareness
                })
            }
            ,
            t
        }();
        function nK(t, e) {
            return e5(t, e, e.variables && {
                variables: G(G({}, t && t.variables), e.variables)
            })
        }
        var n0 = !1
          , n1 = function() {
            function t(t) {
                var e = this;
                this.resetStoreCallbacks = [],
                this.clearStoreCallbacks = [];
                var n = t.uri
                  , r = t.credentials
                  , i = t.headers
                  , a = t.cache
                  , o = t.ssrMode
                  , s = void 0 !== o && o
                  , l = t.ssrForceFetchDelay
                  , u = void 0 === l ? 0 : l
                  , c = t.connectToDevTools
                  , h = void 0 === c ? "object" == typeof window && !window.__APOLLO_CLIENT__ && __DEV__ : c
                  , d = t.queryDeduplication
                  , f = void 0 === d || d
                  , p = t.defaultOptions
                  , m = t.assumeImmutableResults
                  , y = t.resolvers
                  , g = t.typeDefs
                  , v = t.fragmentMatcher
                  , _ = t.name
                  , S = t.version
                  , k = t.link;
                if (k || (k = n ? new eS({
                    uri: n,
                    credentials: r,
                    headers: i
                }) : tq.empty()),
                !a)
                    throw __DEV__ ? new b("To initialize Apollo Client, you must specify a 'cache' property in the options object. \nFor more information, please visit: https://go.apollo.dev/c/docs") : new b(9);
                if (this.link = k,
                this.cache = a,
                this.disableNetworkFetches = s || u > 0,
                this.queryDeduplication = f,
                this.defaultOptions = p || Object.create(null),
                this.typeDefs = g,
                u && setTimeout(function() {
                    return e.disableNetworkFetches = !1
                }, u),
                this.watchQuery = this.watchQuery.bind(this),
                this.query = this.query.bind(this),
                this.mutate = this.mutate.bind(this),
                this.resetStore = this.resetStore.bind(this),
                this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this),
                h && "object" == typeof window && (window.__APOLLO_CLIENT__ = this),
                !n0 && h && __DEV__ && (n0 = !0,
                "undefined" != typeof window && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__)) {
                    var x = window.navigator
                      , E = x && x.userAgent
                      , T = void 0;
                    "string" == typeof E && (E.indexOf("Chrome/") > -1 ? T = "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm" : E.indexOf("Firefox/") > -1 && (T = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")),
                    T && __DEV__ && w.log("Download the Apollo DevTools for a better development experience: " + T)
                }
                this.version = "3.7.17",
                this.localState = new nW({
                    cache: a,
                    client: this,
                    resolvers: y,
                    fragmentMatcher: v
                }),
                this.queryManager = new nX({
                    cache: this.cache,
                    link: this.link,
                    defaultOptions: this.defaultOptions,
                    queryDeduplication: f,
                    ssrMode: s,
                    clientAwareness: {
                        name: _,
                        version: S
                    },
                    localState: this.localState,
                    assumeImmutableResults: void 0 !== m && m,
                    onBroadcast: h ? function() {
                        e.devToolsHookCb && e.devToolsHookCb({
                            action: {},
                            state: {
                                queries: e.queryManager.getQueryStore(),
                                mutations: e.queryManager.mutationStore || {}
                            },
                            dataWithOptimisticResults: e.cache.extract(!0)
                        })
                    }
                    : void 0
                })
            }
            return t.prototype.stop = function() {
                this.queryManager.stop()
            }
            ,
            t.prototype.watchQuery = function(t) {
                return this.defaultOptions.watchQuery && (t = nK(this.defaultOptions.watchQuery, t)),
                this.disableNetworkFetches && ("network-only" === t.fetchPolicy || "cache-and-network" === t.fetchPolicy) && (t = G(G({}, t), {
                    fetchPolicy: "cache-first"
                })),
                this.queryManager.watchQuery(t)
            }
            ,
            t.prototype.query = function(t) {
                return this.defaultOptions.query && (t = nK(this.defaultOptions.query, t)),
                __DEV__ ? w("cache-and-network" !== t.fetchPolicy, "The cache-and-network fetchPolicy does not work with client.query, because client.query can only return a single result. Please use client.watchQuery to receive multiple results from the cache and the network, or consider using a different fetchPolicy, such as cache-first or network-only.") : w("cache-and-network" !== t.fetchPolicy, 10),
                this.disableNetworkFetches && "network-only" === t.fetchPolicy && (t = G(G({}, t), {
                    fetchPolicy: "cache-first"
                })),
                this.queryManager.query(t)
            }
            ,
            t.prototype.mutate = function(t) {
                return this.defaultOptions.mutate && (t = nK(this.defaultOptions.mutate, t)),
                this.queryManager.mutate(t)
            }
            ,
            t.prototype.subscribe = function(t) {
                return this.queryManager.startGraphQLSubscription(t)
            }
            ,
            t.prototype.readQuery = function(t, e) {
                return void 0 === e && (e = !1),
                this.cache.readQuery(t, e)
            }
            ,
            t.prototype.readFragment = function(t, e) {
                return void 0 === e && (e = !1),
                this.cache.readFragment(t, e)
            }
            ,
            t.prototype.writeQuery = function(t) {
                var e = this.cache.writeQuery(t);
                return !1 !== t.broadcast && this.queryManager.broadcastQueries(),
                e
            }
            ,
            t.prototype.writeFragment = function(t) {
                var e = this.cache.writeFragment(t);
                return !1 !== t.broadcast && this.queryManager.broadcastQueries(),
                e
            }
            ,
            t.prototype.__actionHookForDevTools = function(t) {
                this.devToolsHookCb = t
            }
            ,
            t.prototype.__requestRaw = function(t) {
                return tU(this.link, t)
            }
            ,
            t.prototype.resetStore = function() {
                var t = this;
                return Promise.resolve().then(function() {
                    return t.queryManager.clearStore({
                        discardWatches: !1
                    })
                }).then(function() {
                    return Promise.all(t.resetStoreCallbacks.map(function(t) {
                        return t()
                    }))
                }).then(function() {
                    return t.reFetchObservableQueries()
                })
            }
            ,
            t.prototype.clearStore = function() {
                var t = this;
                return Promise.resolve().then(function() {
                    return t.queryManager.clearStore({
                        discardWatches: !0
                    })
                }).then(function() {
                    return Promise.all(t.clearStoreCallbacks.map(function(t) {
                        return t()
                    }))
                })
            }
            ,
            t.prototype.onResetStore = function(t) {
                var e = this;
                return this.resetStoreCallbacks.push(t),
                function() {
                    e.resetStoreCallbacks = e.resetStoreCallbacks.filter(function(e) {
                        return e !== t
                    })
                }
            }
            ,
            t.prototype.onClearStore = function(t) {
                var e = this;
                return this.clearStoreCallbacks.push(t),
                function() {
                    e.clearStoreCallbacks = e.clearStoreCallbacks.filter(function(e) {
                        return e !== t
                    })
                }
            }
            ,
            t.prototype.reFetchObservableQueries = function(t) {
                return this.queryManager.reFetchObservableQueries(t)
            }
            ,
            t.prototype.refetchQueries = function(t) {
                var e = this.queryManager.refetchQueries(t)
                  , n = []
                  , r = [];
                e.forEach(function(t, e) {
                    n.push(e),
                    r.push(t)
                });
                var i = Promise.all(r);
                return i.queries = n,
                i.results = r,
                i.catch(function(t) {
                    __DEV__ && w.debug("In client.refetchQueries, Promise.all promise rejected with error ".concat(t))
                }),
                i
            }
            ,
            t.prototype.getObservableQueries = function(t) {
                return void 0 === t && (t = "active"),
                this.queryManager.getObservableQueries(t)
            }
            ,
            t.prototype.extract = function(t) {
                return this.cache.extract(t)
            }
            ,
            t.prototype.restore = function(t) {
                return this.cache.restore(t)
            }
            ,
            t.prototype.addResolvers = function(t) {
                this.localState.addResolvers(t)
            }
            ,
            t.prototype.setResolvers = function(t) {
                this.localState.setResolvers(t)
            }
            ,
            t.prototype.getResolvers = function() {
                return this.localState.getResolvers()
            }
            ,
            t.prototype.setLocalStateFragmentMatcher = function(t) {
                this.localState.setFragmentMatcher(t)
            }
            ,
            t.prototype.setLink = function(t) {
                this.link = this.queryManager.link = t
            }
            ,
            t
        }()
          , n2 = function() {
            function t() {
                this.getFragmentDoc = nV(ty)
            }
            return t.prototype.batch = function(t) {
                var e, n = this, r = "string" == typeof t.optimistic ? t.optimistic : !1 === t.optimistic ? null : void 0;
                return this.performTransaction(function() {
                    return e = t.update(n)
                }, r),
                e
            }
            ,
            t.prototype.recordOptimisticTransaction = function(t, e) {
                this.performTransaction(t, e)
            }
            ,
            t.prototype.transformDocument = function(t) {
                return t
            }
            ,
            t.prototype.transformForLink = function(t) {
                return t
            }
            ,
            t.prototype.identify = function(t) {}
            ,
            t.prototype.gc = function() {
                return []
            }
            ,
            t.prototype.modify = function(t) {
                return !1
            }
            ,
            t.prototype.readQuery = function(t, e) {
                return void 0 === e && (e = !!t.optimistic),
                this.read(G(G({}, t), {
                    rootId: t.id || "ROOT_QUERY",
                    optimistic: e
                }))
            }
            ,
            t.prototype.readFragment = function(t, e) {
                return void 0 === e && (e = !!t.optimistic),
                this.read(G(G({}, t), {
                    query: this.getFragmentDoc(t.fragment, t.fragmentName),
                    rootId: t.id,
                    optimistic: e
                }))
            }
            ,
            t.prototype.writeQuery = function(t) {
                var e = t.id
                  , n = t.data
                  , r = W(t, ["id", "data"]);
                return this.write(Object.assign(r, {
                    dataId: e || "ROOT_QUERY",
                    result: n
                }))
            }
            ,
            t.prototype.writeFragment = function(t) {
                var e = t.id
                  , n = t.data
                  , r = t.fragment
                  , i = t.fragmentName
                  , a = W(t, ["id", "data", "fragment", "fragmentName"]);
                return this.write(Object.assign(a, {
                    query: this.getFragmentDoc(r, i),
                    dataId: e,
                    result: n
                }))
            }
            ,
            t.prototype.updateQuery = function(t, e) {
                return this.batch({
                    update: function(n) {
                        var r = n.readQuery(t)
                          , i = e(r);
                        return null == i ? r : (n.writeQuery(G(G({}, t), {
                            data: i
                        })),
                        i)
                    }
                })
            }
            ,
            t.prototype.updateFragment = function(t, e) {
                return this.batch({
                    update: function(n) {
                        var r = n.readFragment(t)
                          , i = e(r);
                        return null == i ? r : (n.writeFragment(G(G({}, t), {
                            data: i
                        })),
                        i)
                    }
                })
            }
            ,
            t
        }()
          , n5 = function(t) {
            function e(n, r, i, a) {
                var o, s = t.call(this, n) || this;
                if (s.message = n,
                s.path = r,
                s.query = i,
                s.variables = a,
                Array.isArray(s.path)) {
                    s.missing = s.message;
                    for (var l = s.path.length - 1; l >= 0; --l)
                        s.missing = ((o = {})[s.path[l]] = s.missing,
                        o)
                } else
                    s.missing = s.path;
                return s.__proto__ = e.prototype,
                s
            }
            return B(e, t),
            e
        }(Error);
        function n3(t) {
            if (__DEV__) {
                var e;
                (e = new Set([t])).forEach(function(t) {
                    tm(t) && function(t) {
                        if (__DEV__ && !Object.isFrozen(t))
                            try {
                                Object.freeze(t)
                            } catch (t) {
                                if (t instanceof TypeError)
                                    return null;
                                throw t
                            }
                        return t
                    }(t) === t && Object.getOwnPropertyNames(t).forEach(function(n) {
                        tm(t[n]) && e.add(t[n])
                    })
                })
            }
            return t
        }
        var n6 = Object.prototype.hasOwnProperty;
        function n4(t) {
            return null == t
        }
        function n8(t, e) {
            var n = t.__typename
              , r = t.id
              , i = t._id;
            if ("string" == typeof n && (e && (e.keyObject = n4(r) ? n4(i) ? void 0 : {
                _id: i
            } : {
                id: r
            }),
            n4(r) && !n4(i) && (r = i),
            !n4(r)))
                return "".concat(n, ":").concat("number" == typeof r || "string" == typeof r ? r : JSON.stringify(r))
        }
        var n9 = {
            dataIdFromObject: n8,
            addTypename: !0,
            resultCaching: !0,
            canonizeResults: !1
        };
        function n7(t) {
            var e = t.canonizeResults;
            return void 0 === e ? n9.canonizeResults : e
        }
        var rt = /^[_a-z][_0-9a-z]*/i;
        function re(t) {
            var e = t.match(rt);
            return e ? e[0] : t
        }
        function rn(t) {
            return tm(t) && !tb(t) && !t2(t)
        }
        function rr(t, e) {
            var n = tg(tP(t));
            return {
                fragmentMap: n,
                lookupFragment: function(t) {
                    var r = n[t];
                    return !r && e && (r = e.lookup(t)),
                    r || null
                }
            }
        }
        var ri = Object.create(null)
          , ra = function() {
            return ri
        }
          , ro = Object.create(null)
          , rs = function() {
            function t(t, e) {
                var n = this;
                this.policies = t,
                this.group = e,
                this.data = Object.create(null),
                this.rootIds = Object.create(null),
                this.refs = Object.create(null),
                this.getFieldValue = function(t, e) {
                    return n3(tb(t) ? n.get(t.__ref, e) : t && t[e])
                }
                ,
                this.canRead = function(t) {
                    return tb(t) ? n.has(t.__ref) : "object" == typeof t
                }
                ,
                this.toReference = function(t, e) {
                    if ("string" == typeof t)
                        return t_(t);
                    if (tb(t))
                        return t;
                    var r = n.policies.identify(t)[0];
                    if (r) {
                        var i = t_(r);
                        return e && n.merge(r, t),
                        i
                    }
                }
            }
            return t.prototype.toObject = function() {
                return G({}, this.data)
            }
            ,
            t.prototype.has = function(t) {
                return void 0 !== this.lookup(t, !0)
            }
            ,
            t.prototype.get = function(t, e) {
                if (this.group.depend(t, e),
                n6.call(this.data, t)) {
                    var n = this.data[t];
                    if (n && n6.call(n, e))
                        return n[e]
                }
                return "__typename" === e && n6.call(this.policies.rootTypenamesById, t) ? this.policies.rootTypenamesById[t] : this instanceof rc ? this.parent.get(t, e) : void 0
            }
            ,
            t.prototype.lookup = function(t, e) {
                return (e && this.group.depend(t, "__exists"),
                n6.call(this.data, t)) ? this.data[t] : this instanceof rc ? this.parent.lookup(t, e) : this.policies.rootTypenamesById[t] ? Object.create(null) : void 0
            }
            ,
            t.prototype.merge = function(t, e) {
                var n, r = this;
                tb(t) && (t = t.__ref),
                tb(e) && (e = e.__ref);
                var i = "string" == typeof t ? this.lookup(n = t) : t
                  , a = "string" == typeof e ? this.lookup(n = e) : e;
                if (a) {
                    __DEV__ ? w("string" == typeof n, "store.merge expects a string ID") : w("string" == typeof n, 1);
                    var o = new t9(rd).merge(i, a);
                    if (this.data[n] = o,
                    o !== i && (delete this.refs[n],
                    this.group.caching)) {
                        var s = Object.create(null);
                        i || (s.__exists = 1),
                        Object.keys(a).forEach(function(t) {
                            if (!i || i[t] !== o[t]) {
                                s[t] = 1;
                                var e = re(t);
                                e === t || r.policies.hasKeyArgs(o.__typename, e) || (s[e] = 1),
                                void 0 !== o[t] || r instanceof rc || delete o[t]
                            }
                        }),
                        s.__typename && !(i && i.__typename) && this.policies.rootTypenamesById[n] === o.__typename && delete s.__typename,
                        Object.keys(s).forEach(function(t) {
                            return r.group.dirty(n, t)
                        })
                    }
                }
            }
            ,
            t.prototype.modify = function(t, e) {
                var n = this
                  , r = this.lookup(t);
                if (r) {
                    var i = Object.create(null)
                      , a = !1
                      , o = !0
                      , s = {
                        DELETE: ri,
                        INVALIDATE: ro,
                        isReference: tb,
                        toReference: this.toReference,
                        canRead: this.canRead,
                        readField: function(e, r) {
                            return n.policies.readField("string" == typeof e ? {
                                fieldName: e,
                                from: r || t_(t)
                            } : e, {
                                store: n
                            })
                        }
                    };
                    if (Object.keys(r).forEach(function(l) {
                        var u = re(l)
                          , c = r[l];
                        if (void 0 !== c) {
                            var h = "function" == typeof e ? e : e[l] || e[u];
                            if (h) {
                                var d = h === ra ? ri : h(n3(c), G(G({}, s), {
                                    fieldName: u,
                                    storeFieldName: l,
                                    storage: n.getStorage(t, l)
                                }));
                                d === ro ? n.group.dirty(t, l) : (d === ri && (d = void 0),
                                d !== c && (i[l] = d,
                                a = !0,
                                c = d))
                            }
                            void 0 !== c && (o = !1)
                        }
                    }),
                    a)
                        return this.merge(t, i),
                        o && (this instanceof rc ? this.data[t] = void 0 : delete this.data[t],
                        this.group.dirty(t, "__exists")),
                        !0
                }
                return !1
            }
            ,
            t.prototype.delete = function(t, e, n) {
                var r, i = this.lookup(t);
                if (i) {
                    var a = this.getFieldValue(i, "__typename")
                      , o = e && n ? this.policies.getStoreFieldName({
                        typename: a,
                        fieldName: e,
                        args: n
                    }) : e;
                    return this.modify(t, o ? ((r = {})[o] = ra,
                    r) : ra)
                }
                return !1
            }
            ,
            t.prototype.evict = function(t, e) {
                var n = !1;
                return t.id && (n6.call(this.data, t.id) && (n = this.delete(t.id, t.fieldName, t.args)),
                this instanceof rc && this !== e && (n = this.parent.evict(t, e) || n),
                (t.fieldName || n) && this.group.dirty(t.id, t.fieldName || "__exists")),
                n
            }
            ,
            t.prototype.clear = function() {
                this.replace(null)
            }
            ,
            t.prototype.extract = function() {
                var t = this
                  , e = this.toObject()
                  , n = [];
                return this.getRootIdSet().forEach(function(e) {
                    n6.call(t.policies.rootTypenamesById, e) || n.push(e)
                }),
                n.length && (e.__META = {
                    extraRootIds: n.sort()
                }),
                e
            }
            ,
            t.prototype.replace = function(t) {
                var e = this;
                if (Object.keys(this.data).forEach(function(n) {
                    t && n6.call(t, n) || e.delete(n)
                }),
                t) {
                    var n = t.__META
                      , r = W(t, ["__META"]);
                    Object.keys(r).forEach(function(t) {
                        e.merge(t, r[t])
                    }),
                    n && n.extraRootIds.forEach(this.retain, this)
                }
            }
            ,
            t.prototype.retain = function(t) {
                return this.rootIds[t] = (this.rootIds[t] || 0) + 1
            }
            ,
            t.prototype.release = function(t) {
                if (this.rootIds[t] > 0) {
                    var e = --this.rootIds[t];
                    return e || delete this.rootIds[t],
                    e
                }
                return 0
            }
            ,
            t.prototype.getRootIdSet = function(t) {
                return void 0 === t && (t = new Set),
                Object.keys(this.rootIds).forEach(t.add, t),
                this instanceof rc ? this.parent.getRootIdSet(t) : Object.keys(this.policies.rootTypenamesById).forEach(t.add, t),
                t
            }
            ,
            t.prototype.gc = function() {
                var t = this
                  , e = this.getRootIdSet()
                  , n = this.toObject();
                e.forEach(function(r) {
                    n6.call(n, r) && (Object.keys(t.findChildRefIds(r)).forEach(e.add, e),
                    delete n[r])
                });
                var r = Object.keys(n);
                if (r.length) {
                    for (var i = this; i instanceof rc; )
                        i = i.parent;
                    r.forEach(function(t) {
                        return i.delete(t)
                    })
                }
                return r
            }
            ,
            t.prototype.findChildRefIds = function(t) {
                if (!n6.call(this.refs, t)) {
                    var e = this.refs[t] = Object.create(null)
                      , n = this.data[t];
                    if (!n)
                        return e;
                    var r = new Set([n]);
                    r.forEach(function(t) {
                        tb(t) && (e[t.__ref] = !0),
                        tm(t) && Object.keys(t).forEach(function(e) {
                            var n = t[e];
                            tm(n) && r.add(n)
                        })
                    })
                }
                return this.refs[t]
            }
            ,
            t.prototype.makeCacheKey = function() {
                return this.group.keyMaker.lookupArray(arguments)
            }
            ,
            t
        }()
          , rl = function() {
            function t(t, e) {
                void 0 === e && (e = null),
                this.caching = t,
                this.parent = e,
                this.d = null,
                this.resetCaching()
            }
            return t.prototype.resetCaching = function() {
                this.d = this.caching ? nL() : null,
                this.keyMaker = new eL(M)
            }
            ,
            t.prototype.depend = function(t, e) {
                if (this.d) {
                    this.d(e + "#" + t);
                    var n = re(e);
                    n !== e && this.d(n + "#" + t),
                    this.parent && this.parent.depend(t, e)
                }
            }
            ,
            t.prototype.dirty = function(t, e) {
                this.d && this.d.dirty(e + "#" + t, "__exists" === e ? "forget" : "setDirty")
            }
            ,
            t
        }();
        function ru(t, e) {
            rf(t) && t.group.depend(e, "__exists")
        }
        l = function(t) {
            function e(e) {
                var n = e.policies
                  , r = e.resultCaching
                  , i = e.seed
                  , a = t.call(this, n, new rl(void 0 === r || r)) || this;
                return a.stump = new rh(a),
                a.storageTrie = new eL(M),
                i && a.replace(i),
                a
            }
            return B(e, t),
            e.prototype.addLayer = function(t, e) {
                return this.stump.addLayer(t, e)
            }
            ,
            e.prototype.removeLayer = function() {
                return this
            }
            ,
            e.prototype.getStorage = function() {
                return this.storageTrie.lookupArray(arguments)
            }
            ,
            e
        }(s = rs || (rs = {})),
        s.Root = l;
        var rc = function(t) {
            function e(e, n, r, i) {
                var a = t.call(this, n.policies, i) || this;
                return a.id = e,
                a.parent = n,
                a.replay = r,
                a.group = i,
                r(a),
                a
            }
            return B(e, t),
            e.prototype.addLayer = function(t, n) {
                return new e(t,this,n,this.group)
            }
            ,
            e.prototype.removeLayer = function(t) {
                var e = this
                  , n = this.parent.removeLayer(t);
                return t === this.id ? (this.group.caching && Object.keys(this.data).forEach(function(t) {
                    var r = e.data[t]
                      , i = n.lookup(t);
                    i ? r ? r !== i && Object.keys(r).forEach(function(n) {
                        eO(r[n], i[n]) || e.group.dirty(t, n)
                    }) : (e.group.dirty(t, "__exists"),
                    Object.keys(i).forEach(function(n) {
                        e.group.dirty(t, n)
                    })) : e.delete(t)
                }),
                n) : n === this.parent ? this : n.addLayer(this.id, this.replay)
            }
            ,
            e.prototype.toObject = function() {
                return G(G({}, this.parent.toObject()), this.data)
            }
            ,
            e.prototype.findChildRefIds = function(e) {
                var n = this.parent.findChildRefIds(e);
                return n6.call(this.data, e) ? G(G({}, n), t.prototype.findChildRefIds.call(this, e)) : n
            }
            ,
            e.prototype.getStorage = function() {
                for (var t = this.parent; t.parent; )
                    t = t.parent;
                return t.getStorage.apply(t, arguments)
            }
            ,
            e
        }(rs)
          , rh = function(t) {
            function e(e) {
                return t.call(this, "EntityStore.Stump", e, function() {}, new rl(e.group.caching,e.group)) || this
            }
            return B(e, t),
            e.prototype.removeLayer = function() {
                return this
            }
            ,
            e.prototype.merge = function() {
                return this.parent.merge.apply(this.parent, arguments)
            }
            ,
            e
        }(rc);
        function rd(t, e, n) {
            var r = t[n]
              , i = e[n];
            return eO(r, i) ? r : i
        }
        function rf(t) {
            return !!(t instanceof rs && t.group.caching)
        }
        function rp(t) {
            return [t.selectionSet, t.objectOrReference, t.context, t.context.canonizeResults]
        }
        var rm = function() {
            function t(t) {
                var e = this;
                this.knownResults = new (M ? WeakMap : Map),
                this.config = e5(t, {
                    addTypename: !1 !== t.addTypename,
                    canonizeResults: n7(t)
                }),
                this.canon = t.canon || new eF,
                this.executeSelectionSet = nV(function(t) {
                    var n, r = t.context.canonizeResults, i = rp(t);
                    i[3] = !r;
                    var a = (n = e.executeSelectionSet).peek.apply(n, i);
                    return a ? r ? G(G({}, a), {
                        result: e.canon.admit(a.result)
                    }) : a : (ru(t.context.store, t.enclosingRef.__ref),
                    e.execSelectionSetImpl(t))
                }, {
                    max: this.config.resultCacheMaxSize,
                    keyArgs: rp,
                    makeCacheKey: function(t, e, n, r) {
                        if (rf(n.store))
                            return n.store.makeCacheKey(t, tb(e) ? e.__ref : e, n.varString, r)
                    }
                }),
                this.executeSubSelectedArray = nV(function(t) {
                    return ru(t.context.store, t.enclosingRef.__ref),
                    e.execSubSelectedArrayImpl(t)
                }, {
                    max: this.config.resultCacheMaxSize,
                    makeCacheKey: function(t) {
                        var e = t.field
                          , n = t.array
                          , r = t.context;
                        if (rf(r.store))
                            return r.store.makeCacheKey(e, n, r.varString)
                    }
                })
            }
            return t.prototype.resetCanon = function() {
                this.canon = new eF
            }
            ,
            t.prototype.diffQueryAgainstStore = function(t) {
                var e, n = t.store, r = t.query, i = t.rootId, a = void 0 === i ? "ROOT_QUERY" : i, o = t.variables, s = t.returnPartialData, l = t.canonizeResults, u = void 0 === l ? this.config.canonizeResults : l, c = this.config.cache.policies;
                o = G(G({}, tL(tM(r))), o);
                var h = t_(a)
                  , d = this.executeSelectionSet({
                    selectionSet: tN(r).selectionSet,
                    objectOrReference: h,
                    enclosingRef: h,
                    context: G({
                        store: n,
                        query: r,
                        policies: c,
                        variables: o,
                        varString: eV(o),
                        canonizeResults: u
                    }, rr(r, this.config.fragments))
                });
                if (d.missing && (e = [new n5(function(t) {
                    try {
                        JSON.stringify(t, function(t, e) {
                            if ("string" == typeof e)
                                throw e;
                            return e
                        })
                    } catch (t) {
                        return t
                    }
                }(d.missing),d.missing,r,o)],
                !(void 0 === s || s)))
                    throw e[0];
                return {
                    result: d.result,
                    complete: !e,
                    missing: e
                }
            }
            ,
            t.prototype.isFresh = function(t, e, n, r) {
                if (rf(r.store) && this.knownResults.get(t) === n) {
                    var i = this.executeSelectionSet.peek(n, e, r, this.canon.isKnown(t));
                    if (i && t === i.result)
                        return !0
                }
                return !1
            }
            ,
            t.prototype.execSelectionSetImpl = function(t) {
                var e, n = this, r = t.selectionSet, i = t.objectOrReference, a = t.enclosingRef, o = t.context;
                if (tb(i) && !o.policies.rootTypenamesById[i.__ref] && !o.store.has(i.__ref))
                    return {
                        result: this.canon.empty,
                        missing: "Dangling reference to missing ".concat(i.__ref, " object")
                    };
                var s = o.variables
                  , l = o.policies
                  , u = o.store.getFieldValue(i, "__typename")
                  , h = []
                  , d = new t9;
                function f(t, n) {
                    var r;
                    return t.missing && (e = d.merge(e, ((r = {})[n] = t.missing,
                    r))),
                    t.result
                }
                this.config.addTypename && "string" == typeof u && !l.rootIdsByTypename[u] && h.push({
                    __typename: u
                });
                var p = new Set(r.selections);
                p.forEach(function(t) {
                    var r, m;
                    if (t$(t, s)) {
                        if (tA(t)) {
                            var y = l.readField({
                                fieldName: t.name.value,
                                field: t,
                                variables: o.variables,
                                from: i
                            }, o)
                              , g = tO(t);
                            void 0 === y ? eH.added(t) || (e = d.merge(e, ((r = {})[g] = "Can't find field '".concat(t.name.value, "' on ").concat(tb(i) ? i.__ref + " object" : "object " + JSON.stringify(i, null, 2)),
                            r))) : t2(y) ? y = f(n.executeSubSelectedArray({
                                field: t,
                                array: y,
                                enclosingRef: a,
                                context: o
                            }), g) : t.selectionSet ? null != y && (y = f(n.executeSelectionSet({
                                selectionSet: t.selectionSet,
                                objectOrReference: y,
                                enclosingRef: tb(y) ? y : a,
                                context: o
                            }), g)) : o.canonizeResults && (y = n.canon.pass(y)),
                            void 0 !== y && h.push(((m = {})[g] = y,
                            m))
                        } else {
                            var v = tv(t, o.lookupFragment);
                            if (!v && t.kind === c.FRAGMENT_SPREAD)
                                throw __DEV__ ? new b("No fragment named ".concat(t.name.value)) : new b(5);
                            v && l.fragmentMatches(v, u) && v.selectionSet.selections.forEach(p.add, p)
                        }
                    }
                });
                var m = {
                    result: t4(h),
                    missing: e
                }
                  , y = o.canonizeResults ? this.canon.admit(m) : n3(m);
                return y.result && this.knownResults.set(y.result, r),
                y
            }
            ,
            t.prototype.execSubSelectedArrayImpl = function(t) {
                var e, n = this, r = t.field, i = t.array, a = t.enclosingRef, o = t.context, s = new t9;
                function l(t, n) {
                    var r;
                    return t.missing && (e = s.merge(e, ((r = {})[n] = t.missing,
                    r))),
                    t.result
                }
                return r.selectionSet && (i = i.filter(o.store.canRead)),
                i = i.map(function(t, e) {
                    return null === t ? null : t2(t) ? l(n.executeSubSelectedArray({
                        field: r,
                        array: t,
                        enclosingRef: a,
                        context: o
                    }), e) : r.selectionSet ? l(n.executeSelectionSet({
                        selectionSet: r.selectionSet,
                        objectOrReference: t,
                        enclosingRef: tb(t) ? t : a,
                        context: o
                    }), e) : (__DEV__ && function(t, e, n) {
                        if (!e.selectionSet) {
                            var r = new Set([n]);
                            r.forEach(function(n) {
                                tm(n) && (__DEV__ ? w(!tb(n), "Missing selection set for object of type ".concat(tb(n) ? t.get(n.__ref, "__typename") : n && n.__typename, " returned for query field ").concat(e.name.value)) : w(!tb(n), 6),
                                Object.values(n).forEach(r.add, r))
                            })
                        }
                    }(o.store, r, t),
                    t)
                }),
                {
                    result: o.canonizeResults ? this.canon.admit(i) : i,
                    missing: e
                }
            }
            ,
            t
        }()
          , ry = Object.create(null);
        function rg(t) {
            var e = JSON.stringify(t);
            return ry[e] || (ry[e] = Object.create(null))
        }
        function rv(t) {
            var e = rg(t);
            return e.keyFieldsFn || (e.keyFieldsFn = function(e, n) {
                var r = function(t, e) {
                    return n.readField(e, t)
                }
                  , i = n.keyObject = rb(t, function(t) {
                    var i = rS(n.storeObject, t, r);
                    return void 0 === i && e !== n.storeObject && n6.call(e, t[0]) && (i = rS(e, t, rw)),
                    __DEV__ ? w(void 0 !== i, "Missing field '".concat(t.join("."), "' while extracting keyFields from ").concat(JSON.stringify(e))) : w(void 0 !== i, 2),
                    i
                });
                return "".concat(n.typename, ":").concat(JSON.stringify(i))
            }
            )
        }
        function r_(t) {
            var e = rg(t);
            return e.keyArgsFn || (e.keyArgsFn = function(e, n) {
                var r = n.field
                  , i = n.variables
                  , a = n.fieldName
                  , o = JSON.stringify(rb(t, function(t) {
                    var n = t[0]
                      , a = n.charAt(0);
                    if ("@" === a) {
                        if (r && t5(r.directives)) {
                            var o = n.slice(1)
                              , s = r.directives.find(function(t) {
                                return t.name.value === o
                            })
                              , l = s && tT(s, i);
                            return l && rS(l, t.slice(1))
                        }
                        return
                    }
                    if ("$" === a) {
                        var u = n.slice(1);
                        if (i && n6.call(i, u)) {
                            var c = t.slice(0);
                            return c[0] = u,
                            rS(i, c)
                        }
                        return
                    }
                    if (e)
                        return rS(e, t)
                }));
                return (e || "{}" !== o) && (a += ":" + o),
                a
            }
            )
        }
        function rb(t, e) {
            var n = new t9;
            return (function t(e) {
                var n = rg(e);
                if (!n.paths) {
                    var r = n.paths = []
                      , i = [];
                    e.forEach(function(n, a) {
                        t2(n) ? (t(n).forEach(function(t) {
                            return r.push(i.concat(t))
                        }),
                        i.length = 0) : (i.push(n),
                        t2(e[a + 1]) || (r.push(i.slice(0)),
                        i.length = 0))
                    })
                }
                return n.paths
            }
            )(t).reduce(function(t, r) {
                var i, a = e(r);
                if (void 0 !== a) {
                    for (var o = r.length - 1; o >= 0; --o)
                        (i = {})[r[o]] = a,
                        a = i;
                    t = n.merge(t, a)
                }
                return t
            }, Object.create(null))
        }
        function rw(t, e) {
            return t[e]
        }
        function rS(t, e, n) {
            return n = n || rw,
            function t(e) {
                return tm(e) ? t2(e) ? e.map(t) : rb(Object.keys(e).sort(), function(t) {
                    return rS(e, t)
                }) : e
            }(e.reduce(function t(e, r) {
                return t2(e) ? e.map(function(e) {
                    return t(e, r)
                }) : e && n(e, r)
            }, t))
        }
        function rk(t) {
            return void 0 !== t.args ? t.args : t.field ? tT(t.field, t.variables) : null
        }
        tk.setStringify(eV);
        var rx = function() {}
          , rE = function(t, e) {
            return e.fieldName
        }
          , rT = function(t, e, n) {
            return (0,
            n.mergeObjects)(t, e)
        }
          , rO = function(t, e) {
            return e
        }
          , rC = function() {
            function t(t) {
                this.config = t,
                this.typePolicies = Object.create(null),
                this.toBeAdded = Object.create(null),
                this.supertypeMap = new Map,
                this.fuzzySubtypes = new Map,
                this.rootIdsByTypename = Object.create(null),
                this.rootTypenamesById = Object.create(null),
                this.usingPossibleTypes = !1,
                this.config = G({
                    dataIdFromObject: n8
                }, t),
                this.cache = this.config.cache,
                this.setRootTypename("Query"),
                this.setRootTypename("Mutation"),
                this.setRootTypename("Subscription"),
                t.possibleTypes && this.addPossibleTypes(t.possibleTypes),
                t.typePolicies && this.addTypePolicies(t.typePolicies)
            }
            return t.prototype.identify = function(t, e) {
                var n, r, i = this, a = e && (e.typename || (null === (n = e.storeObject) || void 0 === n ? void 0 : n.__typename)) || t.__typename;
                if (a === this.rootTypenamesById.ROOT_QUERY)
                    return ["ROOT_QUERY"];
                for (var o = e && e.storeObject || t, s = G(G({}, e), {
                    typename: a,
                    storeObject: o,
                    readField: e && e.readField || function() {
                        var t = rR(arguments, o);
                        return i.readField(t, {
                            store: i.cache.data,
                            variables: t.variables
                        })
                    }
                }), l = a && this.getTypePolicy(a), u = l && l.keyFn || this.config.dataIdFromObject; u; ) {
                    var c = u(G(G({}, t), o), s);
                    if (t2(c))
                        u = rv(c);
                    else {
                        r = c;
                        break
                    }
                }
                return r = r ? String(r) : void 0,
                s.keyObject ? [r, s.keyObject] : [r]
            }
            ,
            t.prototype.addTypePolicies = function(t) {
                var e = this;
                Object.keys(t).forEach(function(n) {
                    var r = t[n]
                      , i = r.queryType
                      , a = r.mutationType
                      , o = r.subscriptionType
                      , s = W(r, ["queryType", "mutationType", "subscriptionType"]);
                    i && e.setRootTypename("Query", n),
                    a && e.setRootTypename("Mutation", n),
                    o && e.setRootTypename("Subscription", n),
                    n6.call(e.toBeAdded, n) ? e.toBeAdded[n].push(s) : e.toBeAdded[n] = [s]
                })
            }
            ,
            t.prototype.updateTypePolicy = function(t, e) {
                var n = this
                  , r = this.getTypePolicy(t)
                  , i = e.keyFields
                  , a = e.fields;
                function o(t, e) {
                    t.merge = "function" == typeof e ? e : !0 === e ? rT : !1 === e ? rO : t.merge
                }
                o(r, e.merge),
                r.keyFn = !1 === i ? rx : t2(i) ? rv(i) : "function" == typeof i ? i : r.keyFn,
                a && Object.keys(a).forEach(function(e) {
                    var r = n.getFieldPolicy(t, e, !0)
                      , i = a[e];
                    if ("function" == typeof i)
                        r.read = i;
                    else {
                        var s = i.keyArgs
                          , l = i.read
                          , u = i.merge;
                        r.keyFn = !1 === s ? rE : t2(s) ? r_(s) : "function" == typeof s ? s : r.keyFn,
                        "function" == typeof l && (r.read = l),
                        o(r, u)
                    }
                    r.read && r.merge && (r.keyFn = r.keyFn || rE)
                })
            }
            ,
            t.prototype.setRootTypename = function(t, e) {
                void 0 === e && (e = t);
                var n = "ROOT_" + t.toUpperCase()
                  , r = this.rootTypenamesById[n];
                e !== r && (__DEV__ ? w(!r || r === t, "Cannot change root ".concat(t, " __typename more than once")) : w(!r || r === t, 3),
                r && delete this.rootIdsByTypename[r],
                this.rootIdsByTypename[e] = n,
                this.rootTypenamesById[n] = e)
            }
            ,
            t.prototype.addPossibleTypes = function(t) {
                var e = this;
                this.usingPossibleTypes = !0,
                Object.keys(t).forEach(function(n) {
                    e.getSupertypeSet(n, !0),
                    t[n].forEach(function(t) {
                        e.getSupertypeSet(t, !0).add(n);
                        var r = t.match(rt);
                        r && r[0] === t || e.fuzzySubtypes.set(t, new RegExp(t))
                    })
                })
            }
            ,
            t.prototype.getTypePolicy = function(t) {
                var e = this;
                if (!n6.call(this.typePolicies, t)) {
                    var n = this.typePolicies[t] = Object.create(null);
                    n.fields = Object.create(null);
                    var r = this.supertypeMap.get(t);
                    r && r.size && r.forEach(function(t) {
                        var r = e.getTypePolicy(t)
                          , i = r.fields;
                        Object.assign(n, W(r, ["fields"])),
                        Object.assign(n.fields, i)
                    })
                }
                var i = this.toBeAdded[t];
                return i && i.length && i.splice(0).forEach(function(n) {
                    e.updateTypePolicy(t, n)
                }),
                this.typePolicies[t]
            }
            ,
            t.prototype.getFieldPolicy = function(t, e, n) {
                if (t) {
                    var r = this.getTypePolicy(t).fields;
                    return r[e] || n && (r[e] = Object.create(null))
                }
            }
            ,
            t.prototype.getSupertypeSet = function(t, e) {
                var n = this.supertypeMap.get(t);
                return !n && e && this.supertypeMap.set(t, n = new Set),
                n
            }
            ,
            t.prototype.fragmentMatches = function(t, e, n, r) {
                var i = this;
                if (!t.typeCondition)
                    return !0;
                if (!e)
                    return !1;
                var a = t.typeCondition.name.value;
                if (e === a)
                    return !0;
                if (this.usingPossibleTypes && this.supertypeMap.has(a))
                    for (var o = this.getSupertypeSet(e, !0), s = [o], l = function(t) {
                        var e = i.getSupertypeSet(t, !1);
                        e && e.size && 0 > s.indexOf(e) && s.push(e)
                    }, u = !!(n && this.fuzzySubtypes.size), c = !1, h = 0; h < s.length; ++h) {
                        var d = s[h];
                        if (d.has(a))
                            return o.has(a) || (c && __DEV__ && w.warn("Inferring subtype ".concat(e, " of supertype ").concat(a)),
                            o.add(a)),
                            !0;
                        d.forEach(l),
                        u && h === s.length - 1 && function t(e, n, r) {
                            return !!tm(n) && (t2(n) ? n.every(function(n) {
                                return t(e, n, r)
                            }) : e.selections.every(function(e) {
                                if (tA(e) && t$(e, r)) {
                                    var i = tO(e);
                                    return n6.call(n, i) && (!e.selectionSet || t(e.selectionSet, n[i], r))
                                }
                                return !0
                            }))
                        }(t.selectionSet, n, r) && (u = !1,
                        c = !0,
                        this.fuzzySubtypes.forEach(function(t, n) {
                            var r = e.match(t);
                            r && r[0] === e && l(n)
                        }))
                    }
                return !1
            }
            ,
            t.prototype.hasKeyArgs = function(t, e) {
                var n = this.getFieldPolicy(t, e, !1);
                return !!(n && n.keyFn)
            }
            ,
            t.prototype.getStoreFieldName = function(t) {
                var e, n, r, i, a, o = t.typename, s = t.fieldName, l = this.getFieldPolicy(o, s, !1), u = l && l.keyFn;
                if (u && o)
                    for (var c = {
                        typename: o,
                        fieldName: s,
                        field: t.field || null,
                        variables: t.variables
                    }, h = rk(t); u; ) {
                        var d = u(h, c);
                        if (t2(d))
                            u = r_(d);
                        else {
                            a = d || s;
                            break
                        }
                    }
                return void 0 === a && (a = t.field ? (e = t.field,
                n = t.variables,
                r = null,
                e.directives && (r = {},
                e.directives.forEach(function(t) {
                    r[t.name.value] = {},
                    t.arguments && t.arguments.forEach(function(e) {
                        var i = e.name
                          , a = e.value;
                        return tw(r[t.name.value], i, a, n)
                    })
                })),
                i = null,
                e.arguments && e.arguments.length && (i = {},
                e.arguments.forEach(function(t) {
                    return tw(i, t.name, t.value, n)
                })),
                tk(e.name.value, i, r)) : tk(s, rk(t))),
                !1 === a ? s : s === re(a) ? a : s + ":" + a
            }
            ,
            t.prototype.readField = function(t, e) {
                var n = t.from;
                if (n && (t.field || t.fieldName)) {
                    if (void 0 === t.typename) {
                        var r = e.store.getFieldValue(n, "__typename");
                        r && (t.typename = r)
                    }
                    var i = this.getStoreFieldName(t)
                      , a = re(i)
                      , o = e.store.getFieldValue(n, i)
                      , s = this.getFieldPolicy(t.typename, a, !1)
                      , l = s && s.read;
                    if (l) {
                        var u = rA(this, n, t, e, e.store.getStorage(tb(n) ? n.__ref : n, i));
                        return nz.withValue(this.cache, l, [o, u])
                    }
                    return o
                }
            }
            ,
            t.prototype.getReadFunction = function(t, e) {
                var n = this.getFieldPolicy(t, e, !1);
                return n && n.read
            }
            ,
            t.prototype.getMergeFunction = function(t, e, n) {
                var r = this.getFieldPolicy(t, e, !1)
                  , i = r && r.merge;
                return !i && n && (i = (r = this.getTypePolicy(n)) && r.merge),
                i
            }
            ,
            t.prototype.runMergeFunction = function(t, e, n, r, i) {
                var a = n.field
                  , o = n.typename
                  , s = n.merge;
                return s === rT ? rD(r.store)(t, e) : s === rO ? e : (r.overwrite && (t = void 0),
                s(t, e, rA(this, void 0, {
                    typename: o,
                    fieldName: a.name.value,
                    field: a,
                    variables: r.variables
                }, r, i || Object.create(null))))
            }
            ,
            t
        }();
        function rA(t, e, n, r, i) {
            var a = t.getStoreFieldName(n)
              , o = re(a)
              , s = n.variables || r.variables
              , l = r.store
              , u = l.toReference
              , c = l.canRead;
            return {
                args: rk(n),
                field: n.field || null,
                fieldName: o,
                storeFieldName: a,
                variables: s,
                isReference: tb,
                toReference: u,
                storage: i,
                cache: t.cache,
                canRead: c,
                readField: function() {
                    return t.readField(rR(arguments, e, s), r)
                },
                mergeObjects: rD(r.store)
            }
        }
        function rR(t, e, n) {
            var r, i, a, o = t[0], s = t[1], l = t.length;
            return "string" == typeof o ? a = {
                fieldName: o,
                from: l > 1 ? s : e
            } : (a = G({}, o),
            n6.call(a, "from") || (a.from = e)),
            __DEV__ && void 0 === a.from && __DEV__ && w.warn("Undefined 'from' passed to readField with arguments ".concat((r = Array.from(t),
            i = eY("stringifyForDisplay"),
            JSON.stringify(r, function(t, e) {
                return void 0 === e ? i : e
            }).split(JSON.stringify(i)).join("<undefined>")))),
            void 0 === a.variables && (a.variables = n),
            a
        }
        function rD(t) {
            return function(e, n) {
                if (t2(e) || t2(n))
                    throw __DEV__ ? new b("Cannot automatically merge arrays") : new b(4);
                if (tm(e) && tm(n)) {
                    var r = t.getFieldValue(e, "__typename")
                      , i = t.getFieldValue(n, "__typename");
                    if (r && i && r !== i)
                        return n;
                    if (tb(e) && rn(n))
                        return t.merge(e.__ref, n),
                        e;
                    if (rn(e) && tb(n))
                        return t.merge(e, n.__ref),
                        n;
                    if (rn(e) && rn(n))
                        return G(G({}, e), n)
                }
                return n
            }
        }
        function rI(t, e, n) {
            var r = "".concat(e).concat(n)
              , i = t.flavors.get(r);
            return i || t.flavors.set(r, i = t.clientOnly === e && t.deferred === n ? t : G(G({}, t), {
                clientOnly: e,
                deferred: n
            })),
            i
        }
        var rP = function() {
            function t(t, e, n) {
                this.cache = t,
                this.reader = e,
                this.fragments = n
            }
            return t.prototype.writeToStore = function(t, e) {
                var n = this
                  , r = e.query
                  , i = e.result
                  , a = e.dataId
                  , o = e.variables
                  , s = e.overwrite
                  , l = tD(r)
                  , u = new t9;
                o = G(G({}, tL(l)), o);
                var c = G(G({
                    store: t,
                    written: Object.create(null),
                    merge: function(t, e) {
                        return u.merge(t, e)
                    },
                    variables: o,
                    varString: eV(o)
                }, rr(r, this.fragments)), {
                    overwrite: !!s,
                    incomingById: new Map,
                    clientOnly: !1,
                    deferred: !1,
                    flavors: new Map
                })
                  , h = this.processSelectionSet({
                    result: i || Object.create(null),
                    dataId: a,
                    selectionSet: l.selectionSet,
                    mergeTree: {
                        map: new Map
                    },
                    context: c
                });
                if (!tb(h))
                    throw __DEV__ ? new b("Could not identify object ".concat(JSON.stringify(i))) : new b(7);
                return c.incomingById.forEach(function(e, r) {
                    var i = e.storeObject
                      , a = e.mergeTree
                      , o = e.fieldNodeSet
                      , s = t_(r);
                    if (a && a.map.size) {
                        var l = n.applyMerges(a, s, i, c);
                        if (tb(l))
                            return;
                        i = l
                    }
                    if (__DEV__ && !c.overwrite) {
                        var u = Object.create(null);
                        o.forEach(function(t) {
                            t.selectionSet && (u[t.name.value] = !0)
                        });
                        var h = function(t) {
                            var e = a && a.map.get(t);
                            return !!(e && e.info && e.info.merge)
                        };
                        Object.keys(i).forEach(function(t) {
                            !0 !== u[re(t)] || h(t) || function(t, e, n, r) {
                                var i = function(t) {
                                    var e = r.getFieldValue(t, n);
                                    return "object" == typeof e && e
                                }
                                  , a = i(t);
                                if (a) {
                                    var o = i(e);
                                    if (!(!o || tb(a) || eO(a, o) || Object.keys(a).every(function(t) {
                                        return void 0 !== r.getFieldValue(o, t)
                                    }))) {
                                        var s = r.getFieldValue(t, "__typename") || r.getFieldValue(e, "__typename")
                                          , l = re(n)
                                          , u = "".concat(s, ".").concat(l);
                                        if (!rF.has(u)) {
                                            rF.add(u);
                                            var c = [];
                                            t2(a) || t2(o) || [a, o].forEach(function(t) {
                                                var e = r.getFieldValue(t, "__typename");
                                                "string" != typeof e || c.includes(e) || c.push(e)
                                            }),
                                            __DEV__ && w.warn("Cache data may be lost when replacing the ".concat(l, " field of a ").concat(s, " object.\n\nThis could cause additional (usually avoidable) network requests to fetch data that were otherwise cached.\n\nTo address this problem (which is not a bug in Apollo Client), ").concat(c.length ? "either ensure all objects of type " + c.join(" and ") + " have an ID or a custom merge function, or " : "", "define a custom merge function for the ").concat(u, " field, so InMemoryCache can safely merge these objects:\n\n  existing: ").concat(JSON.stringify(a).slice(0, 1e3), "\n  incoming: ").concat(JSON.stringify(o).slice(0, 1e3), "\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n"))
                                        }
                                    }
                                }
                            }(s, i, t, c.store)
                        })
                    }
                    t.merge(r, i)
                }),
                t.retain(h.__ref),
                h
            }
            ,
            t.prototype.processSelectionSet = function(t) {
                var e = this
                  , n = t.dataId
                  , r = t.result
                  , i = t.selectionSet
                  , a = t.context
                  , o = t.mergeTree
                  , s = this.cache.policies
                  , l = Object.create(null)
                  , u = n && s.rootTypenamesById[n] || tC(r, i, a.fragmentMap) || n && a.store.get(n, "__typename");
                "string" == typeof u && (l.__typename = u);
                var c = function() {
                    var t = rR(arguments, l, a.variables);
                    if (tb(t.from)) {
                        var e = a.incomingById.get(t.from.__ref);
                        if (e) {
                            var n = s.readField(G(G({}, t), {
                                from: e.storeObject
                            }), a);
                            if (void 0 !== n)
                                return n
                        }
                    }
                    return s.readField(t, a)
                }
                  , h = new Set;
                this.flattenFields(i, r, a, u).forEach(function(t, n) {
                    var i, a = r[tO(n)];
                    if (h.add(n),
                    void 0 !== a) {
                        var d = s.getStoreFieldName({
                            typename: u,
                            fieldName: n.name.value,
                            field: n,
                            variables: t.variables
                        })
                          , f = rN(o, d)
                          , p = e.processFieldValue(a, n, n.selectionSet ? rI(t, !1, !1) : t, f)
                          , m = void 0;
                        n.selectionSet && (tb(p) || rn(p)) && (m = c("__typename", p));
                        var y = s.getMergeFunction(u, n.name.value, m);
                        y ? f.info = {
                            field: n,
                            typename: u,
                            merge: y
                        } : rj(o, d),
                        l = t.merge(l, ((i = {})[d] = p,
                        i))
                    } else
                        __DEV__ && !t.clientOnly && !t.deferred && !eH.added(n) && !s.getReadFunction(u, n.name.value) && __DEV__ && w.error("Missing field '".concat(tO(n), "' while writing result ").concat(JSON.stringify(r, null, 2)).substring(0, 1e3))
                });
                try {
                    var d = s.identify(r, {
                        typename: u,
                        selectionSet: i,
                        fragmentMap: a.fragmentMap,
                        storeObject: l,
                        readField: c
                    })
                      , f = d[0]
                      , p = d[1];
                    n = n || f,
                    p && (l = a.merge(l, p))
                } catch (t) {
                    if (!n)
                        throw t
                }
                if ("string" == typeof n) {
                    var m = t_(n)
                      , y = a.written[n] || (a.written[n] = []);
                    if (y.indexOf(i) >= 0 || (y.push(i),
                    this.reader && this.reader.isFresh(r, m, i, a)))
                        return m;
                    var g = a.incomingById.get(n);
                    return g ? (g.storeObject = a.merge(g.storeObject, l),
                    g.mergeTree = function t(e, n) {
                        if (e === n || !n || rL(n))
                            return e;
                        if (!e || rL(e))
                            return n;
                        var r = e.info && n.info ? G(G({}, e.info), n.info) : e.info || n.info
                          , i = e.map.size && n.map.size
                          , a = {
                            info: r,
                            map: i ? new Map : e.map.size ? e.map : n.map
                        };
                        if (i) {
                            var o = new Set(n.map.keys());
                            e.map.forEach(function(e, r) {
                                a.map.set(r, t(e, n.map.get(r))),
                                o.delete(r)
                            }),
                            o.forEach(function(r) {
                                a.map.set(r, t(n.map.get(r), e.map.get(r)))
                            })
                        }
                        return a
                    }(g.mergeTree, o),
                    h.forEach(function(t) {
                        return g.fieldNodeSet.add(t)
                    })) : a.incomingById.set(n, {
                        storeObject: l,
                        mergeTree: rL(o) ? void 0 : o,
                        fieldNodeSet: h
                    }),
                    m
                }
                return l
            }
            ,
            t.prototype.processFieldValue = function(t, e, n, r) {
                var i = this;
                return e.selectionSet && null !== t ? t2(t) ? t.map(function(t, a) {
                    var o = i.processFieldValue(t, e, n, rN(r, a));
                    return rj(r, a),
                    o
                }) : this.processSelectionSet({
                    result: t,
                    selectionSet: e.selectionSet,
                    context: n,
                    mergeTree: r
                }) : __DEV__ ? e2(t) : t
            }
            ,
            t.prototype.flattenFields = function(t, e, n, r) {
                void 0 === r && (r = tC(e, t, n.fragmentMap));
                var i = new Map
                  , a = this.cache.policies
                  , o = new eL(!1);
                return function t(s, l) {
                    var u = o.lookup(s, l.clientOnly, l.deferred);
                    u.visited || (u.visited = !0,
                    s.selections.forEach(function(o) {
                        if (t$(o, n.variables)) {
                            var s = l.clientOnly
                              , u = l.deferred;
                            if (!(s && u) && t5(o.directives) && o.directives.forEach(function(t) {
                                var e = t.name.value;
                                if ("client" === e && (s = !0),
                                "defer" === e) {
                                    var r = tT(t, n.variables);
                                    r && !1 === r.if || (u = !0)
                                }
                            }),
                            tA(o)) {
                                var h = i.get(o);
                                h && (s = s && h.clientOnly,
                                u = u && h.deferred),
                                i.set(o, rI(n, s, u))
                            } else {
                                var d = tv(o, n.lookupFragment);
                                if (!d && o.kind === c.FRAGMENT_SPREAD)
                                    throw __DEV__ ? new b("No fragment named ".concat(o.name.value)) : new b(8);
                                d && a.fragmentMatches(d, r, e, n.variables) && t(d.selectionSet, rI(n, s, u))
                            }
                        }
                    }))
                }(t, n),
                i
            }
            ,
            t.prototype.applyMerges = function(t, e, n, r, i) {
                var a = this;
                if (t.map.size && !tb(n)) {
                    var o, s, l = !t2(n) && (tb(e) || rn(e)) ? e : void 0, u = n;
                    l && !i && (i = [tb(l) ? l.__ref : l]);
                    var c = function(t, e) {
                        return t2(t) ? "number" == typeof e ? t[e] : void 0 : r.store.getFieldValue(t, String(e))
                    };
                    t.map.forEach(function(t, e) {
                        var n = c(l, e)
                          , o = c(u, e);
                        if (void 0 !== o) {
                            i && i.push(e);
                            var h = a.applyMerges(t, n, o, r, i);
                            h !== o && (s = s || new Map).set(e, h),
                            i && w(i.pop() === e)
                        }
                    }),
                    s && (n = t2(u) ? u.slice(0) : G({}, u),
                    s.forEach(function(t, e) {
                        n[e] = t
                    }))
                }
                return t.info ? this.cache.policies.runMergeFunction(e, n, t.info, r, i && (o = r.store).getStorage.apply(o, i)) : n
            }
            ,
            t
        }()
          , rM = [];
        function rN(t, e) {
            var n = t.map;
            return n.has(e) || n.set(e, rM.pop() || {
                map: new Map
            }),
            n.get(e)
        }
        function rL(t) {
            return !t || !(t.info || t.map.size)
        }
        function rj(t, e) {
            var n = t.map
              , r = n.get(e);
            r && rL(r) && (rM.push(r),
            n.delete(e))
        }
        var rF = new Set
          , rV = function(t) {
            function e(e) {
                void 0 === e && (e = {});
                var n = t.call(this) || this;
                return n.watches = new Set,
                n.typenameDocumentCache = new Map,
                n.makeVar = nG,
                n.txCount = 0,
                n.config = e5(n9, e),
                n.addTypename = !!n.config.addTypename,
                n.policies = new rC({
                    cache: n,
                    dataIdFromObject: n.config.dataIdFromObject,
                    possibleTypes: n.config.possibleTypes,
                    typePolicies: n.config.typePolicies
                }),
                n.init(),
                n
            }
            return B(e, t),
            e.prototype.init = function() {
                var t = this.data = new rs.Root({
                    policies: this.policies,
                    resultCaching: this.config.resultCaching
                });
                this.optimisticData = t.stump,
                this.resetResultCache()
            }
            ,
            e.prototype.resetResultCache = function(t) {
                var e = this
                  , n = this.storeReader
                  , r = this.config.fragments;
                this.storeWriter = new rP(this,this.storeReader = new rm({
                    cache: this,
                    addTypename: this.addTypename,
                    resultCacheMaxSize: this.config.resultCacheMaxSize,
                    canonizeResults: n7(this.config),
                    canon: t ? void 0 : n && n.canon,
                    fragments: r
                }),r),
                this.maybeBroadcastWatch = nV(function(t, n) {
                    return e.broadcastWatch(t, n)
                }, {
                    max: this.config.resultCacheMaxSize,
                    makeCacheKey: function(t) {
                        var n = t.optimistic ? e.optimisticData : e.data;
                        if (rf(n)) {
                            var r = t.optimistic
                              , i = t.id
                              , a = t.variables;
                            return n.makeCacheKey(t.query, t.callback, eV({
                                optimistic: r,
                                id: i,
                                variables: a
                            }))
                        }
                    }
                }),
                new Set([this.data.group, this.optimisticData.group]).forEach(function(t) {
                    return t.resetCaching()
                })
            }
            ,
            e.prototype.restore = function(t) {
                return this.init(),
                t && this.data.replace(t),
                this
            }
            ,
            e.prototype.extract = function(t) {
                return void 0 === t && (t = !1),
                (t ? this.optimisticData : this.data).extract()
            }
            ,
            e.prototype.read = function(t) {
                var e = t.returnPartialData;
                try {
                    return this.storeReader.diffQueryAgainstStore(G(G({}, t), {
                        store: t.optimistic ? this.optimisticData : this.data,
                        config: this.config,
                        returnPartialData: void 0 !== e && e
                    })).result || null
                } catch (t) {
                    if (t instanceof n5)
                        return null;
                    throw t
                }
            }
            ,
            e.prototype.write = function(t) {
                try {
                    return ++this.txCount,
                    this.storeWriter.writeToStore(this.data, t)
                } finally {
                    --this.txCount || !1 === t.broadcast || this.broadcastWatches()
                }
            }
            ,
            e.prototype.modify = function(t) {
                if (n6.call(t, "id") && !t.id)
                    return !1;
                var e = t.optimistic ? this.optimisticData : this.data;
                try {
                    return ++this.txCount,
                    e.modify(t.id || "ROOT_QUERY", t.fields)
                } finally {
                    --this.txCount || !1 === t.broadcast || this.broadcastWatches()
                }
            }
            ,
            e.prototype.diff = function(t) {
                return this.storeReader.diffQueryAgainstStore(G(G({}, t), {
                    store: t.optimistic ? this.optimisticData : this.data,
                    rootId: t.id || "ROOT_QUERY",
                    config: this.config
                }))
            }
            ,
            e.prototype.watch = function(t) {
                var e = this;
                return this.watches.size || function(t) {
                    nU(t).vars.forEach(function(e) {
                        return e.attachCache(t)
                    })
                }(this),
                this.watches.add(t),
                t.immediate && this.maybeBroadcastWatch(t),
                function() {
                    e.watches.delete(t) && !e.watches.size && nB(e),
                    e.maybeBroadcastWatch.forget(t)
                }
            }
            ,
            e.prototype.gc = function(t) {
                eV.reset();
                var e = this.optimisticData.gc();
                return t && !this.txCount && (t.resetResultCache ? this.resetResultCache(t.resetResultIdentities) : t.resetResultIdentities && this.storeReader.resetCanon()),
                e
            }
            ,
            e.prototype.retain = function(t, e) {
                return (e ? this.optimisticData : this.data).retain(t)
            }
            ,
            e.prototype.release = function(t, e) {
                return (e ? this.optimisticData : this.data).release(t)
            }
            ,
            e.prototype.identify = function(t) {
                if (tb(t))
                    return t.__ref;
                try {
                    return this.policies.identify(t)[0]
                } catch (t) {
                    __DEV__ && w.warn(t)
                }
            }
            ,
            e.prototype.evict = function(t) {
                if (!t.id) {
                    if (n6.call(t, "id"))
                        return !1;
                    t = G(G({}, t), {
                        id: "ROOT_QUERY"
                    })
                }
                try {
                    return ++this.txCount,
                    this.optimisticData.evict(t, this.data)
                } finally {
                    --this.txCount || !1 === t.broadcast || this.broadcastWatches()
                }
            }
            ,
            e.prototype.reset = function(t) {
                var e = this;
                return this.init(),
                eV.reset(),
                t && t.discardWatches ? (this.watches.forEach(function(t) {
                    return e.maybeBroadcastWatch.forget(t)
                }),
                this.watches.clear(),
                nB(this)) : this.broadcastWatches(),
                Promise.resolve()
            }
            ,
            e.prototype.removeOptimistic = function(t) {
                var e = this.optimisticData.removeLayer(t);
                e !== this.optimisticData && (this.optimisticData = e,
                this.broadcastWatches())
            }
            ,
            e.prototype.batch = function(t) {
                var e, n = this, r = t.update, i = t.optimistic, a = void 0 === i || i, o = t.removeOptimistic, s = t.onWatchUpdated, l = function(t) {
                    var i = n.data
                      , a = n.optimisticData;
                    ++n.txCount,
                    t && (n.data = n.optimisticData = t);
                    try {
                        return e = r(n)
                    } finally {
                        --n.txCount,
                        n.data = i,
                        n.optimisticData = a
                    }
                }, u = new Set;
                return s && !this.txCount && this.broadcastWatches(G(G({}, t), {
                    onWatchUpdated: function(t) {
                        return u.add(t),
                        !1
                    }
                })),
                "string" == typeof a ? this.optimisticData = this.optimisticData.addLayer(a, l) : !1 === a ? l(this.data) : l(),
                "string" == typeof o && (this.optimisticData = this.optimisticData.removeLayer(o)),
                s && u.size ? (this.broadcastWatches(G(G({}, t), {
                    onWatchUpdated: function(t, e) {
                        var n = s.call(this, t, e);
                        return !1 !== n && u.delete(t),
                        n
                    }
                })),
                u.size && u.forEach(function(t) {
                    return n.maybeBroadcastWatch.dirty(t)
                })) : this.broadcastWatches(t),
                e
            }
            ,
            e.prototype.performTransaction = function(t, e) {
                return this.batch({
                    update: t,
                    optimistic: e || null !== e
                })
            }
            ,
            e.prototype.transformDocument = function(t) {
                if (this.addTypename) {
                    var e = this.typenameDocumentCache.get(t);
                    return e || (e = eH(t),
                    this.typenameDocumentCache.set(t, e),
                    this.typenameDocumentCache.set(e, e)),
                    e
                }
                return t
            }
            ,
            e.prototype.transformForLink = function(t) {
                var e = this.config.fragments;
                return e ? e.transform(t) : t
            }
            ,
            e.prototype.broadcastWatches = function(t) {
                var e = this;
                this.txCount || this.watches.forEach(function(n) {
                    return e.maybeBroadcastWatch(n, t)
                })
            }
            ,
            e.prototype.broadcastWatch = function(t, e) {
                var n = t.lastDiff
                  , r = this.diff(t);
                (!e || (t.optimistic && "string" == typeof e.optimistic && (r.fromOptimisticTransaction = !0),
                !e.onWatchUpdated || !1 !== e.onWatchUpdated.call(this, t, r, n))) && (n && eO(n.result, r.result) || t.callback(t.lastDiff = r, n))
            }
            ,
            e
        }(n2)
          , rz = n(4155);
        let rq = new n1({
            uri: rz.env.API_URL,
            headers: {
                Authorization: "Bearer ".concat(rz.env.API_TOKEN)
            },
            cache: new rV
        });
        var rU = n(2342)
          , rB = n(9689)
          , rG = n(8044);
        let rW = {
            colors: {
                blue: "#0048FE",
                purple: "#851D86",
                gradient: "linear-gradient(225deg, #0048FE 0%, #851D86 100%)",
                background: {
                    bg1: "#1F1D2B",
                    bg2: "#121119"
                },
                text: {
                    100: "#FFFFFF",
                    500: "#E2E2E2",
                    600: "#D7D7D7",
                    700: "#282828",
                    gradient: "linear-gradient(225deg,#0048FE -50%,#851D86 100%)"
                },
                neutral: {
                    100: "#FBFBFB",
                    300: "#BDBDBD",
                    400: "#828282",
                    500: "#4F4F4F",
                    700: "#333333"
                },
                success: "#27AE60",
                error: "#EB5757"
            },
            fonts: {
                size: {
                    sm: "1.4rem",
                    base: "1.6rem",
                    lg: "1.8rem",
                    xl: "2rem",
                    "2xl": "2.2rem",
                    "3xl": "2.4rem",
                    "4xl": "2.8rem",
                    "5xl": "3.2rem",
                    "6xl": "4rem",
                    "7xl": "4.2rem"
                },
                family: {
                    body: 'Inter, apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif',
                    heading: 'Poppins, apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif'
                }
            },
            grid: {
                container: "125.6rem",
                gutter: "3.2rem",
                margin: "9.2rem"
            },
            layers: {
                base: 10,
                menu: 20,
                overlay: 30,
                modal: 40,
                alwaysOnTop: 50
            },
            transitions: {
                slow: "0.5s ease-in-out",
                default: "0.3s ease-in-out",
                fast: "0.1s ease-in-out",
                ease: {
                    slow: "0.5s ease",
                    default: "0.25s ease",
                    fast: "0.1s ease"
                }
            },
            borders: {
                radius: {
                    sm: "5px",
                    md: "10px"
                }
            }
        };
        var rH = n(2729);
        function rQ() {
            let t = (0,
            rH._)(["\n    body {\n      color: ", ";\n      background: ", ";\n      font: 400 ", " ", ",\n        sans-serif;\n    }\n\n    input,\n    textarea,\n    select,\n    button {\n      font-size: ", ";\n      font-family: inherit;\n    }\n\n    button {\n      cursor: pointer;\n      border: none;\n    }\n\n    a {\n      color: inherit;\n      text-decoration: none;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      font-family: ", ";\n    }\n\n    img {\n      max-width: 100%;\n    }\n\n    ul,\n    ol {\n      list-style: none;\n      list-style-type: none;\n    }\n\n    .modal-overlay {\n      background: rgba(0, 0, 0, 0.5);\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      z-index: ", ";\n    }\n\n    .modal-content {\n      position: relative;\n      width: 100%;\n      max-width: 104.2rem;\n      background: ", ";\n      border-radius: ", ";\n      margin: 1.6rem;\n      max-height: calc(100vh - 2rem);\n      overflow-y: auto;\n    }\n\n    .modal-close {\n      position: absolute;\n      right: 3.2rem;\n      top: 3.2rem;\n      border: 0;\n      background: transparent;\n      transition: filter 0.2s;\n      box-shadow: 0 0 0 3px #ffbf47;\n      outline: 3px solid transparent;\n\n      &:hover {\n        filter: brightness(0.8);\n      }\n    }\n  "]);
            return rQ = function() {
                return t
            }
            ,
            t
        }
        function r$() {
            let t = (0,
            rH._)(["\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    font-size: 62.5%;\n    scroll-behavior: smooth;\n  }\n\n  ", "\n\n "]);
            return r$ = function() {
                return t
            }
            ,
            t
        }
        let rY = (0,
        z.vJ)(r$(), t => {
            let {theme: e} = t;
            return (0,
            z.iv)(rQ(), e.colors.text["500"], e.colors.background.bg1, e.fonts.size.base, e.fonts.family.body, e.fonts.size.base, e.fonts.family.heading, e.layers.alwaysOnTop, e.colors.gradient, e.borders.radius.md)
        }
        );
        var rZ = function(t) {
            let {Component: e, pageProps: n} = t;
            return (0,
            m.jsx)(V, {
                client: rq,
                children: (0,
                m.jsx)(z.f6, {
                    theme: rW,
                    children: (0,
                    m.jsxs)(rU.N3, {
                        children: [(0,
                        m.jsx)(rY, {}), (0,
                        m.jsx)(rB.pQ, {}), (0,
                        m.jsx)(q.E.div, {
                            initial: "initial",
                            animate: "animate",
                            variants: {
                                initial: {
                                    opacity: 0
                                },
                                animate: {
                                    opacity: 1
                                }
                            },
                            children: (0,
                            m.jsx)(e, {
                                ...n
                            })
                        }), (0,
                        m.jsx)(rG.cp, {})]
                    })
                })
            })
        }
    },
    2342: function(t, e, n) {
        "use strict";
        n.d(e, {
            N3: function() {
                return s
            },
            _7: function() {
                return g
            },
            B1: function() {
                return l
            }
        }),
        n(4365);
        var r = n(5893)
          , i = n(7294);
        let a = {
            currentStepIndex: 0,
            isSubscriptionSuccess: !1,
            formData: {},
            handleNextStep: () => null,
            handlePreviousStep: () => null,
            setFormData: () => null,
            setIsSubscriptionSuccess: () => null
        }
          , o = (0,
        i.createContext)(a);
        function s(t) {
            let {children: e} = t
              , [n,s] = (0,
            i.useState)(a.currentStepIndex)
              , [l,u] = (0,
            i.useState)(a.isSubscriptionSuccess)
              , [c,h] = (0,
            i.useState)(a.formData);
            return (0,
            r.jsx)(o.Provider, {
                value: {
                    currentStepIndex: n,
                    isSubscriptionSuccess: l,
                    formData: c,
                    setFormData: h,
                    setIsSubscriptionSuccess: u,
                    handleNextStep: function() {
                        s(t => t + 1)
                    },
                    handlePreviousStep: function() {
                        s(t => t - 1)
                    }
                },
                children: e
            })
        }
        function l() {
            let t = (0,
            i.useContext)(o);
            if (void 0 === t)
                throw Error("useSubscriptionForm must be used within a SubscriptionFormProvider");
            return t
        }
        var u = n(5487)
          , c = n(8172)
          , h = n(4917);
        function d() {
            let t = !1
              , e = new Set
              , n = {
                subscribe: t => (e.add(t),
                () => void e.delete(t)),
                start(n, r) {
                    (0,
                    u.k)(t, "controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.");
                    let i = [];
                    return e.forEach(t => {
                        i.push((0,
                        h.d)(t, n, {
                            transitionOverride: r
                        }))
                    }
                    ),
                    Promise.all(i)
                },
                set: n => ((0,
                u.k)(t, "controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook."),
                e.forEach(t => {
                    (0,
                    c.gg)(t, n)
                }
                )),
                stop() {
                    e.forEach(t => {
                        !function(t) {
                            t.values.forEach(t => t.stop())
                        }(t)
                    }
                    )
                },
                mount: () => (t = !0,
                () => {
                    t = !1,
                    n.stop()
                }
                )
            };
            return n
        }
        var f = n(6681)
          , p = n(8868);
        let m = function() {
            let t = (0,
            f.h)(d);
            return (0,
            p.L)(t.mount, []),
            t
        }
          , y = {
            some: 0,
            all: 1
        }
          , g = () => {
            let t = (0,
            i.useRef)(null)
              , e = m()
              , n = function(t, {root: e, margin: n, amount: r, once: a=!1}={}) {
                let[o,s] = (0,
                i.useState)(!1);
                return (0,
                i.useEffect)( () => {
                    if (!t.current || a && o)
                        return;
                    let i = {
                        root: e && e.current || void 0,
                        margin: n,
                        amount: r
                    };
                    return function(t, e, {root: n, margin: r, amount: i="some"}={}) {
                        let a = function(t, e, n) {
                            var r;
                            if ("string" == typeof t) {
                                let i = document;
                                e && ((0,
                                u.k)(!!e.current, "Scope provided, but no element detected."),
                                i = e.current),
                                n ? (null !== (r = n[t]) && void 0 !== r || (n[t] = i.querySelectorAll(t)),
                                t = n[t]) : t = i.querySelectorAll(t)
                            } else
                                t instanceof Element && (t = [t]);
                            return Array.from(t || [])
                        }(t)
                          , o = new WeakMap
                          , s = new IntersectionObserver(t => {
                            t.forEach(t => {
                                let n = o.get(t.target);
                                if (!!n !== t.isIntersecting) {
                                    if (t.isIntersecting) {
                                        let n = e(t);
                                        "function" == typeof n ? o.set(t.target, n) : s.unobserve(t.target)
                                    } else
                                        n && (n(t),
                                        o.delete(t.target))
                                }
                            }
                            )
                        }
                        ,{
                            root: n,
                            rootMargin: r,
                            threshold: "number" == typeof i ? i : y[i]
                        });
                        return a.forEach(t => s.observe(t)),
                        () => s.disconnect()
                    }(t.current, () => (s(!0),
                    a ? void 0 : () => s(!1)), i)
                }
                , [e, t, n, a]),
                o
            }(t);
            return (0,
            i.useEffect)( () => {
                n && e.start("visible")
            }
            , [e, n]),
            {
                ref: t,
                inView: n
            }
        }
    },
    4365: function(t, e, n) {
        "use strict";
        n.d(e, {
            t: function() {
                return i
            }
        });
        var r = n(7294);
        let i = t => {
            let[e,n] = (0,
            r.useState)(0)
              , [i,a] = (0,
            r.useState)(!1)
              , o = (0,
            r.useCallback)( () => {
                n(window.scrollY)
            }
            , []);
            return (0,
            r.useEffect)( () => (o(),
            window.addEventListener("scroll", o),
            () => {
                window.removeEventListener("scroll", o)
            }
            ), [o]),
            (0,
            r.useEffect)( () => {
                let n = t.find(t => {
                    let {target: n} = t
                      , r = document.querySelector("".concat(n));
                    if (r) {
                        let t = r.offsetTop - 150
                          , n = t + r.offsetHeight;
                        return e >= t && e < n
                    }
                    return !1
                }
                );
                n ? a(t.indexOf(n)) : a(!1)
            }
            , [e, t]),
            {
                selectedPage: i
            }
        }
    },
    9008: function(t, e, n) {
        t.exports = n(2636)
    },
    1163: function(t, e, n) {
        t.exports = n(6885)
    },
    4298: function(t, e, n) {
        t.exports = n(5442)
    },
    4155: function(t) {
        var e, n, r, i = t.exports = {};
        function a() {
            throw Error("setTimeout has not been defined")
        }
        function o() {
            throw Error("clearTimeout has not been defined")
        }
        function s(t) {
            if (e === setTimeout)
                return setTimeout(t, 0);
            if ((e === a || !e) && setTimeout)
                return e = setTimeout,
                setTimeout(t, 0);
            try {
                return e(t, 0)
            } catch (n) {
                try {
                    return e.call(null, t, 0)
                } catch (n) {
                    return e.call(this, t, 0)
                }
            }
        }
        !function() {
            try {
                e = "function" == typeof setTimeout ? setTimeout : a
            } catch (t) {
                e = a
            }
            try {
                n = "function" == typeof clearTimeout ? clearTimeout : o
            } catch (t) {
                n = o
            }
        }();
        var l = []
          , u = !1
          , c = -1;
        function h() {
            u && r && (u = !1,
            r.length ? l = r.concat(l) : c = -1,
            l.length && d())
        }
        function d() {
            if (!u) {
                var t = s(h);
                u = !0;
                for (var e = l.length; e; ) {
                    for (r = l,
                    l = []; ++c < e; )
                        r && r[c].run();
                    c = -1,
                    e = l.length
                }
                r = null,
                u = !1,
                function(t) {
                    if (n === clearTimeout)
                        return clearTimeout(t);
                    if ((n === o || !n) && clearTimeout)
                        return n = clearTimeout,
                        clearTimeout(t);
                    try {
                        n(t)
                    } catch (e) {
                        try {
                            return n.call(null, t)
                        } catch (e) {
                            return n.call(this, t)
                        }
                    }
                }(t)
            }
        }
        function f(t, e) {
            this.fun = t,
            this.array = e
        }
        function p() {}
        i.nextTick = function(t) {
            var e = Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var n = 1; n < arguments.length; n++)
                    e[n - 1] = arguments[n];
            l.push(new f(t,e)),
            1 !== l.length || u || s(d)
        }
        ,
        f.prototype.run = function() {
            this.fun.apply(null, this.array)
        }
        ,
        i.title = "browser",
        i.browser = !0,
        i.env = {},
        i.argv = [],
        i.version = "",
        i.versions = {},
        i.on = p,
        i.addListener = p,
        i.once = p,
        i.off = p,
        i.removeListener = p,
        i.removeAllListeners = p,
        i.emit = p,
        i.prependListener = p,
        i.prependOnceListener = p,
        i.listeners = function(t) {
            return []
        }
        ,
        i.binding = function(t) {
            throw Error("process.binding is not supported")
        }
        ,
        i.cwd = function() {
            return "/"
        }
        ,
        i.chdir = function(t) {
            throw Error("process.chdir is not supported")
        }
        ,
        i.umask = function() {
            return 0
        }
    },
    9921: function(t, e) {
        "use strict";
        /** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
        var n = "function" == typeof Symbol && Symbol.for
          , r = n ? Symbol.for("react.element") : 60103
          , i = n ? Symbol.for("react.portal") : 60106
          , a = n ? Symbol.for("react.fragment") : 60107
          , o = n ? Symbol.for("react.strict_mode") : 60108
          , s = n ? Symbol.for("react.profiler") : 60114
          , l = n ? Symbol.for("react.provider") : 60109
          , u = n ? Symbol.for("react.context") : 60110
          , c = n ? Symbol.for("react.async_mode") : 60111
          , h = n ? Symbol.for("react.concurrent_mode") : 60111
          , d = n ? Symbol.for("react.forward_ref") : 60112
          , f = n ? Symbol.for("react.suspense") : 60113
          , p = n ? Symbol.for("react.suspense_list") : 60120
          , m = n ? Symbol.for("react.memo") : 60115
          , y = n ? Symbol.for("react.lazy") : 60116
          , g = n ? Symbol.for("react.block") : 60121
          , v = n ? Symbol.for("react.fundamental") : 60117
          , _ = n ? Symbol.for("react.responder") : 60118
          , b = n ? Symbol.for("react.scope") : 60119;
        function w(t) {
            if ("object" == typeof t && null !== t) {
                var e = t.$$typeof;
                switch (e) {
                case r:
                    switch (t = t.type) {
                    case c:
                    case h:
                    case a:
                    case s:
                    case o:
                    case f:
                        return t;
                    default:
                        switch (t = t && t.$$typeof) {
                        case u:
                        case d:
                        case y:
                        case m:
                        case l:
                            return t;
                        default:
                            return e
                        }
                    }
                case i:
                    return e
                }
            }
        }
        function S(t) {
            return w(t) === h
        }
        e.AsyncMode = c,
        e.ConcurrentMode = h,
        e.ContextConsumer = u,
        e.ContextProvider = l,
        e.Element = r,
        e.ForwardRef = d,
        e.Fragment = a,
        e.Lazy = y,
        e.Memo = m,
        e.Portal = i,
        e.Profiler = s,
        e.StrictMode = o,
        e.Suspense = f,
        e.isAsyncMode = function(t) {
            return S(t) || w(t) === c
        }
        ,
        e.isConcurrentMode = S,
        e.isContextConsumer = function(t) {
            return w(t) === u
        }
        ,
        e.isContextProvider = function(t) {
            return w(t) === l
        }
        ,
        e.isElement = function(t) {
            return "object" == typeof t && null !== t && t.$$typeof === r
        }
        ,
        e.isForwardRef = function(t) {
            return w(t) === d
        }
        ,
        e.isFragment = function(t) {
            return w(t) === a
        }
        ,
        e.isLazy = function(t) {
            return w(t) === y
        }
        ,
        e.isMemo = function(t) {
            return w(t) === m
        }
        ,
        e.isPortal = function(t) {
            return w(t) === i
        }
        ,
        e.isProfiler = function(t) {
            return w(t) === s
        }
        ,
        e.isStrictMode = function(t) {
            return w(t) === o
        }
        ,
        e.isSuspense = function(t) {
            return w(t) === f
        }
        ,
        e.isValidElementType = function(t) {
            return "string" == typeof t || "function" == typeof t || t === a || t === h || t === s || t === o || t === f || t === p || "object" == typeof t && null !== t && (t.$$typeof === y || t.$$typeof === m || t.$$typeof === l || t.$$typeof === u || t.$$typeof === d || t.$$typeof === v || t.$$typeof === _ || t.$$typeof === b || t.$$typeof === g)
        }
        ,
        e.typeOf = w
    },
    9864: function(t, e, n) {
        "use strict";
        t.exports = n(9921)
    },
    6774: function(t) {
        t.exports = function(t, e, n, r) {
            var i = n ? n.call(r, t, e) : void 0;
            if (void 0 !== i)
                return !!i;
            if (t === e)
                return !0;
            if ("object" != typeof t || !t || "object" != typeof e || !e)
                return !1;
            var a = Object.keys(t)
              , o = Object.keys(e);
            if (a.length !== o.length)
                return !1;
            for (var s = Object.prototype.hasOwnProperty.bind(e), l = 0; l < a.length; l++) {
                var u = a[l];
                if (!s(u))
                    return !1;
                var c = t[u]
                  , h = e[u];
                if (!1 === (i = n ? n.call(r, c, h, u) : void 0) || void 0 === i && c !== h)
                    return !1
            }
            return !0
        }
    },
    4141: function(t, e, n) {
        "use strict";
        n.d(e, {
            f6: function() {
                return tA
            },
            vJ: function() {
                return tP
            },
            iv: function() {
                return tb
            },
            ZP: function() {
                return tM
            }
        });
        var r, i, a = n(9864), o = n(7294), s = n(6774), l = n.n(s), u = function(t) {
            function e(t, e, r) {
                var i = e.trim().split(p);
                e = i;
                var a = i.length
                  , o = t.length;
                switch (o) {
                case 0:
                case 1:
                    var s = 0;
                    for (t = 0 === o ? "" : t[0] + " "; s < a; ++s)
                        e[s] = n(t, e[s], r).trim();
                    break;
                default:
                    var l = s = 0;
                    for (e = []; s < a; ++s)
                        for (var u = 0; u < o; ++u)
                            e[l++] = n(t[u] + " ", i[s], r).trim()
                }
                return e
            }
            function n(t, e, n) {
                var r = e.charCodeAt(0);
                switch (33 > r && (r = (e = e.trim()).charCodeAt(0)),
                r) {
                case 38:
                    return e.replace(m, "$1" + t.trim());
                case 58:
                    return t.trim() + e.replace(m, "$1" + t.trim());
                default:
                    if (0 < 1 * n && 0 < e.indexOf("\f"))
                        return e.replace(m, (58 === t.charCodeAt(0) ? "" : "$1") + t.trim())
                }
                return t + e
            }
            function r(t, e, n, a) {
                var o = t + ";"
                  , s = 2 * e + 3 * n + 4 * a;
                if (944 === s) {
                    t = o.indexOf(":", 9) + 1;
                    var l = o.substring(t, o.length - 1).trim();
                    return l = o.substring(0, t).trim() + l + ";",
                    1 === A || 2 === A && i(l, 1) ? "-webkit-" + l + l : l
                }
                if (0 === A || 2 === A && !i(o, 1))
                    return o;
                switch (s) {
                case 1015:
                    return 97 === o.charCodeAt(10) ? "-webkit-" + o + o : o;
                case 951:
                    return 116 === o.charCodeAt(3) ? "-webkit-" + o + o : o;
                case 963:
                    return 110 === o.charCodeAt(5) ? "-webkit-" + o + o : o;
                case 1009:
                    if (100 !== o.charCodeAt(4))
                        break;
                case 969:
                case 942:
                    return "-webkit-" + o + o;
                case 978:
                    return "-webkit-" + o + "-moz-" + o + o;
                case 1019:
                case 983:
                    return "-webkit-" + o + "-moz-" + o + "-ms-" + o + o;
                case 883:
                    if (45 === o.charCodeAt(8))
                        return "-webkit-" + o + o;
                    if (0 < o.indexOf("image-set(", 11))
                        return o.replace(E, "$1-webkit-$2") + o;
                    break;
                case 932:
                    if (45 === o.charCodeAt(4))
                        switch (o.charCodeAt(5)) {
                        case 103:
                            return "-webkit-box-" + o.replace("-grow", "") + "-webkit-" + o + "-ms-" + o.replace("grow", "positive") + o;
                        case 115:
                            return "-webkit-" + o + "-ms-" + o.replace("shrink", "negative") + o;
                        case 98:
                            return "-webkit-" + o + "-ms-" + o.replace("basis", "preferred-size") + o
                        }
                    return "-webkit-" + o + "-ms-" + o + o;
                case 964:
                    return "-webkit-" + o + "-ms-flex-" + o + o;
                case 1023:
                    if (99 !== o.charCodeAt(8))
                        break;
                    return "-webkit-box-pack" + (l = o.substring(o.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify")) + "-webkit-" + o + "-ms-flex-pack" + l + o;
                case 1005:
                    return d.test(o) ? o.replace(h, ":-webkit-") + o.replace(h, ":-moz-") + o : o;
                case 1e3:
                    switch (e = (l = o.substring(13).trim()).indexOf("-") + 1,
                    l.charCodeAt(0) + l.charCodeAt(e)) {
                    case 226:
                        l = o.replace(_, "tb");
                        break;
                    case 232:
                        l = o.replace(_, "tb-rl");
                        break;
                    case 220:
                        l = o.replace(_, "lr");
                        break;
                    default:
                        return o
                    }
                    return "-webkit-" + o + "-ms-" + l + o;
                case 1017:
                    if (-1 === o.indexOf("sticky", 9))
                        break;
                case 975:
                    switch (e = (o = t).length - 10,
                    s = (l = (33 === o.charCodeAt(e) ? o.substring(0, e) : o).substring(t.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | l.charCodeAt(7))) {
                    case 203:
                        if (111 > l.charCodeAt(8))
                            break;
                    case 115:
                        o = o.replace(l, "-webkit-" + l) + ";" + o;
                        break;
                    case 207:
                    case 102:
                        o = o.replace(l, "-webkit-" + (102 < s ? "inline-" : "") + "box") + ";" + o.replace(l, "-webkit-" + l) + ";" + o.replace(l, "-ms-" + l + "box") + ";" + o
                    }
                    return o + ";";
                case 938:
                    if (45 === o.charCodeAt(5))
                        switch (o.charCodeAt(6)) {
                        case 105:
                            return l = o.replace("-items", ""),
                            "-webkit-" + o + "-webkit-box-" + l + "-ms-flex-" + l + o;
                        case 115:
                            return "-webkit-" + o + "-ms-flex-item-" + o.replace(S, "") + o;
                        default:
                            return "-webkit-" + o + "-ms-flex-line-pack" + o.replace("align-content", "").replace(S, "") + o
                        }
                    break;
                case 973:
                case 989:
                    if (45 !== o.charCodeAt(3) || 122 === o.charCodeAt(4))
                        break;
                case 931:
                case 953:
                    if (!0 === x.test(t))
                        return 115 === (l = t.substring(t.indexOf(":") + 1)).charCodeAt(0) ? r(t.replace("stretch", "fill-available"), e, n, a).replace(":fill-available", ":stretch") : o.replace(l, "-webkit-" + l) + o.replace(l, "-moz-" + l.replace("fill-", "")) + o;
                    break;
                case 962:
                    if (o = "-webkit-" + o + (102 === o.charCodeAt(5) ? "-ms-" + o : "") + o,
                    211 === n + a && 105 === o.charCodeAt(13) && 0 < o.indexOf("transform", 10))
                        return o.substring(0, o.indexOf(";", 27) + 1).replace(f, "$1-webkit-$2") + o
                }
                return o
            }
            function i(t, e) {
                var n = t.indexOf(1 === e ? ":" : "{")
                  , r = t.substring(0, 3 !== e ? n : 10);
                return n = t.substring(n + 1, t.length - 1),
                P(2 !== e ? r : r.replace(k, "$1"), n, e)
            }
            function a(t, e) {
                var n = r(e, e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2));
                return n !== e + ";" ? n.replace(w, " or ($1)").substring(4) : "(" + e + ")"
            }
            function o(t, e, n, r, i, a, o, s, u, c) {
                for (var h, d = 0, f = e; d < I; ++d)
                    switch (h = D[d].call(l, t, f, n, r, i, a, o, s, u, c)) {
                    case void 0:
                    case !1:
                    case !0:
                    case null:
                        break;
                    default:
                        f = h
                    }
                if (f !== e)
                    return f
            }
            function s(t) {
                return void 0 !== (t = t.prefix) && (P = null,
                t ? "function" != typeof t ? A = 1 : (A = 2,
                P = t) : A = 0),
                s
            }
            function l(t, n) {
                var s = t;
                if (33 > s.charCodeAt(0) && (s = s.trim()),
                s = [s],
                0 < I) {
                    var l = o(-1, n, s, s, O, T, 0, 0, 0, 0);
                    void 0 !== l && "string" == typeof l && (n = l)
                }
                var h = function t(n, s, l, h, d) {
                    for (var f, p, m, _, w, S = 0, k = 0, x = 0, E = 0, D = 0, P = 0, N = m = f = 0, L = 0, j = 0, F = 0, V = 0, z = l.length, q = z - 1, U = "", B = "", G = "", W = ""; L < z; ) {
                        if (p = l.charCodeAt(L),
                        L === q && 0 !== k + E + x + S && (0 !== k && (p = 47 === k ? 10 : 47),
                        E = x = S = 0,
                        z++,
                        q++),
                        0 === k + E + x + S) {
                            if (L === q && (0 < j && (U = U.replace(c, "")),
                            0 < U.trim().length)) {
                                switch (p) {
                                case 32:
                                case 9:
                                case 59:
                                case 13:
                                case 10:
                                    break;
                                default:
                                    U += l.charAt(L)
                                }
                                p = 59
                            }
                            switch (p) {
                            case 123:
                                for (f = (U = U.trim()).charCodeAt(0),
                                m = 1,
                                V = ++L; L < z; ) {
                                    switch (p = l.charCodeAt(L)) {
                                    case 123:
                                        m++;
                                        break;
                                    case 125:
                                        m--;
                                        break;
                                    case 47:
                                        switch (p = l.charCodeAt(L + 1)) {
                                        case 42:
                                        case 47:
                                            t: {
                                                for (N = L + 1; N < q; ++N)
                                                    switch (l.charCodeAt(N)) {
                                                    case 47:
                                                        if (42 === p && 42 === l.charCodeAt(N - 1) && L + 2 !== N) {
                                                            L = N + 1;
                                                            break t
                                                        }
                                                        break;
                                                    case 10:
                                                        if (47 === p) {
                                                            L = N + 1;
                                                            break t
                                                        }
                                                    }
                                                L = N
                                            }
                                        }
                                        break;
                                    case 91:
                                        p++;
                                    case 40:
                                        p++;
                                    case 34:
                                    case 39:
                                        for (; L++ < q && l.charCodeAt(L) !== p; )
                                            ;
                                    }
                                    if (0 === m)
                                        break;
                                    L++
                                }
                                if (m = l.substring(V, L),
                                0 === f && (f = (U = U.replace(u, "").trim()).charCodeAt(0)),
                                64 === f) {
                                    switch (0 < j && (U = U.replace(c, "")),
                                    p = U.charCodeAt(1)) {
                                    case 100:
                                    case 109:
                                    case 115:
                                    case 45:
                                        j = s;
                                        break;
                                    default:
                                        j = R
                                    }
                                    if (V = (m = t(s, j, m, p, d + 1)).length,
                                    0 < I && (j = e(R, U, F),
                                    w = o(3, m, j, s, O, T, V, p, d, h),
                                    U = j.join(""),
                                    void 0 !== w && 0 === (V = (m = w.trim()).length) && (p = 0,
                                    m = "")),
                                    0 < V)
                                        switch (p) {
                                        case 115:
                                            U = U.replace(b, a);
                                        case 100:
                                        case 109:
                                        case 45:
                                            m = U + "{" + m + "}";
                                            break;
                                        case 107:
                                            m = (U = U.replace(y, "$1 $2")) + "{" + m + "}",
                                            m = 1 === A || 2 === A && i("@" + m, 3) ? "@-webkit-" + m + "@" + m : "@" + m;
                                            break;
                                        default:
                                            m = U + m,
                                            112 === h && (B += m,
                                            m = "")
                                        }
                                    else
                                        m = ""
                                } else
                                    m = t(s, e(s, U, F), m, h, d + 1);
                                G += m,
                                m = F = j = N = f = 0,
                                U = "",
                                p = l.charCodeAt(++L);
                                break;
                            case 125:
                            case 59:
                                if (1 < (V = (U = (0 < j ? U.replace(c, "") : U).trim()).length))
                                    switch (0 === N && (45 === (f = U.charCodeAt(0)) || 96 < f && 123 > f) && (V = (U = U.replace(" ", ":")).length),
                                    0 < I && void 0 !== (w = o(1, U, s, n, O, T, B.length, h, d, h)) && 0 === (V = (U = w.trim()).length) && (U = "\x00\x00"),
                                    f = U.charCodeAt(0),
                                    p = U.charCodeAt(1),
                                    f) {
                                    case 0:
                                        break;
                                    case 64:
                                        if (105 === p || 99 === p) {
                                            W += U + l.charAt(L);
                                            break
                                        }
                                    default:
                                        58 !== U.charCodeAt(V - 1) && (B += r(U, f, p, U.charCodeAt(2)))
                                    }
                                F = j = N = f = 0,
                                U = "",
                                p = l.charCodeAt(++L)
                            }
                        }
                        switch (p) {
                        case 13:
                        case 10:
                            47 === k ? k = 0 : 0 === 1 + f && 107 !== h && 0 < U.length && (j = 1,
                            U += "\x00"),
                            0 < I * M && o(0, U, s, n, O, T, B.length, h, d, h),
                            T = 1,
                            O++;
                            break;
                        case 59:
                        case 125:
                            if (0 === k + E + x + S) {
                                T++;
                                break
                            }
                        default:
                            switch (T++,
                            _ = l.charAt(L),
                            p) {
                            case 9:
                            case 32:
                                if (0 === E + S + k)
                                    switch (D) {
                                    case 44:
                                    case 58:
                                    case 9:
                                    case 32:
                                        _ = "";
                                        break;
                                    default:
                                        32 !== p && (_ = " ")
                                    }
                                break;
                            case 0:
                                _ = "\\0";
                                break;
                            case 12:
                                _ = "\\f";
                                break;
                            case 11:
                                _ = "\\v";
                                break;
                            case 38:
                                0 === E + k + S && (j = F = 1,
                                _ = "\f" + _);
                                break;
                            case 108:
                                if (0 === E + k + S + C && 0 < N)
                                    switch (L - N) {
                                    case 2:
                                        112 === D && 58 === l.charCodeAt(L - 3) && (C = D);
                                    case 8:
                                        111 === P && (C = P)
                                    }
                                break;
                            case 58:
                                0 === E + k + S && (N = L);
                                break;
                            case 44:
                                0 === k + x + E + S && (j = 1,
                                _ += "\r");
                                break;
                            case 34:
                            case 39:
                                0 === k && (E = E === p ? 0 : 0 === E ? p : E);
                                break;
                            case 91:
                                0 === E + k + x && S++;
                                break;
                            case 93:
                                0 === E + k + x && S--;
                                break;
                            case 41:
                                0 === E + k + S && x--;
                                break;
                            case 40:
                                0 === E + k + S && (0 === f && (2 * D + 3 * P == 533 || (f = 1)),
                                x++);
                                break;
                            case 64:
                                0 === k + x + E + S + N + m && (m = 1);
                                break;
                            case 42:
                            case 47:
                                if (!(0 < E + S + x))
                                    switch (k) {
                                    case 0:
                                        switch (2 * p + 3 * l.charCodeAt(L + 1)) {
                                        case 235:
                                            k = 47;
                                            break;
                                        case 220:
                                            V = L,
                                            k = 42
                                        }
                                        break;
                                    case 42:
                                        47 === p && 42 === D && V + 2 !== L && (33 === l.charCodeAt(V + 2) && (B += l.substring(V, L + 1)),
                                        _ = "",
                                        k = 0)
                                    }
                            }
                            0 === k && (U += _)
                        }
                        P = D,
                        D = p,
                        L++
                    }
                    if (0 < (V = B.length)) {
                        if (j = s,
                        0 < I && void 0 !== (w = o(2, B, j, n, O, T, V, h, d, h)) && 0 === (B = w).length)
                            return W + B + G;
                        if (B = j.join(",") + "{" + B + "}",
                        0 != A * C) {
                            switch (2 !== A || i(B, 2) || (C = 0),
                            C) {
                            case 111:
                                B = B.replace(v, ":-moz-$1") + B;
                                break;
                            case 112:
                                B = B.replace(g, "::-webkit-input-$1") + B.replace(g, "::-moz-$1") + B.replace(g, ":-ms-input-$1") + B
                            }
                            C = 0
                        }
                    }
                    return W + B + G
                }(R, s, n, 0, 0);
                return 0 < I && void 0 !== (l = o(-2, h, s, s, O, T, h.length, 0, 0, 0)) && (h = l),
                C = 0,
                T = O = 1,
                h
            }
            var u = /^\0+/g
              , c = /[\0\r\f]/g
              , h = /: */g
              , d = /zoo|gra/
              , f = /([,: ])(transform)/g
              , p = /,\r+?/g
              , m = /([\t\r\n ])*\f?&/g
              , y = /@(k\w+)\s*(\S*)\s*/
              , g = /::(place)/g
              , v = /:(read-only)/g
              , _ = /[svh]\w+-[tblr]{2}/
              , b = /\(\s*(.*)\s*\)/g
              , w = /([\s\S]*?);/g
              , S = /-self|flex-/g
              , k = /[^]*?(:[rp][el]a[\w-]+)[^]*/
              , x = /stretch|:\s*\w+\-(?:conte|avail)/
              , E = /([^-])(image-set\()/
              , T = 1
              , O = 1
              , C = 0
              , A = 1
              , R = []
              , D = []
              , I = 0
              , P = null
              , M = 0;
            return l.use = function t(e) {
                switch (e) {
                case void 0:
                case null:
                    I = D.length = 0;
                    break;
                default:
                    if ("function" == typeof e)
                        D[I++] = e;
                    else if ("object" == typeof e)
                        for (var n = 0, r = e.length; n < r; ++n)
                            t(e[n]);
                    else
                        M = 0 | !!e
                }
                return t
            }
            ,
            l.set = s,
            void 0 !== t && s(t),
            l
        }, c = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            columns: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridRowEnd: 1,
            gridRowSpan: 1,
            gridRowStart: 1,
            gridColumn: 1,
            gridColumnEnd: 1,
            gridColumnSpan: 1,
            gridColumnStart: 1,
            msGridRow: 1,
            msGridRowSpan: 1,
            msGridColumn: 1,
            msGridColumnSpan: 1,
            fontWeight: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            WebkitLineClamp: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1
        }, h = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, d = (r = Object.create(null),
        function(t) {
            return void 0 === r[t] && (r[t] = h.test(t) || 111 === t.charCodeAt(0) && 110 === t.charCodeAt(1) && 91 > t.charCodeAt(2)),
            r[t]
        }
        ), f = n(8679), p = n.n(f), m = n(4155);
        function y() {
            return (y = Object.assign || function(t) {
                for (var e = 1; e < arguments.length; e++) {
                    var n = arguments[e];
                    for (var r in n)
                        Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r])
                }
                return t
            }
            ).apply(this, arguments)
        }
        var g = function(t, e) {
            for (var n = [t[0]], r = 0, i = e.length; r < i; r += 1)
                n.push(e[r], t[r + 1]);
            return n
        }
          , v = function(t) {
            return null !== t && "object" == typeof t && "[object Object]" === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !(0,
            a.typeOf)(t)
        }
          , _ = Object.freeze([])
          , b = Object.freeze({});
        function w(t) {
            return "function" == typeof t
        }
        function S(t) {
            return t.displayName || t.name || "Component"
        }
        function k(t) {
            return t && "string" == typeof t.styledComponentId
        }
        var x = void 0 !== m && void 0 !== m.env && (m.env.REACT_APP_SC_ATTR || m.env.SC_ATTR) || "data-styled"
          , E = "undefined" != typeof window && "HTMLElement"in window
          , T = !!("boolean" == typeof SC_DISABLE_SPEEDY ? SC_DISABLE_SPEEDY : void 0 !== m && void 0 !== m.env && (void 0 !== m.env.REACT_APP_SC_DISABLE_SPEEDY && "" !== m.env.REACT_APP_SC_DISABLE_SPEEDY ? "false" !== m.env.REACT_APP_SC_DISABLE_SPEEDY && m.env.REACT_APP_SC_DISABLE_SPEEDY : void 0 !== m.env.SC_DISABLE_SPEEDY && "" !== m.env.SC_DISABLE_SPEEDY && "false" !== m.env.SC_DISABLE_SPEEDY && m.env.SC_DISABLE_SPEEDY))
          , O = {};
        function C(t) {
            for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                n[r - 1] = arguments[r];
            throw Error("An error occurred. See https://git.io/JUIaE#" + t + " for more information." + (n.length > 0 ? " Args: " + n.join(", ") : ""))
        }
        var A = function() {
            function t(t) {
                this.groupSizes = new Uint32Array(512),
                this.length = 512,
                this.tag = t
            }
            var e = t.prototype;
            return e.indexOfGroup = function(t) {
                for (var e = 0, n = 0; n < t; n++)
                    e += this.groupSizes[n];
                return e
            }
            ,
            e.insertRules = function(t, e) {
                if (t >= this.groupSizes.length) {
                    for (var n = this.groupSizes, r = n.length, i = r; t >= i; )
                        (i <<= 1) < 0 && C(16, "" + t);
                    this.groupSizes = new Uint32Array(i),
                    this.groupSizes.set(n),
                    this.length = i;
                    for (var a = r; a < i; a++)
                        this.groupSizes[a] = 0
                }
                for (var o = this.indexOfGroup(t + 1), s = 0, l = e.length; s < l; s++)
                    this.tag.insertRule(o, e[s]) && (this.groupSizes[t]++,
                    o++)
            }
            ,
            e.clearGroup = function(t) {
                if (t < this.length) {
                    var e = this.groupSizes[t]
                      , n = this.indexOfGroup(t)
                      , r = n + e;
                    this.groupSizes[t] = 0;
                    for (var i = n; i < r; i++)
                        this.tag.deleteRule(n)
                }
            }
            ,
            e.getGroup = function(t) {
                var e = "";
                if (t >= this.length || 0 === this.groupSizes[t])
                    return e;
                for (var n = this.groupSizes[t], r = this.indexOfGroup(t), i = r + n, a = r; a < i; a++)
                    e += this.tag.getRule(a) + "/*!sc*/\n";
                return e
            }
            ,
            t
        }()
          , R = new Map
          , D = new Map
          , I = 1
          , P = function(t) {
            if (R.has(t))
                return R.get(t);
            for (; D.has(I); )
                I++;
            var e = I++;
            return R.set(t, e),
            D.set(e, t),
            e
        }
          , M = function(t, e) {
            e >= I && (I = e + 1),
            R.set(t, e),
            D.set(e, t)
        }
          , N = "style[" + x + '][data-styled-version="5.3.11"]'
          , L = RegExp("^" + x + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')
          , j = function(t, e, n) {
            for (var r, i = n.split(","), a = 0, o = i.length; a < o; a++)
                (r = i[a]) && t.registerName(e, r)
        }
          , F = function(t, e) {
            for (var n = (e.textContent || "").split("/*!sc*/\n"), r = [], i = 0, a = n.length; i < a; i++) {
                var o = n[i].trim();
                if (o) {
                    var s = o.match(L);
                    if (s) {
                        var l = 0 | parseInt(s[1], 10)
                          , u = s[2];
                        0 !== l && (M(u, l),
                        j(t, u, s[3]),
                        t.getTag().insertRules(l, r)),
                        r.length = 0
                    } else
                        r.push(o)
                }
            }
        }
          , V = function() {
            return n.nc
        }
          , z = function(t) {
            var e = document.head
              , n = t || e
              , r = document.createElement("style")
              , i = function(t) {
                for (var e = t.childNodes, n = e.length; n >= 0; n--) {
                    var r = e[n];
                    if (r && 1 === r.nodeType && r.hasAttribute(x))
                        return r
                }
            }(n)
              , a = void 0 !== i ? i.nextSibling : null;
            r.setAttribute(x, "active"),
            r.setAttribute("data-styled-version", "5.3.11");
            var o = V();
            return o && r.setAttribute("nonce", o),
            n.insertBefore(r, a),
            r
        }
          , q = function() {
            function t(t) {
                var e = this.element = z(t);
                e.appendChild(document.createTextNode("")),
                this.sheet = function(t) {
                    if (t.sheet)
                        return t.sheet;
                    for (var e = document.styleSheets, n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        if (i.ownerNode === t)
                            return i
                    }
                    C(17)
                }(e),
                this.length = 0
            }
            var e = t.prototype;
            return e.insertRule = function(t, e) {
                try {
                    return this.sheet.insertRule(e, t),
                    this.length++,
                    !0
                } catch (t) {
                    return !1
                }
            }
            ,
            e.deleteRule = function(t) {
                this.sheet.deleteRule(t),
                this.length--
            }
            ,
            e.getRule = function(t) {
                var e = this.sheet.cssRules[t];
                return void 0 !== e && "string" == typeof e.cssText ? e.cssText : ""
            }
            ,
            t
        }()
          , U = function() {
            function t(t) {
                var e = this.element = z(t);
                this.nodes = e.childNodes,
                this.length = 0
            }
            var e = t.prototype;
            return e.insertRule = function(t, e) {
                if (t <= this.length && t >= 0) {
                    var n = document.createTextNode(e)
                      , r = this.nodes[t];
                    return this.element.insertBefore(n, r || null),
                    this.length++,
                    !0
                }
                return !1
            }
            ,
            e.deleteRule = function(t) {
                this.element.removeChild(this.nodes[t]),
                this.length--
            }
            ,
            e.getRule = function(t) {
                return t < this.length ? this.nodes[t].textContent : ""
            }
            ,
            t
        }()
          , B = function() {
            function t(t) {
                this.rules = [],
                this.length = 0
            }
            var e = t.prototype;
            return e.insertRule = function(t, e) {
                return t <= this.length && (this.rules.splice(t, 0, e),
                this.length++,
                !0)
            }
            ,
            e.deleteRule = function(t) {
                this.rules.splice(t, 1),
                this.length--
            }
            ,
            e.getRule = function(t) {
                return t < this.length ? this.rules[t] : ""
            }
            ,
            t
        }()
          , G = E
          , W = {
            isServer: !E,
            useCSSOMInjection: !T
        }
          , H = function() {
            function t(t, e, n) {
                void 0 === t && (t = b),
                void 0 === e && (e = {}),
                this.options = y({}, W, {}, t),
                this.gs = e,
                this.names = new Map(n),
                this.server = !!t.isServer,
                !this.server && E && G && (G = !1,
                function(t) {
                    for (var e = document.querySelectorAll(N), n = 0, r = e.length; n < r; n++) {
                        var i = e[n];
                        i && "active" !== i.getAttribute(x) && (F(t, i),
                        i.parentNode && i.parentNode.removeChild(i))
                    }
                }(this))
            }
            t.registerId = function(t) {
                return P(t)
            }
            ;
            var e = t.prototype;
            return e.reconstructWithOptions = function(e, n) {
                return void 0 === n && (n = !0),
                new t(y({}, this.options, {}, e),this.gs,n && this.names || void 0)
            }
            ,
            e.allocateGSInstance = function(t) {
                return this.gs[t] = (this.gs[t] || 0) + 1
            }
            ,
            e.getTag = function() {
                var t, e, n, r, i;
                return this.tag || (this.tag = (n = (e = this.options).isServer,
                r = e.useCSSOMInjection,
                i = e.target,
                t = n ? new B(i) : r ? new q(i) : new U(i),
                new A(t)))
            }
            ,
            e.hasNameForId = function(t, e) {
                return this.names.has(t) && this.names.get(t).has(e)
            }
            ,
            e.registerName = function(t, e) {
                if (P(t),
                this.names.has(t))
                    this.names.get(t).add(e);
                else {
                    var n = new Set;
                    n.add(e),
                    this.names.set(t, n)
                }
            }
            ,
            e.insertRules = function(t, e, n) {
                this.registerName(t, e),
                this.getTag().insertRules(P(t), n)
            }
            ,
            e.clearNames = function(t) {
                this.names.has(t) && this.names.get(t).clear()
            }
            ,
            e.clearRules = function(t) {
                this.getTag().clearGroup(P(t)),
                this.clearNames(t)
            }
            ,
            e.clearTag = function() {
                this.tag = void 0
            }
            ,
            e.toString = function() {
                return function(t) {
                    for (var e = t.getTag(), n = e.length, r = "", i = 0; i < n; i++) {
                        var a, o = (a = i,
                        D.get(a));
                        if (void 0 !== o) {
                            var s = t.names.get(o)
                              , l = e.getGroup(i);
                            if (s && l && s.size) {
                                var u = x + ".g" + i + '[id="' + o + '"]'
                                  , c = "";
                                void 0 !== s && s.forEach(function(t) {
                                    t.length > 0 && (c += t + ",")
                                }),
                                r += "" + l + u + '{content:"' + c + '"}/*!sc*/\n'
                            }
                        }
                    }
                    return r
                }(this)
            }
            ,
            t
        }()
          , Q = /(a)(d)/gi
          , $ = function(t) {
            return String.fromCharCode(t + (t > 25 ? 39 : 97))
        };
        function Y(t) {
            var e, n = "";
            for (e = Math.abs(t); e > 52; e = e / 52 | 0)
                n = $(e % 52) + n;
            return ($(e % 52) + n).replace(Q, "$1-$2")
        }
        var Z = function(t, e) {
            for (var n = e.length; n; )
                t = 33 * t ^ e.charCodeAt(--n);
            return t
        }
          , J = function(t) {
            return Z(5381, t)
        };
        function X(t) {
            for (var e = 0; e < t.length; e += 1) {
                var n = t[e];
                if (w(n) && !k(n))
                    return !1
            }
            return !0
        }
        var K = J("5.3.11")
          , tt = function() {
            function t(t, e, n) {
                this.rules = t,
                this.staticRulesId = "",
                this.isStatic = (void 0 === n || n.isStatic) && X(t),
                this.componentId = e,
                this.baseHash = Z(K, e),
                this.baseStyle = n,
                H.registerId(e)
            }
            return t.prototype.generateAndInjectStyles = function(t, e, n) {
                var r = this.componentId
                  , i = [];
                if (this.baseStyle && i.push(this.baseStyle.generateAndInjectStyles(t, e, n)),
                this.isStatic && !n.hash) {
                    if (this.staticRulesId && e.hasNameForId(r, this.staticRulesId))
                        i.push(this.staticRulesId);
                    else {
                        var a = tv(this.rules, t, e, n).join("")
                          , o = Y(Z(this.baseHash, a) >>> 0);
                        if (!e.hasNameForId(r, o)) {
                            var s = n(a, "." + o, void 0, r);
                            e.insertRules(r, o, s)
                        }
                        i.push(o),
                        this.staticRulesId = o
                    }
                } else {
                    for (var l = this.rules.length, u = Z(this.baseHash, n.hash), c = "", h = 0; h < l; h++) {
                        var d = this.rules[h];
                        if ("string" == typeof d)
                            c += d;
                        else if (d) {
                            var f = tv(d, t, e, n)
                              , p = Array.isArray(f) ? f.join("") : f;
                            u = Z(u, p + h),
                            c += p
                        }
                    }
                    if (c) {
                        var m = Y(u >>> 0);
                        if (!e.hasNameForId(r, m)) {
                            var y = n(c, "." + m, void 0, r);
                            e.insertRules(r, m, y)
                        }
                        i.push(m)
                    }
                }
                return i.join(" ")
            }
            ,
            t
        }()
          , te = /^\s*\/\/.*$/gm
          , tn = [":", "[", ".", "#"];
        function tr(t) {
            var e, n, r, i, a = void 0 === t ? b : t, o = a.options, s = void 0 === o ? b : o, l = a.plugins, c = void 0 === l ? _ : l, h = new u(s), d = [], f = function(t) {
                function e(e) {
                    if (e)
                        try {
                            t(e + "}")
                        } catch (t) {}
                }
                return function(n, r, i, a, o, s, l, u, c, h) {
                    switch (n) {
                    case 1:
                        if (0 === c && 64 === r.charCodeAt(0))
                            return t(r + ";"),
                            "";
                        break;
                    case 2:
                        if (0 === u)
                            return r + "/*|*/";
                        break;
                    case 3:
                        switch (u) {
                        case 102:
                        case 112:
                            return t(i[0] + r),
                            "";
                        default:
                            return r + (0 === h ? "/*|*/" : "")
                        }
                    case -2:
                        r.split("/*|*/}").forEach(e)
                    }
                }
            }(function(t) {
                d.push(t)
            }), p = function(t, r, a) {
                return 0 === r && -1 !== tn.indexOf(a[n.length]) || a.match(i) ? t : "." + e
            };
            function m(t, a, o, s) {
                void 0 === s && (s = "&");
                var l = t.replace(te, "")
                  , u = a && o ? o + " " + a + " { " + l + " }" : l;
                return e = s,
                r = RegExp("\\" + (n = a) + "\\b", "g"),
                i = RegExp("(\\" + n + "\\b){2,}"),
                h(o || !a ? "" : a, u)
            }
            return h.use([].concat(c, [function(t, e, i) {
                2 === t && i.length && i[0].lastIndexOf(n) > 0 && (i[0] = i[0].replace(r, p))
            }
            , f, function(t) {
                if (-2 === t) {
                    var e = d;
                    return d = [],
                    e
                }
            }
            ])),
            m.hash = c.length ? c.reduce(function(t, e) {
                return e.name || C(15),
                Z(t, e.name)
            }, 5381).toString() : "",
            m
        }
        var ti = o.createContext()
          , ta = (ti.Consumer,
        o.createContext())
          , to = (ta.Consumer,
        new H)
          , ts = tr();
        function tl() {
            return (0,
            o.useContext)(ti) || to
        }
        function tu() {
            return (0,
            o.useContext)(ta) || ts
        }
        function tc(t) {
            var e = (0,
            o.useState)(t.stylisPlugins)
              , n = e[0]
              , r = e[1]
              , i = tl()
              , a = (0,
            o.useMemo)(function() {
                var e = i;
                return t.sheet ? e = t.sheet : t.target && (e = e.reconstructWithOptions({
                    target: t.target
                }, !1)),
                t.disableCSSOMInjection && (e = e.reconstructWithOptions({
                    useCSSOMInjection: !1
                })),
                e
            }, [t.disableCSSOMInjection, t.sheet, t.target])
              , s = (0,
            o.useMemo)(function() {
                return tr({
                    options: {
                        prefix: !t.disableVendorPrefixes
                    },
                    plugins: n
                })
            }, [t.disableVendorPrefixes, n]);
            return (0,
            o.useEffect)(function() {
                l()(n, t.stylisPlugins) || r(t.stylisPlugins)
            }, [t.stylisPlugins]),
            o.createElement(ti.Provider, {
                value: a
            }, o.createElement(ta.Provider, {
                value: s
            }, t.children))
        }
        var th = function() {
            function t(t, e) {
                var n = this;
                this.inject = function(t, e) {
                    void 0 === e && (e = ts);
                    var r = n.name + e.hash;
                    t.hasNameForId(n.id, r) || t.insertRules(n.id, r, e(n.rules, r, "@keyframes"))
                }
                ,
                this.toString = function() {
                    return C(12, String(n.name))
                }
                ,
                this.name = t,
                this.id = "sc-keyframes-" + t,
                this.rules = e
            }
            return t.prototype.getName = function(t) {
                return void 0 === t && (t = ts),
                this.name + t.hash
            }
            ,
            t
        }()
          , td = /([A-Z])/
          , tf = /([A-Z])/g
          , tp = /^ms-/
          , tm = function(t) {
            return "-" + t.toLowerCase()
        };
        function ty(t) {
            return td.test(t) ? t.replace(tf, tm).replace(tp, "-ms-") : t
        }
        var tg = function(t) {
            return null == t || !1 === t || "" === t
        };
        function tv(t, e, n, r) {
            if (Array.isArray(t)) {
                for (var i, a = [], o = 0, s = t.length; o < s; o += 1)
                    "" !== (i = tv(t[o], e, n, r)) && (Array.isArray(i) ? a.push.apply(a, i) : a.push(i));
                return a
            }
            return tg(t) ? "" : k(t) ? "." + t.styledComponentId : w(t) ? "function" != typeof t || t.prototype && t.prototype.isReactComponent || !e ? t : tv(t(e), e, n, r) : t instanceof th ? n ? (t.inject(n, r),
            t.getName(r)) : t : v(t) ? function t(e, n) {
                var r, i = [];
                for (var a in e)
                    e.hasOwnProperty(a) && !tg(e[a]) && (Array.isArray(e[a]) && e[a].isCss || w(e[a]) ? i.push(ty(a) + ":", e[a], ";") : v(e[a]) ? i.push.apply(i, t(e[a], a)) : i.push(ty(a) + ": " + (null == (r = e[a]) || "boolean" == typeof r || "" === r ? "" : "number" != typeof r || 0 === r || a in c || a.startsWith("--") ? String(r).trim() : r + "px") + ";"));
                return n ? [n + " {"].concat(i, ["}"]) : i
            }(t) : t.toString()
        }
        var t_ = function(t) {
            return Array.isArray(t) && (t.isCss = !0),
            t
        };
        function tb(t) {
            for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                n[r - 1] = arguments[r];
            return w(t) || v(t) ? t_(tv(g(_, [t].concat(n)))) : 0 === n.length && 1 === t.length && "string" == typeof t[0] ? t : t_(tv(g(t, n)))
        }
        var tw = function(t, e, n) {
            return void 0 === n && (n = b),
            t.theme !== n.theme && t.theme || e || n.theme
        }
          , tS = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g
          , tk = /(^-|-$)/g;
        function tx(t) {
            return t.replace(tS, "-").replace(tk, "")
        }
        var tE = function(t) {
            return Y(J(t) >>> 0)
        };
        function tT(t) {
            return "string" == typeof t
        }
        var tO = function(t) {
            return "function" == typeof t || "object" == typeof t && null !== t && !Array.isArray(t)
        }
          , tC = o.createContext();
        function tA(t) {
            var e = (0,
            o.useContext)(tC)
              , n = (0,
            o.useMemo)(function() {
                var n;
                return (n = t.theme) ? w(n) ? n(e) : Array.isArray(n) || "object" != typeof n ? C(8) : e ? y({}, e, {}, n) : n : C(14)
            }, [t.theme, e]);
            return t.children ? o.createElement(tC.Provider, {
                value: n
            }, t.children) : null
        }
        tC.Consumer;
        var tR = {}
          , tD = function(t) {
            return function t(e, n, r) {
                if (void 0 === r && (r = b),
                !(0,
                a.isValidElementType)(n))
                    return C(1, String(n));
                var i = function() {
                    return e(n, r, tb.apply(void 0, arguments))
                };
                return i.withConfig = function(i) {
                    return t(e, n, y({}, r, {}, i))
                }
                ,
                i.attrs = function(i) {
                    return t(e, n, y({}, r, {
                        attrs: Array.prototype.concat(r.attrs, i).filter(Boolean)
                    }))
                }
                ,
                i
            }(function t(e, n, r) {
                var i = k(e)
                  , a = !tT(e)
                  , s = n.attrs
                  , l = void 0 === s ? _ : s
                  , u = n.componentId
                  , c = void 0 === u ? (x = n.displayName,
                E = n.parentComponentId,
                tR[T = "string" != typeof x ? "sc" : tx(x)] = (tR[T] || 0) + 1,
                O = T + "-" + tE("5.3.11" + T + tR[T]),
                E ? E + "-" + O : O) : u
                  , h = n.displayName
                  , f = void 0 === h ? tT(e) ? "styled." + e : "Styled(" + S(e) + ")" : h
                  , m = n.displayName && n.componentId ? tx(n.displayName) + "-" + n.componentId : n.componentId || c
                  , g = i && e.attrs ? Array.prototype.concat(e.attrs, l).filter(Boolean) : l
                  , v = n.shouldForwardProp;
                i && e.shouldForwardProp && (v = n.shouldForwardProp ? function(t, r, i) {
                    return e.shouldForwardProp(t, r, i) && n.shouldForwardProp(t, r, i)
                }
                : e.shouldForwardProp);
                var x, E, T, O, C, A = new tt(r,m,i ? e.componentStyle : void 0), R = A.isStatic && 0 === l.length, D = function(t, e) {
                    return function(t, e, n, r) {
                        var i, a, s, l, u, c = t.attrs, h = t.componentStyle, f = t.defaultProps, p = t.foldedComponentIds, m = t.shouldForwardProp, g = t.styledComponentId, v = t.target, _ = (void 0 === (i = tw(e, (0,
                        o.useContext)(tC), f) || b) && (i = b),
                        a = y({}, e, {
                            theme: i
                        }),
                        s = {},
                        c.forEach(function(t) {
                            var e, n, r, i = t;
                            for (e in w(i) && (i = i(a)),
                            i)
                                a[e] = s[e] = "className" === e ? (n = s[e],
                                r = i[e],
                                n && r ? n + " " + r : n || r) : i[e]
                        }),
                        [a, s]), S = _[0], k = _[1], x = (l = tl(),
                        u = tu(),
                        r ? h.generateAndInjectStyles(b, l, u) : h.generateAndInjectStyles(S, l, u)), E = k.$as || e.$as || k.as || e.as || v, T = tT(E), O = k !== e ? y({}, e, {}, k) : e, C = {};
                        for (var A in O)
                            "$" !== A[0] && "as" !== A && ("forwardedAs" === A ? C.as = O[A] : (m ? m(A, d, E) : !T || d(A)) && (C[A] = O[A]));
                        return e.style && k.style !== e.style && (C.style = y({}, e.style, {}, k.style)),
                        C.className = Array.prototype.concat(p, g, x !== g ? x : null, e.className, k.className).filter(Boolean).join(" "),
                        C.ref = n,
                        (0,
                        o.createElement)(E, C)
                    }(C, t, e, R)
                };
                return D.displayName = f,
                (C = o.forwardRef(D)).attrs = g,
                C.componentStyle = A,
                C.displayName = f,
                C.shouldForwardProp = v,
                C.foldedComponentIds = i ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : _,
                C.styledComponentId = m,
                C.target = i ? e.target : e,
                C.withComponent = function(e) {
                    var i = n.componentId
                      , a = function(t, e) {
                        if (null == t)
                            return {};
                        var n, r, i = {}, a = Object.keys(t);
                        for (r = 0; r < a.length; r++)
                            e.indexOf(n = a[r]) >= 0 || (i[n] = t[n]);
                        return i
                    }(n, ["componentId"])
                      , o = i && i + "-" + (tT(e) ? e : tx(S(e)));
                    return t(e, y({}, a, {
                        attrs: g,
                        componentId: o
                    }), r)
                }
                ,
                Object.defineProperty(C, "defaultProps", {
                    get: function() {
                        return this._foldedDefaultProps
                    },
                    set: function(t) {
                        this._foldedDefaultProps = i ? function t(e) {
                            for (var n = arguments.length, r = Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
                                r[i - 1] = arguments[i];
                            for (var a = 0; a < r.length; a++) {
                                var o = r[a];
                                if (tO(o))
                                    for (var s in o)
                                        "__proto__" !== s && "constructor" !== s && "prototype" !== s && function(e, n, r) {
                                            var i = e[r];
                                            tO(n) && tO(i) ? t(i, n) : e[r] = n
                                        }(e, o[s], s)
                            }
                            return e
                        }({}, e.defaultProps, t) : t
                    }
                }),
                Object.defineProperty(C, "toString", {
                    value: function() {
                        return "." + C.styledComponentId
                    }
                }),
                a && p()(C, e, {
                    attrs: !0,
                    componentStyle: !0,
                    displayName: !0,
                    foldedComponentIds: !0,
                    shouldForwardProp: !0,
                    styledComponentId: !0,
                    target: !0,
                    withComponent: !0
                }),
                C
            }, t)
        };
        ["a", "abbr", "address", "area", "article", "aside", "audio", "b", "base", "bdi", "bdo", "big", "blockquote", "body", "br", "button", "canvas", "caption", "cite", "code", "col", "colgroup", "data", "datalist", "dd", "del", "details", "dfn", "dialog", "div", "dl", "dt", "em", "embed", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "iframe", "img", "input", "ins", "kbd", "keygen", "label", "legend", "li", "link", "main", "map", "mark", "marquee", "menu", "menuitem", "meta", "meter", "nav", "noscript", "object", "ol", "optgroup", "option", "output", "p", "param", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "script", "section", "select", "small", "source", "span", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "time", "title", "tr", "track", "u", "ul", "var", "video", "wbr", "circle", "clipPath", "defs", "ellipse", "foreignObject", "g", "image", "line", "linearGradient", "marker", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "svg", "text", "textPath", "tspan"].forEach(function(t) {
            tD[t] = tD(t)
        });
        var tI = function() {
            function t(t, e) {
                this.rules = t,
                this.componentId = e,
                this.isStatic = X(t),
                H.registerId(this.componentId + 1)
            }
            var e = t.prototype;
            return e.createStyles = function(t, e, n, r) {
                var i = r(tv(this.rules, e, n, r).join(""), "")
                  , a = this.componentId + t;
                n.insertRules(a, a, i)
            }
            ,
            e.removeStyles = function(t, e) {
                e.clearRules(this.componentId + t)
            }
            ,
            e.renderStyles = function(t, e, n, r) {
                t > 2 && H.registerId(this.componentId + t),
                this.removeStyles(t, n),
                this.createStyles(t, e, n, r)
            }
            ,
            t
        }();
        function tP(t) {
            for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), r = 1; r < e; r++)
                n[r - 1] = arguments[r];
            var i = tb.apply(void 0, [t].concat(n))
              , a = "sc-global-" + tE(JSON.stringify(i))
              , s = new tI(i,a);
            function l(t) {
                var e = tl()
                  , n = tu()
                  , r = (0,
                o.useContext)(tC)
                  , i = (0,
                o.useRef)(e.allocateGSInstance(a)).current;
                return e.server && u(i, t, e, r, n),
                (0,
                o.useLayoutEffect)(function() {
                    if (!e.server)
                        return u(i, t, e, r, n),
                        function() {
                            return s.removeStyles(i, e)
                        }
                }, [i, t, e, r, n]),
                null
            }
            function u(t, e, n, r, i) {
                if (s.isStatic)
                    s.renderStyles(t, O, n, i);
                else {
                    var a = y({}, e, {
                        theme: tw(e, r, l.defaultProps)
                    });
                    s.renderStyles(t, a, n, i)
                }
            }
            return o.memo(l)
        }
        (i = (function() {
            var t = this;
            this._emitSheetCSS = function() {
                var e = t.instance.toString();
                if (!e)
                    return "";
                var n = V();
                return "<style " + [n && 'nonce="' + n + '"', x + '="true"', 'data-styled-version="5.3.11"'].filter(Boolean).join(" ") + ">" + e + "</style>"
            }
            ,
            this.getStyleTags = function() {
                return t.sealed ? C(2) : t._emitSheetCSS()
            }
            ,
            this.getStyleElement = function() {
                if (t.sealed)
                    return C(2);
                var e, n = ((e = {})[x] = "",
                e["data-styled-version"] = "5.3.11",
                e.dangerouslySetInnerHTML = {
                    __html: t.instance.toString()
                },
                e), r = V();
                return r && (n.nonce = r),
                [o.createElement("style", y({}, n, {
                    key: "sc-0-0"
                }))]
            }
            ,
            this.seal = function() {
                t.sealed = !0
            }
            ,
            this.instance = new H({
                isServer: !0
            }),
            this.sealed = !1
        }
        ).prototype).collectStyles = function(t) {
            return this.sealed ? C(2) : o.createElement(tc, {
                sheet: this.instance
            }, t)
        }
        ,
        i.interleaveWithNodeStream = function(t) {
            return C(3)
        }
        ;
        var tM = tD
    },
    2729: function(t, e, n) {
        "use strict";
        function r(t, e) {
            return e || (e = t.slice(0)),
            Object.freeze(Object.defineProperties(t, {
                raw: {
                    value: Object.freeze(e)
                }
            }))
        }
        n.d(e, {
            _: function() {
                return r
            }
        })
    },
    5480: function(t, e, n) {
        "use strict";
        let r;
        n.d(e, {
            v: function() {
                return tw
            }
        });
        var i, a = n(5487), o = n(6917);
        let s = {
            current: !1
        }
          , l = t => Array.isArray(t) && "number" == typeof t[0]
          , u = ([t,e,n,r]) => `cubic-bezier(${t}, ${e}, ${n}, ${r})`
          , c = {
            linear: "linear",
            ease: "ease",
            easeIn: "ease-in",
            easeOut: "ease-out",
            easeInOut: "ease-in-out",
            circIn: u([0, .65, .55, 1]),
            circOut: u([.55, 0, 1, .45]),
            backIn: u([.31, .01, .66, -.59]),
            backOut: u([.33, 1.53, .69, .99])
        };
        var h = n(1662);
        let d = (t, e, n) => (((1 - 3 * n + 3 * e) * t + (3 * n - 6 * e)) * t + 3 * e) * t;
        function f(t, e, n, r) {
            if (t === e && n === r)
                return h.Z;
            let i = e => (function(t, e, n, r, i) {
                let a, o;
                let s = 0;
                do
                    (a = d(o = e + (n - e) / 2, r, i) - t) > 0 ? n = o : e = o;
                while (Math.abs(a) > 1e-7 && ++s < 12);
                return o
            }
            )(e, 0, 1, t, n);
            return t => 0 === t || 1 === t ? t : d(i(t), e, r)
        }
        let p = f(.42, 0, 1, 1)
          , m = f(0, 0, .58, 1)
          , y = f(.42, 0, .58, 1)
          , g = t => Array.isArray(t) && "number" != typeof t[0];
        var v = n(7255)
          , _ = n(415)
          , b = n(5129);
        let w = f(.33, 1.53, .69, .99)
          , S = (0,
        b.M)(w)
          , k = (0,
        _.o)(S)
          , x = {
            linear: h.Z,
            easeIn: p,
            easeInOut: y,
            easeOut: m,
            circIn: v.Z7,
            circInOut: v.X7,
            circOut: v.Bn,
            backIn: S,
            backInOut: k,
            backOut: w,
            anticipate: t => (t *= 2) < 1 ? .5 * S(t) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
        }
          , E = t => {
            if (Array.isArray(t)) {
                (0,
                a.k)(4 === t.length, "Cubic bezier arrays must contain four numerical values.");
                let[e,n,r,i] = t;
                return f(e, n, r, i)
            }
            return "string" == typeof t ? ((0,
            a.k)(void 0 !== x[t], `Invalid easing type '${t}'`),
            x[t]) : t
        }
        ;
        var T = n(5385)
          , O = n(4169)
          , C = n(22);
        function A(t, e, n) {
            return (n < 0 && (n += 1),
            n > 1 && (n -= 1),
            n < 1 / 6) ? t + (e - t) * 6 * n : n < .5 ? e : n < 2 / 3 ? t + (e - t) * (2 / 3 - n) * 6 : t
        }
        var R = n(6382)
          , D = n(819)
          , I = n(3184);
        let P = (t, e, n) => {
            let r = t * t;
            return Math.sqrt(Math.max(0, n * (e * e - r) + r))
        }
          , M = [R.$, D.m, I.J]
          , N = t => M.find(e => e.test(t));
        function L(t) {
            let e = N(t);
            (0,
            a.k)(!!e, `'${t}' is not an animatable color. Use the equivalent color code instead.`);
            let n = e.parse(t);
            return e === I.J && (n = function({hue: t, saturation: e, lightness: n, alpha: r}) {
                t /= 360,
                n /= 100;
                let i = 0
                  , a = 0
                  , o = 0;
                if (e /= 100) {
                    let r = n < .5 ? n * (1 + e) : n + e - n * e
                      , s = 2 * n - r;
                    i = A(s, r, t + 1 / 3),
                    a = A(s, r, t),
                    o = A(s, r, t - 1 / 3)
                } else
                    i = a = o = n;
                return {
                    red: Math.round(255 * i),
                    green: Math.round(255 * a),
                    blue: Math.round(255 * o),
                    alpha: r
                }
            }(n)),
            n
        }
        let j = (t, e) => {
            let n = L(t)
              , r = L(e)
              , i = {
                ...n
            };
            return t => (i.red = P(n.red, r.red, t),
            i.green = P(n.green, r.green, t),
            i.blue = P(n.blue, r.blue, t),
            i.alpha = (0,
            C.C)(n.alpha, r.alpha, t),
            D.m.transform(i))
        }
        ;
        var F = n(3624)
          , V = n(1550);
        let z = (t, e) => n => `${n > 0 ? e : t}`;
        function q(t, e) {
            return "number" == typeof t ? n => (0,
            C.C)(t, e, n) : T.$.test(t) ? j(t, e) : t.startsWith("var(") ? z(t, e) : G(t, e)
        }
        let U = (t, e) => {
            let n = [...t]
              , r = n.length
              , i = t.map( (t, n) => q(t, e[n]));
            return t => {
                for (let e = 0; e < r; e++)
                    n[e] = i[e](t);
                return n
            }
        }
          , B = (t, e) => {
            let n = {
                ...t,
                ...e
            }
              , r = {};
            for (let i in n)
                void 0 !== t[i] && void 0 !== e[i] && (r[i] = q(t[i], e[i]));
            return t => {
                for (let e in r)
                    n[e] = r[e](t);
                return n
            }
        }
          , G = (t, e) => {
            let n = V.P.createTransformer(e)
              , r = (0,
            V.V)(t)
              , i = (0,
            V.V)(e)
              , o = r.numVars === i.numVars && r.numColors === i.numColors && r.numNumbers >= i.numNumbers;
            return o ? (0,
            F.z)(U(r.values, i.values), n) : ((0,
            a.K)(!0, `Complex values '${t}' and '${e}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),
            z(t, e))
        }
        ;
        var W = n(3967);
        let H = (t, e) => n => (0,
        C.C)(t, e, n);
        function Q(t, e, {clamp: n=!0, ease: r, mixer: i}={}) {
            let o = t.length;
            if ((0,
            a.k)(o === e.length, "Both input and output ranges must be the same length"),
            1 === o)
                return () => e[0];
            t[0] > t[o - 1] && (t = [...t].reverse(),
            e = [...e].reverse());
            let s = function(t, e, n) {
                let r = []
                  , i = n || function(t) {
                    if ("number" == typeof t)
                        ;
                    else if ("string" == typeof t)
                        return T.$.test(t) ? j : G;
                    else if (Array.isArray(t))
                        return U;
                    else if ("object" == typeof t)
                        return B;
                    return H
                }(t[0])
                  , a = t.length - 1;
                for (let n = 0; n < a; n++) {
                    let a = i(t[n], t[n + 1]);
                    if (e) {
                        let t = Array.isArray(e) ? e[n] || h.Z : e;
                        a = (0,
                        F.z)(t, a)
                    }
                    r.push(a)
                }
                return r
            }(e, r, i)
              , l = s.length
              , u = e => {
                let n = 0;
                if (l > 1)
                    for (; n < t.length - 2 && !(e < t[n + 1]); n++)
                        ;
                let r = (0,
                W.Y)(t[n], t[n + 1], e);
                return s[n](r)
            }
            ;
            return n ? e => u((0,
            O.u)(t[0], t[o - 1], e)) : u
        }
        function $({duration: t=300, keyframes: e, times: n, ease: r="easeInOut"}) {
            let i = g(r) ? r.map(E) : E(r)
              , a = {
                done: !1,
                value: e[0]
            }
              , o = (n && n.length === e.length ? n : function(t) {
                let e = [0];
                return function(t, e) {
                    let n = t[t.length - 1];
                    for (let r = 1; r <= e; r++) {
                        let i = (0,
                        W.Y)(0, e, r);
                        t.push((0,
                        C.C)(n, 1, i))
                    }
                }(e, t.length - 1),
                e
            }(e)).map(e => e * t)
              , s = Q(o, e, {
                ease: Array.isArray(i) ? i : e.map( () => i || y).splice(0, e.length - 1)
            });
            return {
                calculatedDuration: t,
                next: e => (a.value = s(e),
                a.done = e >= t,
                a)
            }
        }
        var Y = n(3038);
        function Z(t, e, n) {
            let r = Math.max(e - 5, 0);
            return (0,
            Y.R)(n - t(r), e - r)
        }
        function J(t, e) {
            return t * Math.sqrt(1 - e * e)
        }
        let X = ["duration", "bounce"]
          , K = ["stiffness", "damping", "mass"];
        function tt(t, e) {
            return e.some(e => void 0 !== t[e])
        }
        function te({keyframes: t, restDelta: e, restSpeed: n, ...r}) {
            let i;
            let s = t[0]
              , l = t[t.length - 1]
              , u = {
                done: !1,
                value: s
            }
              , {stiffness: c, damping: h, mass: d, velocity: f, duration: p, isResolvedFromDuration: m} = function(t) {
                let e = {
                    velocity: 0,
                    stiffness: 100,
                    damping: 10,
                    mass: 1,
                    isResolvedFromDuration: !1,
                    ...t
                };
                if (!tt(t, K) && tt(t, X)) {
                    let n = function({duration: t=800, bounce: e=.25, velocity: n=0, mass: r=1}) {
                        let i, s;
                        (0,
                        a.K)(t <= (0,
                        o.w)(10), "Spring duration must be 10 seconds or less");
                        let l = 1 - e;
                        l = (0,
                        O.u)(.05, 1, l),
                        t = (0,
                        O.u)(.01, 10, (0,
                        o.X)(t)),
                        l < 1 ? (i = e => {
                            let r = e * l
                              , i = r * t
                              , a = J(e, l);
                            return .001 - (r - n) / a * Math.exp(-i)
                        }
                        ,
                        s = e => {
                            let r = e * l
                              , a = r * t
                              , o = Math.pow(l, 2) * Math.pow(e, 2) * t
                              , s = J(Math.pow(e, 2), l)
                              , u = -i(e) + .001 > 0 ? -1 : 1;
                            return u * ((a * n + n - o) * Math.exp(-a)) / s
                        }
                        ) : (i = e => {
                            let r = Math.exp(-e * t)
                              , i = (e - n) * t + 1;
                            return -.001 + r * i
                        }
                        ,
                        s = e => {
                            let r = Math.exp(-e * t)
                              , i = (n - e) * (t * t);
                            return r * i
                        }
                        );
                        let u = 5 / t
                          , c = function(t, e, n) {
                            let r = n;
                            for (let n = 1; n < 12; n++)
                                r -= t(r) / e(r);
                            return r
                        }(i, s, u);
                        if (t = (0,
                        o.w)(t),
                        isNaN(c))
                            return {
                                stiffness: 100,
                                damping: 10,
                                duration: t
                            };
                        {
                            let e = Math.pow(c, 2) * r;
                            return {
                                stiffness: e,
                                damping: 2 * l * Math.sqrt(r * e),
                                duration: t
                            }
                        }
                    }(t);
                    (e = {
                        ...e,
                        ...n,
                        velocity: 0,
                        mass: 1
                    }).isResolvedFromDuration = !0
                }
                return e
            }(r)
              , y = f ? -(0,
            o.X)(f) : 0
              , g = h / (2 * Math.sqrt(c * d))
              , v = l - s
              , _ = (0,
            o.X)(Math.sqrt(c / d))
              , b = 5 > Math.abs(v);
            if (n || (n = b ? .01 : 2),
            e || (e = b ? .005 : .5),
            g < 1) {
                let t = J(_, g);
                i = e => {
                    let n = Math.exp(-g * _ * e);
                    return l - n * ((y + g * _ * v) / t * Math.sin(t * e) + v * Math.cos(t * e))
                }
            } else if (1 === g)
                i = t => l - Math.exp(-_ * t) * (v + (y + _ * v) * t);
            else {
                let t = _ * Math.sqrt(g * g - 1);
                i = e => {
                    let n = Math.exp(-g * _ * e)
                      , r = Math.min(t * e, 300);
                    return l - n * ((y + g * _ * v) * Math.sinh(r) + t * v * Math.cosh(r)) / t
                }
            }
            return {
                calculatedDuration: m && p || null,
                next: t => {
                    let r = i(t);
                    if (m)
                        u.done = t >= p;
                    else {
                        let a = y;
                        0 !== t && (a = g < 1 ? Z(i, t, r) : 0);
                        let o = Math.abs(a) <= n
                          , s = Math.abs(l - r) <= e;
                        u.done = o && s
                    }
                    return u.value = u.done ? l : r,
                    u
                }
            }
        }
        function tn({keyframes: t, velocity: e=0, power: n=.8, timeConstant: r=325, bounceDamping: i=10, bounceStiffness: a=500, modifyTarget: o, min: s, max: l, restDelta: u=.5, restSpeed: c}) {
            let h, d;
            let f = t[0]
              , p = {
                done: !1,
                value: f
            }
              , m = t => void 0 !== s && t < s || void 0 !== l && t > l
              , y = t => void 0 === s ? l : void 0 === l ? s : Math.abs(s - t) < Math.abs(l - t) ? s : l
              , g = n * e
              , v = f + g
              , _ = void 0 === o ? v : o(v);
            _ !== v && (g = _ - f);
            let b = t => -g * Math.exp(-t / r)
              , w = t => _ + b(t)
              , S = t => {
                let e = b(t)
                  , n = w(t);
                p.done = Math.abs(e) <= u,
                p.value = p.done ? _ : n
            }
              , k = t => {
                m(p.value) && (h = t,
                d = te({
                    keyframes: [p.value, y(p.value)],
                    velocity: Z(w, t, p.value),
                    damping: i,
                    stiffness: a,
                    restDelta: u,
                    restSpeed: c
                }))
            }
            ;
            return k(0),
            {
                calculatedDuration: null,
                next: t => {
                    let e = !1;
                    return (d || void 0 !== h || (e = !0,
                    S(t),
                    k(t)),
                    void 0 !== h && t > h) ? d.next(t - h) : (e || S(t),
                    p)
                }
            }
        }
        var tr = n(2074);
        let ti = t => {
            let e = ({timestamp: e}) => t(e);
            return {
                start: () => tr.Wi.update(e, !0),
                stop: () => (0,
                tr.Pn)(e),
                now: () => tr.frameData.isProcessing ? tr.frameData.timestamp : performance.now()
            }
        }
        ;
        function ta(t) {
            let e = 0
              , n = t.next(e);
            for (; !n.done && e < 2e4; )
                e += 50,
                n = t.next(e);
            return e >= 2e4 ? 1 / 0 : e
        }
        let to = {
            decay: tn,
            inertia: tn,
            tween: $,
            keyframes: $,
            spring: te
        };
        function ts({autoplay: t=!0, delay: e=0, driver: n=ti, keyframes: r, type: i="keyframes", repeat: a=0, repeatDelay: s=0, repeatType: l="loop", onPlay: u, onStop: c, onComplete: h, onUpdate: d, ...f}) {
            let p, m, y, g, v, _ = 1, b = !1, w = () => {
                m = new Promise(t => {
                    p = t
                }
                )
            }
            ;
            w();
            let S = to[i] || $;
            S !== $ && "number" != typeof r[0] && (g = Q([0, 100], r, {
                clamp: !1
            }),
            r = [0, 100]);
            let k = S({
                ...f,
                keyframes: r
            });
            "mirror" === l && (v = S({
                ...f,
                keyframes: [...r].reverse(),
                velocity: -(f.velocity || 0)
            }));
            let x = "idle"
              , E = null
              , T = null
              , C = null;
            null === k.calculatedDuration && a && (k.calculatedDuration = ta(k));
            let {calculatedDuration: A} = k
              , R = 1 / 0
              , D = 1 / 0;
            null !== A && (D = (R = A + s) * (a + 1) - s);
            let I = 0
              , P = t => {
                if (null === T)
                    return;
                _ > 0 && (T = Math.min(T, t)),
                _ < 0 && (T = Math.min(t - D / _, T)),
                I = null !== E ? E : Math.round(t - T) * _;
                let n = I - e * (_ >= 0 ? 1 : -1)
                  , i = _ >= 0 ? n < 0 : n > D;
                I = Math.max(n, 0),
                "finished" === x && null === E && (I = D);
                let o = I
                  , u = k;
                if (a) {
                    let t = I / R
                      , e = Math.floor(t)
                      , n = t % 1;
                    !n && t >= 1 && (n = 1),
                    1 === n && e--,
                    e = Math.min(e, a + 1);
                    let r = !!(e % 2);
                    r && ("reverse" === l ? (n = 1 - n,
                    s && (n -= s / R)) : "mirror" === l && (u = v));
                    let i = (0,
                    O.u)(0, 1, n);
                    I > D && (i = "reverse" === l && r ? 1 : 0),
                    o = i * R
                }
                let c = i ? {
                    done: !1,
                    value: r[0]
                } : u.next(o);
                g && (c.value = g(c.value));
                let {done: h} = c;
                i || null === A || (h = _ >= 0 ? I >= D : I <= 0);
                let f = null === E && ("finished" === x || "running" === x && h);
                return d && d(c.value),
                f && L(),
                c
            }
              , M = () => {
                y && y.stop(),
                y = void 0
            }
              , N = () => {
                x = "idle",
                M(),
                p(),
                w(),
                T = C = null
            }
              , L = () => {
                x = "finished",
                h && h(),
                M(),
                p()
            }
              , j = () => {
                if (b)
                    return;
                y || (y = n(P));
                let t = y.now();
                u && u(),
                null !== E ? T = t - E : T && "finished" !== x || (T = t),
                "finished" === x && w(),
                C = T,
                E = null,
                x = "running",
                y.start()
            }
            ;
            t && j();
            let F = {
                then: (t, e) => m.then(t, e),
                get time() {
                    return (0,
                    o.X)(I)
                },
                set time(newTime) {
                    I = newTime = (0,
                    o.w)(newTime),
                    null === E && y && 0 !== _ ? T = y.now() - newTime / _ : E = newTime
                },
                get duration() {
                    let t = null === k.calculatedDuration ? ta(k) : k.calculatedDuration;
                    return (0,
                    o.X)(t)
                },
                get speed() {
                    return _
                },
                set speed(newSpeed) {
                    if (newSpeed === _ || !y)
                        return;
                    _ = newSpeed,
                    F.time = (0,
                    o.X)(I)
                },
                get state() {
                    return x
                },
                play: j,
                pause: () => {
                    x = "paused",
                    E = I
                }
                ,
                stop: () => {
                    b = !0,
                    "idle" !== x && (x = "idle",
                    c && c(),
                    N())
                }
                ,
                cancel: () => {
                    null !== C && P(C),
                    N()
                }
                ,
                complete: () => {
                    x = "finished"
                }
                ,
                sample: t => (T = 0,
                P(t))
            };
            return F
        }
        let tl = (i = () => Object.hasOwnProperty.call(Element.prototype, "animate"),
        () => (void 0 === r && (r = i()),
        r))
          , tu = new Set(["opacity", "clipPath", "filter", "transform", "backgroundColor"])
          , tc = (t, e) => "spring" === e.type || "backgroundColor" === t || !function t(e) {
            return !!(!e || "string" == typeof e && c[e] || l(e) || Array.isArray(e) && e.every(t))
        }(e.ease);
        var th = n(4714);
        let td = {
            type: "spring",
            stiffness: 500,
            damping: 25,
            restSpeed: 10
        }
          , tf = t => ({
            type: "spring",
            stiffness: 550,
            damping: 0 === t ? 2 * Math.sqrt(550) : 30,
            restSpeed: 10
        })
          , tp = {
            type: "keyframes",
            duration: .8
        }
          , tm = {
            type: "keyframes",
            ease: [.25, .1, .35, 1],
            duration: .3
        }
          , ty = (t, {keyframes: e}) => e.length > 2 ? tp : th.G.has(t) ? t.startsWith("scale") ? tf(e[1]) : td : tm
          , tg = (t, e) => "zIndex" !== t && !!("number" == typeof e || Array.isArray(e) || "string" == typeof e && (V.P.test(e) || "0" === e) && !e.startsWith("url("));
        var tv = n(9135)
          , t_ = n(681)
          , tb = n(1056);
        let tw = (t, e, n, r={}) => i => {
            let d = (0,
            tb.e)(r, t) || {}
              , f = d.delay || r.delay || 0
              , {elapsed: p=0} = r;
            p -= (0,
            o.w)(f);
            let m = function(t, e, n, r) {
                let i, a;
                let o = tg(e, n);
                i = Array.isArray(n) ? [...n] : [null, n];
                let s = void 0 !== r.from ? r.from : t.get()
                  , l = [];
                for (let t = 0; t < i.length; t++) {
                    var u;
                    null === i[t] && (i[t] = 0 === t ? s : i[t - 1]),
                    ("number" == typeof (u = i[t]) ? 0 === u : null !== u ? "none" === u || "0" === u || (0,
                    t_.W)(u) : void 0) && l.push(t),
                    "string" == typeof i[t] && "none" !== i[t] && "0" !== i[t] && (a = i[t])
                }
                if (o && l.length && a)
                    for (let t = 0; t < l.length; t++) {
                        let n = l[t];
                        i[n] = (0,
                        tv.T)(e, a)
                    }
                return i
            }(e, t, n, d)
              , y = m[0]
              , g = m[m.length - 1]
              , v = tg(t, y)
              , _ = tg(t, g);
            (0,
            a.K)(v === _, `You are trying to animate ${t} from "${y}" to "${g}". ${y} is not an animatable value - to enable this animation set ${y} to a value animatable to ${g} via the \`style\` property.`);
            let b = {
                keyframes: m,
                velocity: e.getVelocity(),
                ease: "easeOut",
                ...d,
                delay: -p,
                onUpdate: t => {
                    e.set(t),
                    d.onUpdate && d.onUpdate(t)
                }
                ,
                onComplete: () => {
                    i(),
                    d.onComplete && d.onComplete()
                }
            };
            if ((0,
            tb.r)(d) || (b = {
                ...b,
                ...ty(t, b)
            }),
            b.duration && (b.duration = (0,
            o.w)(b.duration)),
            b.repeatDelay && (b.repeatDelay = (0,
            o.w)(b.repeatDelay)),
            !v || !_ || s.current || !1 === d.type)
                return function({keyframes: t, delay: e, onUpdate: n, onComplete: r}) {
                    let i = () => (n && n(t[t.length - 1]),
                    r && r(),
                    {
                        time: 0,
                        speed: 1,
                        duration: 0,
                        play: h.Z,
                        pause: h.Z,
                        stop: h.Z,
                        then: t => (t(),
                        Promise.resolve()),
                        cancel: h.Z,
                        complete: h.Z
                    });
                    return e ? ts({
                        keyframes: [0, 1],
                        duration: 0,
                        delay: e,
                        onComplete: i
                    }) : i()
                }(s.current ? {
                    ...b,
                    delay: 0
                } : b);
            if (e.owner && e.owner.current instanceof HTMLElement && !e.owner.getProps().onUpdate) {
                let n = function(t, e, {onUpdate: n, onComplete: r, ...i}) {
                    let a, s;
                    let d = tl() && tu.has(e) && !i.repeatDelay && "mirror" !== i.repeatType && 0 !== i.damping && "inertia" !== i.type;
                    if (!d)
                        return !1;
                    let f = !1
                      , p = () => {
                        s = new Promise(t => {
                            a = t
                        }
                        )
                    }
                    ;
                    p();
                    let {keyframes: m, duration: y=300, ease: g, times: v} = i;
                    if (tc(e, i)) {
                        let t = ts({
                            ...i,
                            repeat: 0,
                            delay: 0
                        })
                          , e = {
                            done: !1,
                            value: m[0]
                        }
                          , n = []
                          , r = 0;
                        for (; !e.done && r < 2e4; )
                            n.push((e = t.sample(r)).value),
                            r += 10;
                        v = void 0,
                        m = n,
                        y = r - 10,
                        g = "linear"
                    }
                    let _ = function(t, e, n, {delay: r=0, duration: i, repeat: a=0, repeatType: o="loop", ease: s, times: h}={}) {
                        let d = {
                            [e]: n
                        };
                        h && (d.offset = h);
                        let f = function t(e) {
                            if (e)
                                return l(e) ? u(e) : Array.isArray(e) ? e.map(t) : c[e]
                        }(s);
                        return Array.isArray(f) && (d.easing = f),
                        t.animate(d, {
                            delay: r,
                            duration: i,
                            easing: Array.isArray(f) ? "linear" : f,
                            fill: "both",
                            iterations: a + 1,
                            direction: "reverse" === o ? "alternate" : "normal"
                        })
                    }(t.owner.current, e, m, {
                        ...i,
                        duration: y,
                        ease: g,
                        times: v
                    })
                      , b = () => _.cancel()
                      , w = () => {
                        tr.Wi.update(b),
                        a(),
                        p()
                    }
                    ;
                    return _.onfinish = () => {
                        t.set(function(t, {repeat: e, repeatType: n="loop"}) {
                            let r = e && "loop" !== n && e % 2 == 1 ? 0 : t.length - 1;
                            return t[r]
                        }(m, i)),
                        r && r(),
                        w()
                    }
                    ,
                    {
                        then: (t, e) => s.then(t, e),
                        attachTimeline: t => (_.timeline = t,
                        _.onfinish = null,
                        h.Z),
                        get time() {
                            return (0,
                            o.X)(_.currentTime || 0)
                        },
                        set time(newTime) {
                            _.currentTime = (0,
                            o.w)(newTime)
                        },
                        get speed() {
                            return _.playbackRate
                        },
                        set speed(newSpeed) {
                            _.playbackRate = newSpeed
                        },
                        get duration() {
                            return (0,
                            o.X)(y)
                        },
                        play: () => {
                            f || (_.play(),
                            (0,
                            tr.Pn)(b))
                        }
                        ,
                        pause: () => _.pause(),
                        stop: () => {
                            if (f = !0,
                            "idle" === _.playState)
                                return;
                            let {currentTime: e} = _;
                            if (e) {
                                let n = ts({
                                    ...i,
                                    autoplay: !1
                                });
                                t.setWithVelocity(n.sample(e - 10).value, n.sample(e).value, 10)
                            }
                            w()
                        }
                        ,
                        complete: () => _.finish(),
                        cancel: w
                    }
                }(e, t, b);
                if (n)
                    return n
            }
            return ts(b)
        }
    },
    4917: function(t, e, n) {
        "use strict";
        n.d(e, {
            d: function() {
                return p
            }
        });
        var r = n(2248)
          , i = n(4714)
          , a = n(3193);
        let o = "data-" + (0,
        a.D)("framerAppearId");
        var s = n(5480)
          , l = n(2490)
          , u = n(8172)
          , c = n(2074);
        function h(t, e, {delay: n=0, transitionOverride: r, type: a}={}) {
            let {transition: h=t.getDefaultTransition(), transitionEnd: d, ...f} = t.makeTargetAnimatable(e)
              , p = t.getValue("willChange");
            r && (h = r);
            let m = []
              , y = a && t.animationState && t.animationState.getState()[a];
            for (let e in f) {
                let r = t.getValue(e)
                  , a = f[e];
                if (!r || void 0 === a || y && function({protectedKeys: t, needsAnimating: e}, n) {
                    let r = t.hasOwnProperty(n) && !0 !== e[n];
                    return e[n] = !1,
                    r
                }(y, e))
                    continue;
                let u = {
                    delay: n,
                    elapsed: 0,
                    ...h
                };
                if (window.HandoffAppearAnimations && !r.hasAnimated) {
                    let n = t.getProps()[o];
                    n && (u.elapsed = window.HandoffAppearAnimations(n, e, r, c.Wi))
                }
                r.start((0,
                s.v)(e, r, a, t.shouldReduceMotion && i.G.has(e) ? {
                    type: !1
                } : u));
                let d = r.animation;
                (0,
                l.L)(p) && (p.add(e),
                d.then( () => p.remove(e))),
                m.push(d)
            }
            return d && Promise.all(m).then( () => {
                d && (0,
                u.CD)(t, d)
            }
            ),
            m
        }
        function d(t, e, n={}) {
            let i = (0,
            r.x)(t, e, n.custom)
              , {transition: a=t.getDefaultTransition() || {}} = i || {};
            n.transitionOverride && (a = n.transitionOverride);
            let o = i ? () => Promise.all(h(t, i, n)) : () => Promise.resolve()
              , s = t.variantChildren && t.variantChildren.size ? (r=0) => {
                let {delayChildren: i=0, staggerChildren: o, staggerDirection: s} = a;
                return function(t, e, n=0, r=0, i=1, a) {
                    let o = []
                      , s = (t.variantChildren.size - 1) * r
                      , l = 1 === i ? (t=0) => t * r : (t=0) => s - t * r;
                    return Array.from(t.variantChildren).sort(f).forEach( (t, r) => {
                        t.notify("AnimationStart", e),
                        o.push(d(t, e, {
                            ...a,
                            delay: n + l(r)
                        }).then( () => t.notify("AnimationComplete", e)))
                    }
                    ),
                    Promise.all(o)
                }(t, e, i + r, o, s, n)
            }
            : () => Promise.resolve()
              , {when: l} = a;
            if (!l)
                return Promise.all([o(), s(n.delay)]);
            {
                let[t,e] = "beforeChildren" === l ? [o, s] : [s, o];
                return t().then( () => e())
            }
        }
        function f(t, e) {
            return t.sortNodePosition(e)
        }
        function p(t, e, n={}) {
            let i;
            if (t.notify("AnimationStart", e),
            Array.isArray(e)) {
                let r = e.map(e => d(t, e, n));
                i = Promise.all(r)
            } else if ("string" == typeof e)
                i = d(t, e, n);
            else {
                let a = "function" == typeof e ? (0,
                r.x)(t, e, n.custom) : e;
                i = Promise.all(h(t, a, n))
            }
            return i.then( () => t.notify("AnimationComplete", e))
        }
    },
    8488: function(t, e, n) {
        "use strict";
        n.d(e, {
            C: function() {
                return r
            }
        });
        let r = t => Array.isArray(t)
    },
    1056: function(t, e, n) {
        "use strict";
        function r({when: t, delay: e, delayChildren: n, staggerChildren: r, staggerDirection: i, repeat: a, repeatType: o, repeatDelay: s, from: l, elapsed: u, ...c}) {
            return !!Object.keys(c).length
        }
        function i(t, e) {
            return t[e] || t.default || t
        }
        n.d(e, {
            e: function() {
                return i
            },
            r: function() {
                return r
            }
        })
    },
    7255: function(t, e, n) {
        "use strict";
        n.d(e, {
            Bn: function() {
                return o
            },
            X7: function() {
                return s
            },
            Z7: function() {
                return a
            }
        });
        var r = n(415)
          , i = n(5129);
        let a = t => 1 - Math.sin(Math.acos(t))
          , o = (0,
        i.M)(a)
          , s = (0,
        r.o)(o)
    },
    415: function(t, e, n) {
        "use strict";
        n.d(e, {
            o: function() {
                return r
            }
        });
        let r = t => e => e <= .5 ? t(2 * e) / 2 : (2 - t(2 * (1 - e))) / 2
    },
    5129: function(t, e, n) {
        "use strict";
        n.d(e, {
            M: function() {
                return r
            }
        });
        let r = t => e => 1 - t(1 - e)
    },
    2074: function(t, e, n) {
        "use strict";
        n.d(e, {
            Pn: function() {
                return o
            },
            Wi: function() {
                return a
            },
            frameData: function() {
                return s
            },
            S6: function() {
                return l
            }
        });
        var r = n(1662);
        let i = ["prepare", "read", "update", "preRender", "render", "postRender"]
          , {schedule: a, cancel: o, state: s, steps: l} = function(t, e) {
            let n = !1
              , r = !0
              , a = {
                delta: 0,
                timestamp: 0,
                isProcessing: !1
            }
              , o = i.reduce( (t, e) => (t[e] = function(t) {
                let e = []
                  , n = []
                  , r = 0
                  , i = !1
                  , a = !1
                  , o = new WeakSet
                  , s = {
                    schedule: (t, a=!1, s=!1) => {
                        let l = s && i
                          , u = l ? e : n;
                        return a && o.add(t),
                        -1 === u.indexOf(t) && (u.push(t),
                        l && i && (r = e.length)),
                        t
                    }
                    ,
                    cancel: t => {
                        let e = n.indexOf(t);
                        -1 !== e && n.splice(e, 1),
                        o.delete(t)
                    }
                    ,
                    process: l => {
                        if (i) {
                            a = !0;
                            return
                        }
                        if (i = !0,
                        [e,n] = [n, e],
                        n.length = 0,
                        r = e.length)
                            for (let n = 0; n < r; n++) {
                                let r = e[n];
                                r(l),
                                o.has(r) && (s.schedule(r),
                                t())
                            }
                        i = !1,
                        a && (a = !1,
                        s.process(l))
                    }
                };
                return s
            }( () => n = !0),
            t), {})
              , s = t => o[t].process(a)
              , l = () => {
                let o = performance.now();
                n = !1,
                a.delta = r ? 1e3 / 60 : Math.max(Math.min(o - a.timestamp, 40), 1),
                a.timestamp = o,
                a.isProcessing = !0,
                i.forEach(s),
                a.isProcessing = !1,
                n && e && (r = !1,
                t(l))
            }
              , u = () => {
                n = !0,
                r = !0,
                a.isProcessing || t(l)
            }
              , c = i.reduce( (t, e) => {
                let r = o[e];
                return t[e] = (t, e=!1, i=!1) => (n || u(),
                r.schedule(t, e, i)),
                t
            }
            , {});
            return {
                schedule: c,
                cancel: t => i.forEach(e => o[e].cancel(t)),
                state: a,
                steps: o
            }
        }("undefined" != typeof requestAnimationFrame ? requestAnimationFrame : r.Z, !0)
    },
    7740: function(t, e, n) {
        "use strict";
        n.d(e, {
            E: function() {
                return nK
            }
        });
        var r, i = n(7294);
        let a = (0,
        i.createContext)({
            transformPagePoint: t => t,
            isStatic: !1,
            reducedMotion: "never"
        })
          , o = (0,
        i.createContext)({})
          , s = (0,
        i.createContext)(null);
        var l = n(8868);
        let u = (0,
        i.createContext)({
            strict: !1
        });
        function c(t) {
            return "object" == typeof t && Object.prototype.hasOwnProperty.call(t, "current")
        }
        function h(t) {
            return "string" == typeof t || Array.isArray(t)
        }
        function d(t) {
            return "object" == typeof t && "function" == typeof t.start
        }
        let f = ["animate", "whileInView", "whileFocus", "whileHover", "whileTap", "whileDrag", "exit"]
          , p = ["initial", ...f];
        function m(t) {
            return d(t.animate) || p.some(e => h(t[e]))
        }
        function y(t) {
            return !!(m(t) || t.variants)
        }
        function g(t) {
            return Array.isArray(t) ? t.join(" ") : t
        }
        let v = {
            animation: ["animate", "variants", "whileHover", "whileTap", "exit", "whileInView", "whileFocus", "whileDrag"],
            exit: ["exit"],
            drag: ["drag", "dragControls"],
            focus: ["whileFocus"],
            hover: ["whileHover", "onHoverStart", "onHoverEnd"],
            tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
            pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
            inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
            layout: ["layout", "layoutId"]
        }
          , _ = {};
        for (let t in v)
            _[t] = {
                isEnabled: e => v[t].some(t => !!e[t])
            };
        var b = n(1741);
        let w = (0,
        i.createContext)({})
          , S = (0,
        i.createContext)({})
          , k = Symbol.for("motionComponentSymbol")
          , x = ["animate", "circle", "defs", "desc", "ellipse", "g", "image", "line", "filter", "marker", "mask", "metadata", "path", "pattern", "polygon", "polyline", "rect", "stop", "switch", "symbol", "svg", "text", "tspan", "use", "view"];
        function E(t) {
            if ("string" != typeof t || t.includes("-"))
                ;
            else if (x.indexOf(t) > -1 || /[A-Z]/.test(t))
                return !0;
            return !1
        }
        let T = {};
        var O = n(4714);
        function C(t, {layout: e, layoutId: n}) {
            return O.G.has(t) || t.startsWith("origin") || (e || void 0 !== n) && (!!T[t] || "opacity" === t)
        }
        var A = n(406);
        let R = {
            x: "translateX",
            y: "translateY",
            z: "translateZ",
            transformPerspective: "perspective"
        }
          , D = O._.length;
        var I = n(7630);
        let P = (t, e) => e && "number" == typeof t ? e.transform(t) : t;
        var M = n(6173);
        function N(t, e, n, r) {
            let {style: i, vars: a, transform: o, transformOrigin: s} = t
              , l = !1
              , u = !1
              , c = !0;
            for (let t in e) {
                let n = e[t];
                if ((0,
                I.f9)(t)) {
                    a[t] = n;
                    continue
                }
                let r = M.j[t]
                  , h = P(n, r);
                if (O.G.has(t)) {
                    if (l = !0,
                    o[t] = h,
                    !c)
                        continue;
                    n !== (r.default || 0) && (c = !1)
                } else
                    t.startsWith("origin") ? (u = !0,
                    s[t] = h) : i[t] = h
            }
            if (!e.transform && (l || r ? i.transform = function(t, {enableHardwareAcceleration: e=!0, allowTransformNone: n=!0}, r, i) {
                let a = "";
                for (let e = 0; e < D; e++) {
                    let n = O._[e];
                    if (void 0 !== t[n]) {
                        let e = R[n] || n;
                        a += `${e}(${t[n]}) `
                    }
                }
                return e && !t.z && (a += "translateZ(0)"),
                a = a.trim(),
                i ? a = i(t, r ? "" : a) : n && r && (a = "none"),
                a
            }(t.transform, n, c, r) : i.transform && (i.transform = "none")),
            u) {
                let {originX: t="50%", originY: e="50%", originZ: n=0} = s;
                i.transformOrigin = `${t} ${e} ${n}`
            }
        }
        let L = () => ({
            style: {},
            transform: {},
            transformOrigin: {},
            vars: {}
        });
        function j(t, e, n) {
            for (let r in e)
                (0,
                A.i)(e[r]) || C(r, n) || (t[r] = e[r])
        }
        function F(t, e, n) {
            let r = {}
              , a = function(t, e, n) {
                let r = t.style || {}
                  , a = {};
                return j(a, r, t),
                Object.assign(a, function({transformTemplate: t}, e, n) {
                    return (0,
                    i.useMemo)( () => {
                        let r = L();
                        return N(r, e, {
                            enableHardwareAcceleration: !n
                        }, t),
                        Object.assign({}, r.vars, r.style)
                    }
                    , [e])
                }(t, e, n)),
                t.transformValues ? t.transformValues(a) : a
            }(t, e, n);
            return t.drag && !1 !== t.dragListener && (r.draggable = !1,
            a.userSelect = a.WebkitUserSelect = a.WebkitTouchCallout = "none",
            a.touchAction = !0 === t.drag ? "none" : `pan-${"x" === t.drag ? "y" : "x"}`),
            void 0 === t.tabIndex && (t.onTap || t.onTapStart || t.whileTap) && (r.tabIndex = 0),
            r.style = a,
            r
        }
        let V = new Set(["animate", "exit", "variants", "initial", "style", "values", "variants", "transition", "transformTemplate", "transformValues", "custom", "inherit", "onLayoutAnimationStart", "onLayoutAnimationComplete", "onLayoutMeasure", "onBeforeLayoutMeasure", "onAnimationStart", "onAnimationComplete", "onUpdate", "onDragStart", "onDrag", "onDragEnd", "onMeasureDragConstraints", "onDirectionLock", "onDragTransitionEnd", "_dragX", "_dragY", "onHoverStart", "onHoverEnd", "onViewportEnter", "onViewportLeave", "ignoreStrict", "viewport"]);
        function z(t) {
            return t.startsWith("while") || t.startsWith("drag") && "draggable" !== t || t.startsWith("layout") || t.startsWith("onTap") || t.startsWith("onPan") || V.has(t)
        }
        let q = t => !z(t);
        try {
            (r = require("@emotion/is-prop-valid").default) && (q = t => t.startsWith("on") ? !z(t) : r(t))
        } catch (t) {}
        var U = n(6190);
        function B(t, e, n) {
            return "string" == typeof t ? t : U.px.transform(e + n * t)
        }
        let G = {
            offset: "stroke-dashoffset",
            array: "stroke-dasharray"
        }
          , W = {
            offset: "strokeDashoffset",
            array: "strokeDasharray"
        };
        function H(t, {attrX: e, attrY: n, attrScale: r, originX: i, originY: a, pathLength: o, pathSpacing: s=1, pathOffset: l=0, ...u}, c, h, d) {
            if (N(t, u, c, d),
            h) {
                t.style.viewBox && (t.attrs.viewBox = t.style.viewBox);
                return
            }
            t.attrs = t.style,
            t.style = {};
            let {attrs: f, style: p, dimensions: m} = t;
            f.transform && (m && (p.transform = f.transform),
            delete f.transform),
            m && (void 0 !== i || void 0 !== a || p.transform) && (p.transformOrigin = function(t, e, n) {
                let r = B(e, t.x, t.width)
                  , i = B(n, t.y, t.height);
                return `${r} ${i}`
            }(m, void 0 !== i ? i : .5, void 0 !== a ? a : .5)),
            void 0 !== e && (f.x = e),
            void 0 !== n && (f.y = n),
            void 0 !== r && (f.scale = r),
            void 0 !== o && function(t, e, n=1, r=0, i=!0) {
                t.pathLength = 1;
                let a = i ? G : W;
                t[a.offset] = U.px.transform(-r);
                let o = U.px.transform(e)
                  , s = U.px.transform(n);
                t[a.array] = `${o} ${s}`
            }(f, o, s, l, !1)
        }
        let Q = () => ({
            ...L(),
            attrs: {}
        })
          , $ = t => "string" == typeof t && "svg" === t.toLowerCase();
        function Y(t, e, n, r) {
            let a = (0,
            i.useMemo)( () => {
                let n = Q();
                return H(n, e, {
                    enableHardwareAcceleration: !1
                }, $(r), t.transformTemplate),
                {
                    ...n.attrs,
                    style: {
                        ...n.style
                    }
                }
            }
            , [e]);
            if (t.style) {
                let e = {};
                j(e, t.style, t),
                a.style = {
                    ...e,
                    ...a.style
                }
            }
            return a
        }
        var Z = n(3193);
        function J(t, {style: e, vars: n}, r, i) {
            for (let a in Object.assign(t.style, e, i && i.getProjectionStyles(r)),
            n)
                t.style.setProperty(a, n[a])
        }
        let X = new Set(["baseFrequency", "diffuseConstant", "kernelMatrix", "kernelUnitLength", "keySplines", "keyTimes", "limitingConeAngle", "markerHeight", "markerWidth", "numOctaves", "targetX", "targetY", "surfaceScale", "specularConstant", "specularExponent", "stdDeviation", "tableValues", "viewBox", "gradientTransform", "pathLength", "startOffset", "textLength", "lengthAdjust"]);
        function K(t, e, n, r) {
            for (let n in J(t, e, void 0, r),
            e.attrs)
                t.setAttribute(X.has(n) ? n : (0,
                Z.D)(n), e.attrs[n])
        }
        function tt(t, e) {
            let {style: n} = t
              , r = {};
            for (let i in n)
                ((0,
                A.i)(n[i]) || e.style && (0,
                A.i)(e.style[i]) || C(i, t)) && (r[i] = n[i]);
            return r
        }
        function te(t, e) {
            let n = tt(t, e);
            for (let r in t)
                if ((0,
                A.i)(t[r]) || (0,
                A.i)(e[r])) {
                    let e = -1 !== O._.indexOf(r) ? "attr" + r.charAt(0).toUpperCase() + r.substring(1) : r;
                    n[e] = t[r]
                }
            return n
        }
        var tn = n(9432)
          , tr = n(6681)
          , ti = n(8715);
        function ta(t) {
            let e = (0,
            A.i)(t) ? t.get() : t;
            return (0,
            ti.p)(e) ? e.toValue() : e
        }
        let to = t => (e, n) => {
            let r = (0,
            i.useContext)(o)
              , a = (0,
            i.useContext)(s)
              , l = () => (function({scrapeMotionValuesFromProps: t, createRenderState: e, onMount: n}, r, i, a) {
                let o = {
                    latestValues: function(t, e, n, r) {
                        let i = {}
                          , a = r(t, {});
                        for (let t in a)
                            i[t] = ta(a[t]);
                        let {initial: o, animate: s} = t
                          , l = m(t)
                          , u = y(t);
                        e && u && !l && !1 !== t.inherit && (void 0 === o && (o = e.initial),
                        void 0 === s && (s = e.animate));
                        let c = !!n && !1 === n.initial;
                        c = c || !1 === o;
                        let h = c ? s : o;
                        if (h && "boolean" != typeof h && !d(h)) {
                            let e = Array.isArray(h) ? h : [h];
                            e.forEach(e => {
                                let n = (0,
                                tn.o)(t, e);
                                if (!n)
                                    return;
                                let {transitionEnd: r, transition: a, ...o} = n;
                                for (let t in o) {
                                    let e = o[t];
                                    if (Array.isArray(e)) {
                                        let t = c ? e.length - 1 : 0;
                                        e = e[t]
                                    }
                                    null !== e && (i[t] = e)
                                }
                                for (let t in r)
                                    i[t] = r[t]
                            }
                            )
                        }
                        return i
                    }(r, i, a, t),
                    renderState: e()
                };
                return n && (o.mount = t => n(r, t, o)),
                o
            }
            )(t, e, r, a);
            return n ? l() : (0,
            tr.h)(l)
        }
          , ts = {
            useVisualState: to({
                scrapeMotionValuesFromProps: te,
                createRenderState: Q,
                onMount: (t, e, {renderState: n, latestValues: r}) => {
                    try {
                        n.dimensions = "function" == typeof e.getBBox ? e.getBBox() : e.getBoundingClientRect()
                    } catch (t) {
                        n.dimensions = {
                            x: 0,
                            y: 0,
                            width: 0,
                            height: 0
                        }
                    }
                    H(n, r, {
                        enableHardwareAcceleration: !1
                    }, $(e.tagName), t.transformTemplate),
                    K(e, n)
                }
            })
        }
          , tl = {
            useVisualState: to({
                scrapeMotionValuesFromProps: tt,
                createRenderState: L
            })
        };
        function tu(t, e, n, r={
            passive: !0
        }) {
            return t.addEventListener(e, n, r),
            () => t.removeEventListener(e, n)
        }
        let tc = t => "mouse" === t.pointerType ? "number" != typeof t.button || t.button <= 0 : !1 !== t.isPrimary;
        function th(t, e="page") {
            return {
                point: {
                    x: t[e + "X"],
                    y: t[e + "Y"]
                }
            }
        }
        let td = t => e => tc(e) && t(e, th(e));
        function tf(t, e, n, r) {
            return tu(t, e, td(n), r)
        }
        var tp = n(3624);
        function tm(t) {
            let e = null;
            return () => null === e && (e = t,
            () => {
                e = null
            }
            )
        }
        let ty = tm("dragHorizontal")
          , tg = tm("dragVertical");
        function tv(t) {
            let e = !1;
            if ("y" === t)
                e = tg();
            else if ("x" === t)
                e = ty();
            else {
                let t = ty()
                  , n = tg();
                t && n ? e = () => {
                    t(),
                    n()
                }
                : (t && t(),
                n && n())
            }
            return e
        }
        function t_() {
            let t = tv(!0);
            return !t || (t(),
            !1)
        }
        class tb {
            constructor(t) {
                this.isMounted = !1,
                this.node = t
            }
            update() {}
        }
        var tw = n(2074);
        function tS(t, e) {
            let n = "pointer" + (e ? "enter" : "leave")
              , r = "onHover" + (e ? "Start" : "End");
            return tf(t.current, n, (n, i) => {
                if ("touch" === n.type || t_())
                    return;
                let a = t.getProps();
                t.animationState && a.whileHover && t.animationState.setActive("whileHover", e),
                a[r] && tw.Wi.update( () => a[r](n, i))
            }
            , {
                passive: !t.getProps()[r]
            })
        }
        let tk = (t, e) => !!e && (t === e || tk(t, e.parentElement));
        var tx = n(1662);
        function tE(t, e) {
            if (!e)
                return;
            let n = new PointerEvent("pointer" + t);
            e(n, th(n))
        }
        let tT = new WeakMap
          , tO = new WeakMap
          , tC = t => {
            let e = tT.get(t.target);
            e && e(t)
        }
          , tA = t => {
            t.forEach(tC)
        }
          , tR = {
            some: 0,
            all: 1
        };
        var tD = n(8488);
        function tI(t, e) {
            if (!Array.isArray(e))
                return !1;
            let n = e.length;
            if (n !== t.length)
                return !1;
            for (let r = 0; r < n; r++)
                if (e[r] !== t[r])
                    return !1;
            return !0
        }
        var tP = n(2248)
          , tM = n(4917);
        let tN = [...f].reverse()
          , tL = f.length;
        function tj(t=!1) {
            return {
                isActive: t,
                protectedKeys: {},
                needsAnimating: {},
                prevResolvedValues: {}
            }
        }
        let tF = 0;
        var tV = n(5487)
          , tz = n(6917);
        let tq = (t, e) => Math.abs(t - e);
        class tU {
            constructor(t, e, {transformPagePoint: n}={}) {
                if (this.startEvent = null,
                this.lastMoveEvent = null,
                this.lastMoveEventInfo = null,
                this.handlers = {},
                this.updatePoint = () => {
                    if (!(this.lastMoveEvent && this.lastMoveEventInfo))
                        return;
                    let t = tW(this.lastMoveEventInfo, this.history)
                      , e = null !== this.startEvent
                      , n = function(t, e) {
                        let n = tq(t.x, e.x)
                          , r = tq(t.y, e.y);
                        return Math.sqrt(n ** 2 + r ** 2)
                    }(t.offset, {
                        x: 0,
                        y: 0
                    }) >= 3;
                    if (!e && !n)
                        return;
                    let {point: r} = t
                      , {timestamp: i} = tw.frameData;
                    this.history.push({
                        ...r,
                        timestamp: i
                    });
                    let {onStart: a, onMove: o} = this.handlers;
                    e || (a && a(this.lastMoveEvent, t),
                    this.startEvent = this.lastMoveEvent),
                    o && o(this.lastMoveEvent, t)
                }
                ,
                this.handlePointerMove = (t, e) => {
                    this.lastMoveEvent = t,
                    this.lastMoveEventInfo = tB(e, this.transformPagePoint),
                    tw.Wi.update(this.updatePoint, !0)
                }
                ,
                this.handlePointerUp = (t, e) => {
                    if (this.end(),
                    !(this.lastMoveEvent && this.lastMoveEventInfo))
                        return;
                    let {onEnd: n, onSessionEnd: r} = this.handlers
                      , i = tW("pointercancel" === t.type ? this.lastMoveEventInfo : tB(e, this.transformPagePoint), this.history);
                    this.startEvent && n && n(t, i),
                    r && r(t, i)
                }
                ,
                !tc(t))
                    return;
                this.handlers = e,
                this.transformPagePoint = n;
                let r = th(t)
                  , i = tB(r, this.transformPagePoint)
                  , {point: a} = i
                  , {timestamp: o} = tw.frameData;
                this.history = [{
                    ...a,
                    timestamp: o
                }];
                let {onSessionStart: s} = e;
                s && s(t, tW(i, this.history)),
                this.removeListeners = (0,
                tp.z)(tf(window, "pointermove", this.handlePointerMove), tf(window, "pointerup", this.handlePointerUp), tf(window, "pointercancel", this.handlePointerUp))
            }
            updateHandlers(t) {
                this.handlers = t
            }
            end() {
                this.removeListeners && this.removeListeners(),
                (0,
                tw.Pn)(this.updatePoint)
            }
        }
        function tB(t, e) {
            return e ? {
                point: e(t.point)
            } : t
        }
        function tG(t, e) {
            return {
                x: t.x - e.x,
                y: t.y - e.y
            }
        }
        function tW({point: t}, e) {
            return {
                point: t,
                delta: tG(t, tH(e)),
                offset: tG(t, e[0]),
                velocity: function(t, e) {
                    if (t.length < 2)
                        return {
                            x: 0,
                            y: 0
                        };
                    let n = t.length - 1
                      , r = null
                      , i = tH(t);
                    for (; n >= 0 && (r = t[n],
                    !(i.timestamp - r.timestamp > (0,
                    tz.w)(.1))); )
                        n--;
                    if (!r)
                        return {
                            x: 0,
                            y: 0
                        };
                    let a = (0,
                    tz.X)(i.timestamp - r.timestamp);
                    if (0 === a)
                        return {
                            x: 0,
                            y: 0
                        };
                    let o = {
                        x: (i.x - r.x) / a,
                        y: (i.y - r.y) / a
                    };
                    return o.x === 1 / 0 && (o.x = 0),
                    o.y === 1 / 0 && (o.y = 0),
                    o
                }(e, 0)
            }
        }
        function tH(t) {
            return t[t.length - 1]
        }
        var tQ = n(3967)
          , t$ = n(22);
        function tY(t) {
            return t.max - t.min
        }
        function tZ(t, e=0, n=.01) {
            return Math.abs(t - e) <= n
        }
        function tJ(t, e, n, r=.5) {
            t.origin = r,
            t.originPoint = (0,
            t$.C)(e.min, e.max, t.origin),
            t.scale = tY(n) / tY(e),
            (tZ(t.scale, 1, 1e-4) || isNaN(t.scale)) && (t.scale = 1),
            t.translate = (0,
            t$.C)(n.min, n.max, t.origin) - t.originPoint,
            (tZ(t.translate) || isNaN(t.translate)) && (t.translate = 0)
        }
        function tX(t, e, n, r) {
            tJ(t.x, e.x, n.x, r ? r.originX : void 0),
            tJ(t.y, e.y, n.y, r ? r.originY : void 0)
        }
        function tK(t, e, n) {
            t.min = n.min + e.min,
            t.max = t.min + tY(e)
        }
        function t0(t, e, n) {
            t.min = e.min - n.min,
            t.max = t.min + tY(e)
        }
        function t1(t, e, n) {
            t0(t.x, e.x, n.x),
            t0(t.y, e.y, n.y)
        }
        var t2 = n(4169);
        function t5(t, e, n) {
            return {
                min: void 0 !== e ? t.min + e : void 0,
                max: void 0 !== n ? t.max + n - (t.max - t.min) : void 0
            }
        }
        function t3(t, e) {
            let n = e.min - t.min
              , r = e.max - t.max;
            return e.max - e.min < t.max - t.min && ([n,r] = [r, n]),
            {
                min: n,
                max: r
            }
        }
        function t6(t, e, n) {
            return {
                min: t4(t, e),
                max: t4(t, n)
            }
        }
        function t4(t, e) {
            return "number" == typeof t ? t : t[e] || 0
        }
        let t8 = () => ({
            translate: 0,
            scale: 1,
            origin: 0,
            originPoint: 0
        })
          , t9 = () => ({
            x: t8(),
            y: t8()
        })
          , t7 = () => ({
            min: 0,
            max: 0
        })
          , et = () => ({
            x: t7(),
            y: t7()
        });
        function ee(t) {
            return [t("x"), t("y")]
        }
        function en({top: t, left: e, right: n, bottom: r}) {
            return {
                x: {
                    min: e,
                    max: n
                },
                y: {
                    min: t,
                    max: r
                }
            }
        }
        function er(t) {
            return void 0 === t || 1 === t
        }
        function ei({scale: t, scaleX: e, scaleY: n}) {
            return !er(t) || !er(e) || !er(n)
        }
        function ea(t) {
            return ei(t) || eo(t) || t.z || t.rotate || t.rotateX || t.rotateY
        }
        function eo(t) {
            var e, n;
            return (e = t.x) && "0%" !== e || (n = t.y) && "0%" !== n
        }
        function es(t, e, n, r, i) {
            return void 0 !== i && (t = r + i * (t - r)),
            r + n * (t - r) + e
        }
        function el(t, e=0, n=1, r, i) {
            t.min = es(t.min, e, n, r, i),
            t.max = es(t.max, e, n, r, i)
        }
        function eu(t, {x: e, y: n}) {
            el(t.x, e.translate, e.scale, e.originPoint),
            el(t.y, n.translate, n.scale, n.originPoint)
        }
        function ec(t) {
            return Number.isInteger(t) ? t : t > 1.0000000000001 || t < .999999999999 ? t : 1
        }
        function eh(t, e) {
            t.min = t.min + e,
            t.max = t.max + e
        }
        function ed(t, e, [n,r,i]) {
            let a = void 0 !== e[i] ? e[i] : .5
              , o = (0,
            t$.C)(t.min, t.max, a);
            el(t, e[n], e[r], o, e.scale)
        }
        let ef = ["x", "scaleX", "originX"]
          , ep = ["y", "scaleY", "originY"];
        function em(t, e) {
            ed(t.x, e, ef),
            ed(t.y, e, ep)
        }
        function ey(t, e) {
            return en(function(t, e) {
                if (!e)
                    return t;
                let n = e({
                    x: t.left,
                    y: t.top
                })
                  , r = e({
                    x: t.right,
                    y: t.bottom
                });
                return {
                    top: n.y,
                    left: n.x,
                    bottom: r.y,
                    right: r.x
                }
            }(t.getBoundingClientRect(), e))
        }
        var eg = n(5480);
        let ev = new WeakMap;
        class e_ {
            constructor(t) {
                this.openGlobalLock = null,
                this.isDragging = !1,
                this.currentDirection = null,
                this.originPoint = {
                    x: 0,
                    y: 0
                },
                this.constraints = !1,
                this.hasMutatedConstraints = !1,
                this.elastic = et(),
                this.visualElement = t
            }
            start(t, {snapToCursor: e=!1}={}) {
                let {presenceContext: n} = this.visualElement;
                n && !1 === n.isPresent || (this.panSession = new tU(t,{
                    onSessionStart: t => {
                        this.stopAnimation(),
                        e && this.snapToCursor(th(t, "page").point)
                    }
                    ,
                    onStart: (t, e) => {
                        let {drag: n, dragPropagation: r, onDragStart: i} = this.getProps();
                        if (n && !r && (this.openGlobalLock && this.openGlobalLock(),
                        this.openGlobalLock = tv(n),
                        !this.openGlobalLock))
                            return;
                        this.isDragging = !0,
                        this.currentDirection = null,
                        this.resolveConstraints(),
                        this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0,
                        this.visualElement.projection.target = void 0),
                        ee(t => {
                            let e = this.getAxisMotionValue(t).get() || 0;
                            if (U.aQ.test(e)) {
                                let {projection: n} = this.visualElement;
                                if (n && n.layout) {
                                    let r = n.layout.layoutBox[t];
                                    if (r) {
                                        let t = tY(r);
                                        e = t * (parseFloat(e) / 100)
                                    }
                                }
                            }
                            this.originPoint[t] = e
                        }
                        ),
                        i && tw.Wi.update( () => i(t, e), !1, !0);
                        let {animationState: a} = this.visualElement;
                        a && a.setActive("whileDrag", !0)
                    }
                    ,
                    onMove: (t, e) => {
                        let {dragPropagation: n, dragDirectionLock: r, onDirectionLock: i, onDrag: a} = this.getProps();
                        if (!n && !this.openGlobalLock)
                            return;
                        let {offset: o} = e;
                        if (r && null === this.currentDirection) {
                            this.currentDirection = function(t, e=10) {
                                let n = null;
                                return Math.abs(t.y) > e ? n = "y" : Math.abs(t.x) > e && (n = "x"),
                                n
                            }(o),
                            null !== this.currentDirection && i && i(this.currentDirection);
                            return
                        }
                        this.updateAxis("x", e.point, o),
                        this.updateAxis("y", e.point, o),
                        this.visualElement.render(),
                        a && a(t, e)
                    }
                    ,
                    onSessionEnd: (t, e) => this.stop(t, e)
                },{
                    transformPagePoint: this.visualElement.getTransformPagePoint()
                }))
            }
            stop(t, e) {
                let n = this.isDragging;
                if (this.cancel(),
                !n)
                    return;
                let {velocity: r} = e;
                this.startAnimation(r);
                let {onDragEnd: i} = this.getProps();
                i && tw.Wi.update( () => i(t, e))
            }
            cancel() {
                this.isDragging = !1;
                let {projection: t, animationState: e} = this.visualElement;
                t && (t.isAnimationBlocked = !1),
                this.panSession && this.panSession.end(),
                this.panSession = void 0;
                let {dragPropagation: n} = this.getProps();
                !n && this.openGlobalLock && (this.openGlobalLock(),
                this.openGlobalLock = null),
                e && e.setActive("whileDrag", !1)
            }
            updateAxis(t, e, n) {
                let {drag: r} = this.getProps();
                if (!n || !eb(t, r, this.currentDirection))
                    return;
                let i = this.getAxisMotionValue(t)
                  , a = this.originPoint[t] + n[t];
                this.constraints && this.constraints[t] && (a = function(t, {min: e, max: n}, r) {
                    return void 0 !== e && t < e ? t = r ? (0,
                    t$.C)(e, t, r.min) : Math.max(t, e) : void 0 !== n && t > n && (t = r ? (0,
                    t$.C)(n, t, r.max) : Math.min(t, n)),
                    t
                }(a, this.constraints[t], this.elastic[t])),
                i.set(a)
            }
            resolveConstraints() {
                let {dragConstraints: t, dragElastic: e} = this.getProps()
                  , {layout: n} = this.visualElement.projection || {}
                  , r = this.constraints;
                t && c(t) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : t && n ? this.constraints = function(t, {top: e, left: n, bottom: r, right: i}) {
                    return {
                        x: t5(t.x, n, i),
                        y: t5(t.y, e, r)
                    }
                }(n.layoutBox, t) : this.constraints = !1,
                this.elastic = function(t=.35) {
                    return !1 === t ? t = 0 : !0 === t && (t = .35),
                    {
                        x: t6(t, "left", "right"),
                        y: t6(t, "top", "bottom")
                    }
                }(e),
                r !== this.constraints && n && this.constraints && !this.hasMutatedConstraints && ee(t => {
                    this.getAxisMotionValue(t) && (this.constraints[t] = function(t, e) {
                        let n = {};
                        return void 0 !== e.min && (n.min = e.min - t.min),
                        void 0 !== e.max && (n.max = e.max - t.min),
                        n
                    }(n.layoutBox[t], this.constraints[t]))
                }
                )
            }
            resolveRefConstraints() {
                var t;
                let {dragConstraints: e, onMeasureDragConstraints: n} = this.getProps();
                if (!e || !c(e))
                    return !1;
                let r = e.current;
                (0,
                tV.k)(null !== r, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
                let {projection: i} = this.visualElement;
                if (!i || !i.layout)
                    return !1;
                let a = function(t, e, n) {
                    let r = ey(t, n)
                      , {scroll: i} = e;
                    return i && (eh(r.x, i.offset.x),
                    eh(r.y, i.offset.y)),
                    r
                }(r, i.root, this.visualElement.getTransformPagePoint())
                  , o = {
                    x: t3((t = i.layout.layoutBox).x, a.x),
                    y: t3(t.y, a.y)
                };
                if (n) {
                    let t = n(function({x: t, y: e}) {
                        return {
                            top: e.min,
                            right: t.max,
                            bottom: e.max,
                            left: t.min
                        }
                    }(o));
                    this.hasMutatedConstraints = !!t,
                    t && (o = en(t))
                }
                return o
            }
            startAnimation(t) {
                let {drag: e, dragMomentum: n, dragElastic: r, dragTransition: i, dragSnapToOrigin: a, onDragTransitionEnd: o} = this.getProps()
                  , s = this.constraints || {}
                  , l = ee(o => {
                    if (!eb(o, e, this.currentDirection))
                        return;
                    let l = s && s[o] || {};
                    a && (l = {
                        min: 0,
                        max: 0
                    });
                    let u = {
                        type: "inertia",
                        velocity: n ? t[o] : 0,
                        bounceStiffness: r ? 200 : 1e6,
                        bounceDamping: r ? 40 : 1e7,
                        timeConstant: 750,
                        restDelta: 1,
                        restSpeed: 10,
                        ...i,
                        ...l
                    };
                    return this.startAxisValueAnimation(o, u)
                }
                );
                return Promise.all(l).then(o)
            }
            startAxisValueAnimation(t, e) {
                let n = this.getAxisMotionValue(t);
                return n.start((0,
                eg.v)(t, n, 0, e))
            }
            stopAnimation() {
                ee(t => this.getAxisMotionValue(t).stop())
            }
            getAxisMotionValue(t) {
                let e = "_drag" + t.toUpperCase()
                  , n = this.visualElement.getProps()
                  , r = n[e];
                return r || this.visualElement.getValue(t, (n.initial ? n.initial[t] : void 0) || 0)
            }
            snapToCursor(t) {
                ee(e => {
                    let {drag: n} = this.getProps();
                    if (!eb(e, n, this.currentDirection))
                        return;
                    let {projection: r} = this.visualElement
                      , i = this.getAxisMotionValue(e);
                    if (r && r.layout) {
                        let {min: n, max: a} = r.layout.layoutBox[e];
                        i.set(t[e] - (0,
                        t$.C)(n, a, .5))
                    }
                }
                )
            }
            scalePositionWithinConstraints() {
                if (!this.visualElement.current)
                    return;
                let {drag: t, dragConstraints: e} = this.getProps()
                  , {projection: n} = this.visualElement;
                if (!c(e) || !n || !this.constraints)
                    return;
                this.stopAnimation();
                let r = {
                    x: 0,
                    y: 0
                };
                ee(t => {
                    let e = this.getAxisMotionValue(t);
                    if (e) {
                        let n = e.get();
                        r[t] = function(t, e) {
                            let n = .5
                              , r = tY(t)
                              , i = tY(e);
                            return i > r ? n = (0,
                            tQ.Y)(e.min, e.max - r, t.min) : r > i && (n = (0,
                            tQ.Y)(t.min, t.max - i, e.min)),
                            (0,
                            t2.u)(0, 1, n)
                        }({
                            min: n,
                            max: n
                        }, this.constraints[t])
                    }
                }
                );
                let {transformTemplate: i} = this.visualElement.getProps();
                this.visualElement.current.style.transform = i ? i({}, "") : "none",
                n.root && n.root.updateScroll(),
                n.updateLayout(),
                this.resolveConstraints(),
                ee(e => {
                    if (!eb(e, t, null))
                        return;
                    let n = this.getAxisMotionValue(e)
                      , {min: i, max: a} = this.constraints[e];
                    n.set((0,
                    t$.C)(i, a, r[e]))
                }
                )
            }
            addListeners() {
                if (!this.visualElement.current)
                    return;
                ev.set(this.visualElement, this);
                let t = this.visualElement.current
                  , e = tf(t, "pointerdown", t => {
                    let {drag: e, dragListener: n=!0} = this.getProps();
                    e && n && this.start(t)
                }
                )
                  , n = () => {
                    let {dragConstraints: t} = this.getProps();
                    c(t) && (this.constraints = this.resolveRefConstraints())
                }
                  , {projection: r} = this.visualElement
                  , i = r.addEventListener("measure", n);
                r && !r.layout && (r.root && r.root.updateScroll(),
                r.updateLayout()),
                n();
                let a = tu(window, "resize", () => this.scalePositionWithinConstraints())
                  , o = r.addEventListener("didUpdate", ({delta: t, hasLayoutChanged: e}) => {
                    this.isDragging && e && (ee(e => {
                        let n = this.getAxisMotionValue(e);
                        n && (this.originPoint[e] += t[e].translate,
                        n.set(n.get() + t[e].translate))
                    }
                    ),
                    this.visualElement.render())
                }
                );
                return () => {
                    a(),
                    e(),
                    i(),
                    o && o()
                }
            }
            getProps() {
                let t = this.visualElement.getProps()
                  , {drag: e=!1, dragDirectionLock: n=!1, dragPropagation: r=!1, dragConstraints: i=!1, dragElastic: a=.35, dragMomentum: o=!0} = t;
                return {
                    ...t,
                    drag: e,
                    dragDirectionLock: n,
                    dragPropagation: r,
                    dragConstraints: i,
                    dragElastic: a,
                    dragMomentum: o
                }
            }
        }
        function eb(t, e, n) {
            return (!0 === e || e === t) && (null === n || n === t)
        }
        let ew = t => (e, n) => {
            t && tw.Wi.update( () => t(e, n))
        }
          , eS = {
            hasAnimatedSinceResize: !0,
            hasEverUpdated: !1
        };
        function ek(t, e) {
            return e.max === e.min ? 0 : t / (e.max - e.min) * 100
        }
        let ex = {
            correct: (t, e) => {
                if (!e.target)
                    return t;
                if ("string" == typeof t) {
                    if (!U.px.test(t))
                        return t;
                    t = parseFloat(t)
                }
                let n = ek(t, e.target.x)
                  , r = ek(t, e.target.y);
                return `${n}% ${r}%`
            }
        };
        var eE = n(1550);
        class eT extends i.Component {
            componentDidMount() {
                let {visualElement: t, layoutGroup: e, switchLayoutGroup: n, layoutId: r} = this.props
                  , {projection: i} = t;
                Object.assign(T, eC),
                i && (e.group && e.group.add(i),
                n && n.register && r && n.register(i),
                i.root.didUpdate(),
                i.addEventListener("animationComplete", () => {
                    this.safeToRemove()
                }
                ),
                i.setOptions({
                    ...i.options,
                    onExitComplete: () => this.safeToRemove()
                })),
                eS.hasEverUpdated = !0
            }
            getSnapshotBeforeUpdate(t) {
                let {layoutDependency: e, visualElement: n, drag: r, isPresent: i} = this.props
                  , a = n.projection;
                return a && (a.isPresent = i,
                r || t.layoutDependency !== e || void 0 === e ? a.willUpdate() : this.safeToRemove(),
                t.isPresent === i || (i ? a.promote() : a.relegate() || tw.Wi.postRender( () => {
                    let t = a.getStack();
                    t && t.members.length || this.safeToRemove()
                }
                ))),
                null
            }
            componentDidUpdate() {
                let {projection: t} = this.props.visualElement;
                t && (t.root.didUpdate(),
                queueMicrotask( () => {
                    !t.currentAnimation && t.isLead() && this.safeToRemove()
                }
                ))
            }
            componentWillUnmount() {
                let {visualElement: t, layoutGroup: e, switchLayoutGroup: n} = this.props
                  , {projection: r} = t;
                r && (r.scheduleCheckAfterUnmount(),
                e && e.group && e.group.remove(r),
                n && n.deregister && n.deregister(r))
            }
            safeToRemove() {
                let {safeToRemove: t} = this.props;
                t && t()
            }
            render() {
                return null
            }
        }
        function eO(t) {
            let[e,n] = function() {
                let t = (0,
                i.useContext)(s);
                if (null === t)
                    return [!0, null];
                let {isPresent: e, onExitComplete: n, register: r} = t
                  , a = (0,
                i.useId)();
                return (0,
                i.useEffect)( () => r(a), []),
                !e && n ? [!1, () => n && n(a)] : [!0]
            }()
              , r = (0,
            i.useContext)(w);
            return i.createElement(eT, {
                ...t,
                layoutGroup: r,
                switchLayoutGroup: (0,
                i.useContext)(S),
                isPresent: e,
                safeToRemove: n
            })
        }
        let eC = {
            borderRadius: {
                ...ex,
                applyTo: ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomLeftRadius", "borderBottomRightRadius"]
            },
            borderTopLeftRadius: ex,
            borderTopRightRadius: ex,
            borderBottomLeftRadius: ex,
            borderBottomRightRadius: ex,
            boxShadow: {
                correct: (t, {treeScale: e, projectionDelta: n}) => {
                    let r = eE.P.parse(t);
                    if (r.length > 5)
                        return t;
                    let i = eE.P.createTransformer(t)
                      , a = "number" != typeof r[0] ? 1 : 0
                      , o = n.x.scale * e.x
                      , s = n.y.scale * e.y;
                    r[0 + a] /= o,
                    r[1 + a] /= s;
                    let l = (0,
                    t$.C)(o, s, .5);
                    return "number" == typeof r[2 + a] && (r[2 + a] /= l),
                    "number" == typeof r[3 + a] && (r[3 + a] /= l),
                    i(r)
                }
            }
        };
        var eA = n(1560)
          , eR = n(7255);
        let eD = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"]
          , eI = eD.length
          , eP = t => "string" == typeof t ? parseFloat(t) : t
          , eM = t => "number" == typeof t || U.px.test(t);
        function eN(t, e) {
            return void 0 !== t[e] ? t[e] : t.borderRadius
        }
        let eL = eF(0, .5, eR.Bn)
          , ej = eF(.5, .95, tx.Z);
        function eF(t, e, n) {
            return r => r < t ? 0 : r > e ? 1 : n((0,
            tQ.Y)(t, e, r))
        }
        function eV(t, e) {
            t.min = e.min,
            t.max = e.max
        }
        function ez(t, e) {
            eV(t.x, e.x),
            eV(t.y, e.y)
        }
        function eq(t, e, n, r, i) {
            return t -= e,
            t = r + 1 / n * (t - r),
            void 0 !== i && (t = r + 1 / i * (t - r)),
            t
        }
        function eU(t, e, [n,r,i], a, o) {
            !function(t, e=0, n=1, r=.5, i, a=t, o=t) {
                if (U.aQ.test(e)) {
                    e = parseFloat(e);
                    let t = (0,
                    t$.C)(o.min, o.max, e / 100);
                    e = t - o.min
                }
                if ("number" != typeof e)
                    return;
                let s = (0,
                t$.C)(a.min, a.max, r);
                t === a && (s -= e),
                t.min = eq(t.min, e, n, s, i),
                t.max = eq(t.max, e, n, s, i)
            }(t, e[n], e[r], e[i], e.scale, a, o)
        }
        let eB = ["x", "scaleX", "originX"]
          , eG = ["y", "scaleY", "originY"];
        function eW(t, e, n, r) {
            eU(t.x, e, eB, n ? n.x : void 0, r ? r.x : void 0),
            eU(t.y, e, eG, n ? n.y : void 0, r ? r.y : void 0)
        }
        var eH = n(1056);
        function eQ(t) {
            return 0 === t.translate && 1 === t.scale
        }
        function e$(t) {
            return eQ(t.x) && eQ(t.y)
        }
        function eY(t, e) {
            return Math.round(t.x.min) === Math.round(e.x.min) && Math.round(t.x.max) === Math.round(e.x.max) && Math.round(t.y.min) === Math.round(e.y.min) && Math.round(t.y.max) === Math.round(e.y.max)
        }
        function eZ(t) {
            return tY(t.x) / tY(t.y)
        }
        var eJ = n(10);
        class eX {
            constructor() {
                this.members = []
            }
            add(t) {
                (0,
                eJ.y4)(this.members, t),
                t.scheduleRender()
            }
            remove(t) {
                if ((0,
                eJ.cl)(this.members, t),
                t === this.prevLead && (this.prevLead = void 0),
                t === this.lead) {
                    let t = this.members[this.members.length - 1];
                    t && this.promote(t)
                }
            }
            relegate(t) {
                let e;
                let n = this.members.findIndex(e => t === e);
                if (0 === n)
                    return !1;
                for (let t = n; t >= 0; t--) {
                    let n = this.members[t];
                    if (!1 !== n.isPresent) {
                        e = n;
                        break
                    }
                }
                return !!e && (this.promote(e),
                !0)
            }
            promote(t, e) {
                let n = this.lead;
                if (t !== n && (this.prevLead = n,
                this.lead = t,
                t.show(),
                n)) {
                    n.instance && n.scheduleRender(),
                    t.scheduleRender(),
                    t.resumeFrom = n,
                    e && (t.resumeFrom.preserveOpacity = !0),
                    n.snapshot && (t.snapshot = n.snapshot,
                    t.snapshot.latestValues = n.animationValues || n.latestValues),
                    t.root && t.root.isUpdating && (t.isLayoutDirty = !0);
                    let {crossfade: r} = t.options;
                    !1 === r && n.hide()
                }
            }
            exitAnimationComplete() {
                this.members.forEach(t => {
                    let {options: e, resumingFrom: n} = t;
                    e.onExitComplete && e.onExitComplete(),
                    n && n.options.onExitComplete && n.options.onExitComplete()
                }
                )
            }
            scheduleRender() {
                this.members.forEach(t => {
                    t.instance && t.scheduleRender(!1)
                }
                )
            }
            removeLeadSnapshot() {
                this.lead && this.lead.snapshot && (this.lead.snapshot = void 0)
            }
        }
        function eK(t, e, n) {
            let r = ""
              , i = t.x.translate / e.x
              , a = t.y.translate / e.y;
            if ((i || a) && (r = `translate3d(${i}px, ${a}px, 0) `),
            (1 !== e.x || 1 !== e.y) && (r += `scale(${1 / e.x}, ${1 / e.y}) `),
            n) {
                let {rotate: t, rotateX: e, rotateY: i} = n;
                t && (r += `rotate(${t}deg) `),
                e && (r += `rotateX(${e}deg) `),
                i && (r += `rotateY(${i}deg) `)
            }
            let o = t.x.scale * e.x
              , s = t.y.scale * e.y;
            return (1 !== o || 1 !== s) && (r += `scale(${o}, ${s})`),
            r || "none"
        }
        let e0 = (t, e) => t.depth - e.depth;
        class e1 {
            constructor() {
                this.children = [],
                this.isDirty = !1
            }
            add(t) {
                (0,
                eJ.y4)(this.children, t),
                this.isDirty = !0
            }
            remove(t) {
                (0,
                eJ.cl)(this.children, t),
                this.isDirty = !0
            }
            forEach(t) {
                this.isDirty && this.children.sort(e0),
                this.isDirty = !1,
                this.children.forEach(t)
            }
        }
        var e2 = n(3234);
        let e5 = ["", "X", "Y", "Z"]
          , e3 = 0
          , e6 = {
            type: "projectionFrame",
            totalNodes: 0,
            resolvedTargetDeltas: 0,
            recalculatedProjection: 0
        };
        function e4({attachResizeListener: t, defaultParent: e, measureScroll: n, checkIsScrollRoot: r, resetTransform: i}) {
            return class {
                constructor(t={}, n=null == e ? void 0 : e()) {
                    this.id = e3++,
                    this.animationId = 0,
                    this.children = new Set,
                    this.options = {},
                    this.isTreeAnimating = !1,
                    this.isAnimationBlocked = !1,
                    this.isLayoutDirty = !1,
                    this.isProjectionDirty = !1,
                    this.isSharedProjectionDirty = !1,
                    this.isTransformDirty = !1,
                    this.updateManuallyBlocked = !1,
                    this.updateBlockedByResize = !1,
                    this.isUpdating = !1,
                    this.isSVG = !1,
                    this.needsReset = !1,
                    this.shouldResetTransform = !1,
                    this.treeScale = {
                        x: 1,
                        y: 1
                    },
                    this.eventHandlers = new Map,
                    this.hasTreeAnimated = !1,
                    this.updateScheduled = !1,
                    this.checkUpdateFailed = () => {
                        this.isUpdating && (this.isUpdating = !1,
                        this.clearAllSnapshots())
                    }
                    ,
                    this.updateProjection = () => {
                        e6.totalNodes = e6.resolvedTargetDeltas = e6.recalculatedProjection = 0,
                        this.nodes.forEach(e7),
                        this.nodes.forEach(no),
                        this.nodes.forEach(ns),
                        this.nodes.forEach(nt),
                        window.MotionDebug && window.MotionDebug.record(e6)
                    }
                    ,
                    this.hasProjected = !1,
                    this.isVisible = !0,
                    this.animationProgress = 0,
                    this.sharedNodes = new Map,
                    this.latestValues = t,
                    this.root = n ? n.root || n : this,
                    this.path = n ? [...n.path, n] : [],
                    this.parent = n,
                    this.depth = n ? n.depth + 1 : 0;
                    for (let t = 0; t < this.path.length; t++)
                        this.path[t].shouldResetTransform = !0;
                    this.root === this && (this.nodes = new e1)
                }
                addEventListener(t, e) {
                    return this.eventHandlers.has(t) || this.eventHandlers.set(t, new eA.L),
                    this.eventHandlers.get(t).add(e)
                }
                notifyListeners(t, ...e) {
                    let n = this.eventHandlers.get(t);
                    n && n.notify(...e)
                }
                hasListeners(t) {
                    return this.eventHandlers.has(t)
                }
                mount(e, n=this.root.hasTreeAnimated) {
                    if (this.instance)
                        return;
                    this.isSVG = e instanceof SVGElement && "svg" !== e.tagName,
                    this.instance = e;
                    let {layoutId: r, layout: i, visualElement: a} = this.options;
                    if (a && !a.current && a.mount(e),
                    this.root.nodes.add(this),
                    this.parent && this.parent.children.add(this),
                    n && (i || r) && (this.isLayoutDirty = !0),
                    t) {
                        let n;
                        let r = () => this.root.updateBlockedByResize = !1;
                        t(e, () => {
                            this.root.updateBlockedByResize = !0,
                            n && n(),
                            n = function(t, e) {
                                let n = performance.now()
                                  , r = ({timestamp: i}) => {
                                    let a = i - n;
                                    a >= e && ((0,
                                    tw.Pn)(r),
                                    t(a - e))
                                }
                                ;
                                return tw.Wi.read(r, !0),
                                () => (0,
                                tw.Pn)(r)
                            }(r, 250),
                            eS.hasAnimatedSinceResize && (eS.hasAnimatedSinceResize = !1,
                            this.nodes.forEach(na))
                        }
                        )
                    }
                    r && this.root.registerSharedNode(r, this),
                    !1 !== this.options.animate && a && (r || i) && this.addEventListener("didUpdate", ({delta: t, hasLayoutChanged: e, hasRelativeTargetChanged: n, layout: r}) => {
                        if (this.isTreeAnimationBlocked()) {
                            this.target = void 0,
                            this.relativeTarget = void 0;
                            return
                        }
                        let i = this.options.transition || a.getDefaultTransition() || nf
                          , {onLayoutAnimationStart: o, onLayoutAnimationComplete: s} = a.getProps()
                          , l = !this.targetLayout || !eY(this.targetLayout, r) || n
                          , u = !e && n;
                        if (this.options.layoutRoot || this.resumeFrom && this.resumeFrom.instance || u || e && (l || !this.currentAnimation)) {
                            this.resumeFrom && (this.resumingFrom = this.resumeFrom,
                            this.resumingFrom.resumingFrom = void 0),
                            this.setAnimationOrigin(t, u);
                            let e = {
                                ...(0,
                                eH.e)(i, "layout"),
                                onPlay: o,
                                onComplete: s
                            };
                            (a.shouldReduceMotion || this.options.layoutRoot) && (e.delay = 0,
                            e.type = !1),
                            this.startAnimation(e)
                        } else
                            e || na(this),
                            this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
                        this.targetLayout = r
                    }
                    )
                }
                unmount() {
                    this.options.layoutId && this.willUpdate(),
                    this.root.nodes.remove(this);
                    let t = this.getStack();
                    t && t.remove(this),
                    this.parent && this.parent.children.delete(this),
                    this.instance = void 0,
                    (0,
                    tw.Pn)(this.updateProjection)
                }
                blockUpdate() {
                    this.updateManuallyBlocked = !0
                }
                unblockUpdate() {
                    this.updateManuallyBlocked = !1
                }
                isUpdateBlocked() {
                    return this.updateManuallyBlocked || this.updateBlockedByResize
                }
                isTreeAnimationBlocked() {
                    return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1
                }
                startUpdate() {
                    !this.isUpdateBlocked() && (this.isUpdating = !0,
                    this.nodes && this.nodes.forEach(nl),
                    this.animationId++)
                }
                getTransformTemplate() {
                    let {visualElement: t} = this.options;
                    return t && t.getProps().transformTemplate
                }
                willUpdate(t=!0) {
                    if (this.root.hasTreeAnimated = !0,
                    this.root.isUpdateBlocked()) {
                        this.options.onExitComplete && this.options.onExitComplete();
                        return
                    }
                    if (this.root.isUpdating || this.root.startUpdate(),
                    this.isLayoutDirty)
                        return;
                    this.isLayoutDirty = !0;
                    for (let t = 0; t < this.path.length; t++) {
                        let e = this.path[t];
                        e.shouldResetTransform = !0,
                        e.updateScroll("snapshot"),
                        e.options.layoutRoot && e.willUpdate(!1)
                    }
                    let {layoutId: e, layout: n} = this.options;
                    if (void 0 === e && !n)
                        return;
                    let r = this.getTransformTemplate();
                    this.prevTransformTemplateValue = r ? r(this.latestValues, "") : void 0,
                    this.updateSnapshot(),
                    t && this.notifyListeners("willUpdate")
                }
                update() {
                    this.updateScheduled = !1;
                    let t = this.isUpdateBlocked();
                    if (t) {
                        this.unblockUpdate(),
                        this.clearAllSnapshots(),
                        this.nodes.forEach(nn);
                        return
                    }
                    this.isUpdating || this.nodes.forEach(nr),
                    this.isUpdating = !1,
                    this.nodes.forEach(ni),
                    this.nodes.forEach(e8),
                    this.nodes.forEach(e9),
                    this.clearAllSnapshots();
                    let e = performance.now();
                    tw.frameData.delta = (0,
                    t2.u)(0, 1e3 / 60, e - tw.frameData.timestamp),
                    tw.frameData.timestamp = e,
                    tw.frameData.isProcessing = !0,
                    tw.S6.update.process(tw.frameData),
                    tw.S6.preRender.process(tw.frameData),
                    tw.S6.render.process(tw.frameData),
                    tw.frameData.isProcessing = !1
                }
                didUpdate() {
                    this.updateScheduled || (this.updateScheduled = !0,
                    queueMicrotask( () => this.update()))
                }
                clearAllSnapshots() {
                    this.nodes.forEach(ne),
                    this.sharedNodes.forEach(nu)
                }
                scheduleUpdateProjection() {
                    tw.Wi.preRender(this.updateProjection, !1, !0)
                }
                scheduleCheckAfterUnmount() {
                    tw.Wi.postRender( () => {
                        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed()
                    }
                    )
                }
                updateSnapshot() {
                    !this.snapshot && this.instance && (this.snapshot = this.measure())
                }
                updateLayout() {
                    if (!this.instance || (this.updateScroll(),
                    !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
                        return;
                    if (this.resumeFrom && !this.resumeFrom.instance)
                        for (let t = 0; t < this.path.length; t++) {
                            let e = this.path[t];
                            e.updateScroll()
                        }
                    let t = this.layout;
                    this.layout = this.measure(!1),
                    this.layoutCorrected = et(),
                    this.isLayoutDirty = !1,
                    this.projectionDelta = void 0,
                    this.notifyListeners("measure", this.layout.layoutBox);
                    let {visualElement: e} = this.options;
                    e && e.notify("LayoutMeasure", this.layout.layoutBox, t ? t.layoutBox : void 0)
                }
                updateScroll(t="measure") {
                    let e = !!(this.options.layoutScroll && this.instance);
                    this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === t && (e = !1),
                    e && (this.scroll = {
                        animationId: this.root.animationId,
                        phase: t,
                        isRoot: r(this.instance),
                        offset: n(this.instance)
                    })
                }
                resetTransform() {
                    if (!i)
                        return;
                    let t = this.isLayoutDirty || this.shouldResetTransform
                      , e = this.projectionDelta && !e$(this.projectionDelta)
                      , n = this.getTransformTemplate()
                      , r = n ? n(this.latestValues, "") : void 0
                      , a = r !== this.prevTransformTemplateValue;
                    t && (e || ea(this.latestValues) || a) && (i(this.instance, r),
                    this.shouldResetTransform = !1,
                    this.scheduleRender())
                }
                measure(t=!0) {
                    var e;
                    let n = this.measurePageBox()
                      , r = this.removeElementScroll(n);
                    return t && (r = this.removeTransform(r)),
                    ny((e = r).x),
                    ny(e.y),
                    {
                        animationId: this.root.animationId,
                        measuredBox: n,
                        layoutBox: r,
                        latestValues: {},
                        source: this.id
                    }
                }
                measurePageBox() {
                    let {visualElement: t} = this.options;
                    if (!t)
                        return et();
                    let e = t.measureViewportBox()
                      , {scroll: n} = this.root;
                    return n && (eh(e.x, n.offset.x),
                    eh(e.y, n.offset.y)),
                    e
                }
                removeElementScroll(t) {
                    let e = et();
                    ez(e, t);
                    for (let n = 0; n < this.path.length; n++) {
                        let r = this.path[n]
                          , {scroll: i, options: a} = r;
                        if (r !== this.root && i && a.layoutScroll) {
                            if (i.isRoot) {
                                ez(e, t);
                                let {scroll: n} = this.root;
                                n && (eh(e.x, -n.offset.x),
                                eh(e.y, -n.offset.y))
                            }
                            eh(e.x, i.offset.x),
                            eh(e.y, i.offset.y)
                        }
                    }
                    return e
                }
                applyTransform(t, e=!1) {
                    let n = et();
                    ez(n, t);
                    for (let t = 0; t < this.path.length; t++) {
                        let r = this.path[t];
                        !e && r.options.layoutScroll && r.scroll && r !== r.root && em(n, {
                            x: -r.scroll.offset.x,
                            y: -r.scroll.offset.y
                        }),
                        ea(r.latestValues) && em(n, r.latestValues)
                    }
                    return ea(this.latestValues) && em(n, this.latestValues),
                    n
                }
                removeTransform(t) {
                    let e = et();
                    ez(e, t);
                    for (let t = 0; t < this.path.length; t++) {
                        let n = this.path[t];
                        if (!n.instance || !ea(n.latestValues))
                            continue;
                        ei(n.latestValues) && n.updateSnapshot();
                        let r = et()
                          , i = n.measurePageBox();
                        ez(r, i),
                        eW(e, n.latestValues, n.snapshot ? n.snapshot.layoutBox : void 0, r)
                    }
                    return ea(this.latestValues) && eW(e, this.latestValues),
                    e
                }
                setTargetDelta(t) {
                    this.targetDelta = t,
                    this.root.scheduleUpdateProjection(),
                    this.isProjectionDirty = !0
                }
                setOptions(t) {
                    this.options = {
                        ...this.options,
                        ...t,
                        crossfade: void 0 === t.crossfade || t.crossfade
                    }
                }
                clearMeasurements() {
                    this.scroll = void 0,
                    this.layout = void 0,
                    this.snapshot = void 0,
                    this.prevTransformTemplateValue = void 0,
                    this.targetDelta = void 0,
                    this.target = void 0,
                    this.isLayoutDirty = !1
                }
                forceRelativeParentToResolveTarget() {
                    this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== tw.frameData.timestamp && this.relativeParent.resolveTargetDelta(!0)
                }
                resolveTargetDelta(t=!1) {
                    var e, n, r, i;
                    let a = this.getLead();
                    this.isProjectionDirty || (this.isProjectionDirty = a.isProjectionDirty),
                    this.isTransformDirty || (this.isTransformDirty = a.isTransformDirty),
                    this.isSharedProjectionDirty || (this.isSharedProjectionDirty = a.isSharedProjectionDirty);
                    let o = !!this.resumingFrom || this !== a
                      , s = !(t || o && this.isSharedProjectionDirty || this.isProjectionDirty || (null === (e = this.parent) || void 0 === e ? void 0 : e.isProjectionDirty) || this.attemptToResolveRelativeTarget);
                    if (s)
                        return;
                    let {layout: l, layoutId: u} = this.options;
                    if (this.layout && (l || u)) {
                        if (this.resolvedRelativeTargetAt = tw.frameData.timestamp,
                        !this.targetDelta && !this.relativeTarget) {
                            let t = this.getClosestProjectingParent();
                            t && t.layout && 1 !== this.animationProgress ? (this.relativeParent = t,
                            this.forceRelativeParentToResolveTarget(),
                            this.relativeTarget = et(),
                            this.relativeTargetOrigin = et(),
                            t1(this.relativeTargetOrigin, this.layout.layoutBox, t.layout.layoutBox),
                            ez(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0
                        }
                        if (this.relativeTarget || this.targetDelta) {
                            if ((this.target || (this.target = et(),
                            this.targetWithTransforms = et()),
                            this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target) ? (this.forceRelativeParentToResolveTarget(),
                            n = this.target,
                            r = this.relativeTarget,
                            i = this.relativeParent.target,
                            tK(n.x, r.x, i.x),
                            tK(n.y, r.y, i.y)) : this.targetDelta ? (this.resumingFrom ? this.target = this.applyTransform(this.layout.layoutBox) : ez(this.target, this.layout.layoutBox),
                            eu(this.target, this.targetDelta)) : ez(this.target, this.layout.layoutBox),
                            this.attemptToResolveRelativeTarget) {
                                this.attemptToResolveRelativeTarget = !1;
                                let t = this.getClosestProjectingParent();
                                t && !!t.resumingFrom == !!this.resumingFrom && !t.options.layoutScroll && t.target && 1 !== this.animationProgress ? (this.relativeParent = t,
                                this.forceRelativeParentToResolveTarget(),
                                this.relativeTarget = et(),
                                this.relativeTargetOrigin = et(),
                                t1(this.relativeTargetOrigin, this.target, t.target),
                                ez(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0
                            }
                            e6.resolvedTargetDeltas++
                        }
                    }
                }
                getClosestProjectingParent() {
                    return !this.parent || ei(this.parent.latestValues) || eo(this.parent.latestValues) ? void 0 : this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent()
                }
                isProjecting() {
                    return !!((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout)
                }
                calcProjection() {
                    var t;
                    let e = this.getLead()
                      , n = !!this.resumingFrom || this !== e
                      , r = !0;
                    if ((this.isProjectionDirty || (null === (t = this.parent) || void 0 === t ? void 0 : t.isProjectionDirty)) && (r = !1),
                    n && (this.isSharedProjectionDirty || this.isTransformDirty) && (r = !1),
                    this.resolvedRelativeTargetAt === tw.frameData.timestamp && (r = !1),
                    r)
                        return;
                    let {layout: i, layoutId: a} = this.options;
                    if (this.isTreeAnimating = !!(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation),
                    this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0),
                    !this.layout || !(i || a))
                        return;
                    ez(this.layoutCorrected, this.layout.layoutBox);
                    let o = this.treeScale.x
                      , s = this.treeScale.y;
                    !function(t, e, n, r=!1) {
                        let i, a;
                        let o = n.length;
                        if (o) {
                            e.x = e.y = 1;
                            for (let s = 0; s < o; s++) {
                                a = (i = n[s]).projectionDelta;
                                let o = i.instance;
                                (!o || !o.style || "contents" !== o.style.display) && (r && i.options.layoutScroll && i.scroll && i !== i.root && em(t, {
                                    x: -i.scroll.offset.x,
                                    y: -i.scroll.offset.y
                                }),
                                a && (e.x *= a.x.scale,
                                e.y *= a.y.scale,
                                eu(t, a)),
                                r && ea(i.latestValues) && em(t, i.latestValues))
                            }
                            e.x = ec(e.x),
                            e.y = ec(e.y)
                        }
                    }(this.layoutCorrected, this.treeScale, this.path, n),
                    e.layout && !e.target && (1 !== this.treeScale.x || 1 !== this.treeScale.y) && (e.target = e.layout.layoutBox);
                    let {target: l} = e;
                    if (!l) {
                        this.projectionTransform && (this.projectionDelta = t9(),
                        this.projectionTransform = "none",
                        this.scheduleRender());
                        return
                    }
                    this.projectionDelta || (this.projectionDelta = t9(),
                    this.projectionDeltaWithTransform = t9());
                    let u = this.projectionTransform;
                    tX(this.projectionDelta, this.layoutCorrected, l, this.latestValues),
                    this.projectionTransform = eK(this.projectionDelta, this.treeScale),
                    (this.projectionTransform !== u || this.treeScale.x !== o || this.treeScale.y !== s) && (this.hasProjected = !0,
                    this.scheduleRender(),
                    this.notifyListeners("projectionUpdate", l)),
                    e6.recalculatedProjection++
                }
                hide() {
                    this.isVisible = !1
                }
                show() {
                    this.isVisible = !0
                }
                scheduleRender(t=!0) {
                    if (this.options.scheduleRender && this.options.scheduleRender(),
                    t) {
                        let t = this.getStack();
                        t && t.scheduleRender()
                    }
                    this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0)
                }
                setAnimationOrigin(t, e=!1) {
                    let n;
                    let r = this.snapshot
                      , i = r ? r.latestValues : {}
                      , a = {
                        ...this.latestValues
                    }
                      , o = t9();
                    this.relativeParent && this.relativeParent.options.layoutRoot || (this.relativeTarget = this.relativeTargetOrigin = void 0),
                    this.attemptToResolveRelativeTarget = !e;
                    let s = et()
                      , l = r ? r.source : void 0
                      , u = this.layout ? this.layout.source : void 0
                      , c = l !== u
                      , h = this.getStack()
                      , d = !h || h.members.length <= 1
                      , f = !!(c && !d && !0 === this.options.crossfade && !this.path.some(nd));
                    this.animationProgress = 0,
                    this.mixTargetDelta = e => {
                        let r = e / 1e3;
                        if (nc(o.x, t.x, r),
                        nc(o.y, t.y, r),
                        this.setTargetDelta(o),
                        this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout) {
                            var l, u, h, p;
                            t1(s, this.layout.layoutBox, this.relativeParent.layout.layoutBox),
                            h = this.relativeTarget,
                            p = this.relativeTargetOrigin,
                            nh(h.x, p.x, s.x, r),
                            nh(h.y, p.y, s.y, r),
                            n && (l = this.relativeTarget,
                            u = n,
                            l.x.min === u.x.min && l.x.max === u.x.max && l.y.min === u.y.min && l.y.max === u.y.max) && (this.isProjectionDirty = !1),
                            n || (n = et()),
                            ez(n, this.relativeTarget)
                        }
                        c && (this.animationValues = a,
                        function(t, e, n, r, i, a) {
                            i ? (t.opacity = (0,
                            t$.C)(0, void 0 !== n.opacity ? n.opacity : 1, eL(r)),
                            t.opacityExit = (0,
                            t$.C)(void 0 !== e.opacity ? e.opacity : 1, 0, ej(r))) : a && (t.opacity = (0,
                            t$.C)(void 0 !== e.opacity ? e.opacity : 1, void 0 !== n.opacity ? n.opacity : 1, r));
                            for (let i = 0; i < eI; i++) {
                                let a = `border${eD[i]}Radius`
                                  , o = eN(e, a)
                                  , s = eN(n, a);
                                if (void 0 === o && void 0 === s)
                                    continue;
                                o || (o = 0),
                                s || (s = 0);
                                let l = 0 === o || 0 === s || eM(o) === eM(s);
                                l ? (t[a] = Math.max((0,
                                t$.C)(eP(o), eP(s), r), 0),
                                (U.aQ.test(s) || U.aQ.test(o)) && (t[a] += "%")) : t[a] = s
                            }
                            (e.rotate || n.rotate) && (t.rotate = (0,
                            t$.C)(e.rotate || 0, n.rotate || 0, r))
                        }(a, i, this.latestValues, r, f, d)),
                        this.root.scheduleUpdateProjection(),
                        this.scheduleRender(),
                        this.animationProgress = r
                    }
                    ,
                    this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0)
                }
                startAnimation(t) {
                    this.notifyListeners("animationStart"),
                    this.currentAnimation && this.currentAnimation.stop(),
                    this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(),
                    this.pendingAnimation && ((0,
                    tw.Pn)(this.pendingAnimation),
                    this.pendingAnimation = void 0),
                    this.pendingAnimation = tw.Wi.update( () => {
                        eS.hasAnimatedSinceResize = !0,
                        this.currentAnimation = function(t, e, n) {
                            let r = (0,
                            A.i)(t) ? t : (0,
                            e2.B)(t);
                            return r.start((0,
                            eg.v)("", r, 1e3, n)),
                            r.animation
                        }(0, 0, {
                            ...t,
                            onUpdate: e => {
                                this.mixTargetDelta(e),
                                t.onUpdate && t.onUpdate(e)
                            }
                            ,
                            onComplete: () => {
                                t.onComplete && t.onComplete(),
                                this.completeAnimation()
                            }
                        }),
                        this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation),
                        this.pendingAnimation = void 0
                    }
                    )
                }
                completeAnimation() {
                    this.resumingFrom && (this.resumingFrom.currentAnimation = void 0,
                    this.resumingFrom.preserveOpacity = void 0);
                    let t = this.getStack();
                    t && t.exitAnimationComplete(),
                    this.resumingFrom = this.currentAnimation = this.animationValues = void 0,
                    this.notifyListeners("animationComplete")
                }
                finishAnimation() {
                    this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(1e3),
                    this.currentAnimation.stop()),
                    this.completeAnimation()
                }
                applyTransformsToTarget() {
                    let t = this.getLead()
                      , {targetWithTransforms: e, target: n, layout: r, latestValues: i} = t;
                    if (e && n && r) {
                        if (this !== t && this.layout && r && ng(this.options.animationType, this.layout.layoutBox, r.layoutBox)) {
                            n = this.target || et();
                            let e = tY(this.layout.layoutBox.x);
                            n.x.min = t.target.x.min,
                            n.x.max = n.x.min + e;
                            let r = tY(this.layout.layoutBox.y);
                            n.y.min = t.target.y.min,
                            n.y.max = n.y.min + r
                        }
                        ez(e, n),
                        em(e, i),
                        tX(this.projectionDeltaWithTransform, this.layoutCorrected, e, i)
                    }
                }
                registerSharedNode(t, e) {
                    this.sharedNodes.has(t) || this.sharedNodes.set(t, new eX);
                    let n = this.sharedNodes.get(t);
                    n.add(e);
                    let r = e.options.initialPromotionConfig;
                    e.promote({
                        transition: r ? r.transition : void 0,
                        preserveFollowOpacity: r && r.shouldPreserveFollowOpacity ? r.shouldPreserveFollowOpacity(e) : void 0
                    })
                }
                isLead() {
                    let t = this.getStack();
                    return !t || t.lead === this
                }
                getLead() {
                    var t;
                    let {layoutId: e} = this.options;
                    return e && (null === (t = this.getStack()) || void 0 === t ? void 0 : t.lead) || this
                }
                getPrevLead() {
                    var t;
                    let {layoutId: e} = this.options;
                    return e ? null === (t = this.getStack()) || void 0 === t ? void 0 : t.prevLead : void 0
                }
                getStack() {
                    let {layoutId: t} = this.options;
                    if (t)
                        return this.root.sharedNodes.get(t)
                }
                promote({needsReset: t, transition: e, preserveFollowOpacity: n}={}) {
                    let r = this.getStack();
                    r && r.promote(this, n),
                    t && (this.projectionDelta = void 0,
                    this.needsReset = !0),
                    e && this.setOptions({
                        transition: e
                    })
                }
                relegate() {
                    let t = this.getStack();
                    return !!t && t.relegate(this)
                }
                resetRotation() {
                    let {visualElement: t} = this.options;
                    if (!t)
                        return;
                    let e = !1
                      , {latestValues: n} = t;
                    if ((n.rotate || n.rotateX || n.rotateY || n.rotateZ) && (e = !0),
                    !e)
                        return;
                    let r = {};
                    for (let e = 0; e < e5.length; e++) {
                        let i = "rotate" + e5[e];
                        n[i] && (r[i] = n[i],
                        t.setStaticValue(i, 0))
                    }
                    for (let e in t.render(),
                    r)
                        t.setStaticValue(e, r[e]);
                    t.scheduleRender()
                }
                getProjectionStyles(t={}) {
                    var e, n;
                    let r = {};
                    if (!this.instance || this.isSVG)
                        return r;
                    if (!this.isVisible)
                        return {
                            visibility: "hidden"
                        };
                    r.visibility = "";
                    let i = this.getTransformTemplate();
                    if (this.needsReset)
                        return this.needsReset = !1,
                        r.opacity = "",
                        r.pointerEvents = ta(t.pointerEvents) || "",
                        r.transform = i ? i(this.latestValues, "") : "none",
                        r;
                    let a = this.getLead();
                    if (!this.projectionDelta || !this.layout || !a.target) {
                        let e = {};
                        return this.options.layoutId && (e.opacity = void 0 !== this.latestValues.opacity ? this.latestValues.opacity : 1,
                        e.pointerEvents = ta(t.pointerEvents) || ""),
                        this.hasProjected && !ea(this.latestValues) && (e.transform = i ? i({}, "") : "none",
                        this.hasProjected = !1),
                        e
                    }
                    let o = a.animationValues || a.latestValues;
                    this.applyTransformsToTarget(),
                    r.transform = eK(this.projectionDeltaWithTransform, this.treeScale, o),
                    i && (r.transform = i(o, r.transform));
                    let {x: s, y: l} = this.projectionDelta;
                    for (let t in r.transformOrigin = `${100 * s.origin}% ${100 * l.origin}% 0`,
                    a.animationValues ? r.opacity = a === this ? null !== (n = null !== (e = o.opacity) && void 0 !== e ? e : this.latestValues.opacity) && void 0 !== n ? n : 1 : this.preserveOpacity ? this.latestValues.opacity : o.opacityExit : r.opacity = a === this ? void 0 !== o.opacity ? o.opacity : "" : void 0 !== o.opacityExit ? o.opacityExit : 0,
                    T) {
                        if (void 0 === o[t])
                            continue;
                        let {correct: e, applyTo: n} = T[t]
                          , i = "none" === r.transform ? o[t] : e(o[t], a);
                        if (n) {
                            let t = n.length;
                            for (let e = 0; e < t; e++)
                                r[n[e]] = i
                        } else
                            r[t] = i
                    }
                    return this.options.layoutId && (r.pointerEvents = a === this ? ta(t.pointerEvents) || "" : "none"),
                    r
                }
                clearSnapshot() {
                    this.resumeFrom = this.snapshot = void 0
                }
                resetTree() {
                    this.root.nodes.forEach(t => {
                        var e;
                        return null === (e = t.currentAnimation) || void 0 === e ? void 0 : e.stop()
                    }
                    ),
                    this.root.nodes.forEach(nn),
                    this.root.sharedNodes.clear()
                }
            }
        }
        function e8(t) {
            t.updateLayout()
        }
        function e9(t) {
            var e;
            let n = (null === (e = t.resumeFrom) || void 0 === e ? void 0 : e.snapshot) || t.snapshot;
            if (t.isLead() && t.layout && n && t.hasListeners("didUpdate")) {
                let {layoutBox: e, measuredBox: r} = t.layout
                  , {animationType: i} = t.options
                  , a = n.source !== t.layout.source;
                "size" === i ? ee(t => {
                    let r = a ? n.measuredBox[t] : n.layoutBox[t]
                      , i = tY(r);
                    r.min = e[t].min,
                    r.max = r.min + i
                }
                ) : ng(i, n.layoutBox, e) && ee(r => {
                    let i = a ? n.measuredBox[r] : n.layoutBox[r]
                      , o = tY(e[r]);
                    i.max = i.min + o,
                    t.relativeTarget && !t.currentAnimation && (t.isProjectionDirty = !0,
                    t.relativeTarget[r].max = t.relativeTarget[r].min + o)
                }
                );
                let o = t9();
                tX(o, e, n.layoutBox);
                let s = t9();
                a ? tX(s, t.applyTransform(r, !0), n.measuredBox) : tX(s, e, n.layoutBox);
                let l = !e$(o)
                  , u = !1;
                if (!t.resumeFrom) {
                    let r = t.getClosestProjectingParent();
                    if (r && !r.resumeFrom) {
                        let {snapshot: i, layout: a} = r;
                        if (i && a) {
                            let o = et();
                            t1(o, n.layoutBox, i.layoutBox);
                            let s = et();
                            t1(s, e, a.layoutBox),
                            eY(o, s) || (u = !0),
                            r.options.layoutRoot && (t.relativeTarget = s,
                            t.relativeTargetOrigin = o,
                            t.relativeParent = r)
                        }
                    }
                }
                t.notifyListeners("didUpdate", {
                    layout: e,
                    snapshot: n,
                    delta: s,
                    layoutDelta: o,
                    hasLayoutChanged: l,
                    hasRelativeTargetChanged: u
                })
            } else if (t.isLead()) {
                let {onExitComplete: e} = t.options;
                e && e()
            }
            t.options.transition = void 0
        }
        function e7(t) {
            e6.totalNodes++,
            t.parent && (t.isProjecting() || (t.isProjectionDirty = t.parent.isProjectionDirty),
            t.isSharedProjectionDirty || (t.isSharedProjectionDirty = !!(t.isProjectionDirty || t.parent.isProjectionDirty || t.parent.isSharedProjectionDirty)),
            t.isTransformDirty || (t.isTransformDirty = t.parent.isTransformDirty))
        }
        function nt(t) {
            t.isProjectionDirty = t.isSharedProjectionDirty = t.isTransformDirty = !1
        }
        function ne(t) {
            t.clearSnapshot()
        }
        function nn(t) {
            t.clearMeasurements()
        }
        function nr(t) {
            t.isLayoutDirty = !1
        }
        function ni(t) {
            let {visualElement: e} = t.options;
            e && e.getProps().onBeforeLayoutMeasure && e.notify("BeforeLayoutMeasure"),
            t.resetTransform()
        }
        function na(t) {
            t.finishAnimation(),
            t.targetDelta = t.relativeTarget = t.target = void 0,
            t.isProjectionDirty = !0
        }
        function no(t) {
            t.resolveTargetDelta()
        }
        function ns(t) {
            t.calcProjection()
        }
        function nl(t) {
            t.resetRotation()
        }
        function nu(t) {
            t.removeLeadSnapshot()
        }
        function nc(t, e, n) {
            t.translate = (0,
            t$.C)(e.translate, 0, n),
            t.scale = (0,
            t$.C)(e.scale, 1, n),
            t.origin = e.origin,
            t.originPoint = e.originPoint
        }
        function nh(t, e, n, r) {
            t.min = (0,
            t$.C)(e.min, n.min, r),
            t.max = (0,
            t$.C)(e.max, n.max, r)
        }
        function nd(t) {
            return t.animationValues && void 0 !== t.animationValues.opacityExit
        }
        let nf = {
            duration: .45,
            ease: [.4, 0, .1, 1]
        }
          , np = t => "undefined" != typeof navigator && navigator.userAgent.toLowerCase().includes(t)
          , nm = np("applewebkit/") && !np("chrome/") ? Math.round : tx.Z;
        function ny(t) {
            t.min = nm(t.min),
            t.max = nm(t.max)
        }
        function ng(t, e, n) {
            return "position" === t || "preserve-aspect" === t && !tZ(eZ(e), eZ(n), .2)
        }
        let nv = e4({
            attachResizeListener: (t, e) => tu(t, "resize", e),
            measureScroll: () => ({
                x: document.documentElement.scrollLeft || document.body.scrollLeft,
                y: document.documentElement.scrollTop || document.body.scrollTop
            }),
            checkIsScrollRoot: () => !0
        })
          , n_ = {
            current: void 0
        }
          , nb = e4({
            measureScroll: t => ({
                x: t.scrollLeft,
                y: t.scrollTop
            }),
            defaultParent: () => {
                if (!n_.current) {
                    let t = new nv({});
                    t.mount(window),
                    t.setOptions({
                        layoutScroll: !0
                    }),
                    n_.current = t
                }
                return n_.current
            }
            ,
            resetTransform: (t, e) => {
                t.style.transform = void 0 !== e ? e : "none"
            }
            ,
            checkIsScrollRoot: t => "fixed" === window.getComputedStyle(t).position
        });
        var nw = n(2728)
          , nS = n(8172);
        let nk = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
        function nx(t, e, n=1) {
            (0,
            tV.k)(n <= 4, `Max CSS variable fallback depth detected in property "${t}". This may indicate a circular fallback dependency.`);
            let[r,i] = function(t) {
                let e = nk.exec(t);
                if (!e)
                    return [, ];
                let[,n,r] = e;
                return [n, r]
            }(t);
            if (!r)
                return;
            let a = window.getComputedStyle(e).getPropertyValue(r);
            return a ? a.trim() : (0,
            I.tm)(i) ? nx(i, e, n + 1) : i
        }
        var nE = n(6440)
          , nT = n(1649);
        let nO = new Set(["width", "height", "top", "left", "right", "bottom", "x", "y", "translateX", "translateY"])
          , nC = t => nO.has(t)
          , nA = t => Object.keys(t).some(nC)
          , nR = t => t === nT.Rx || t === U.px
          , nD = (t, e) => parseFloat(t.split(", ")[e])
          , nI = (t, e) => (n, {transform: r}) => {
            if ("none" === r || !r)
                return 0;
            let i = r.match(/^matrix3d\((.+)\)$/);
            if (i)
                return nD(i[1], e);
            {
                let e = r.match(/^matrix\((.+)\)$/);
                return e ? nD(e[1], t) : 0
            }
        }
          , nP = new Set(["x", "y", "z"])
          , nM = O._.filter(t => !nP.has(t))
          , nN = {
            width: ({x: t}, {paddingLeft: e="0", paddingRight: n="0"}) => t.max - t.min - parseFloat(e) - parseFloat(n),
            height: ({y: t}, {paddingTop: e="0", paddingBottom: n="0"}) => t.max - t.min - parseFloat(e) - parseFloat(n),
            top: (t, {top: e}) => parseFloat(e),
            left: (t, {left: e}) => parseFloat(e),
            bottom: ({y: t}, {top: e}) => parseFloat(e) + (t.max - t.min),
            right: ({x: t}, {left: e}) => parseFloat(e) + (t.max - t.min),
            x: nI(4, 13),
            y: nI(5, 14)
        };
        nN.translateX = nN.x,
        nN.translateY = nN.y;
        let nL = (t, e, n) => {
            let r = e.measureViewportBox()
              , i = e.current
              , a = getComputedStyle(i)
              , {display: o} = a
              , s = {};
            "none" === o && e.setStaticValue("display", t.display || "block"),
            n.forEach(t => {
                s[t] = nN[t](r, a)
            }
            ),
            e.render();
            let l = e.measureViewportBox();
            return n.forEach(n => {
                let r = e.getValue(n);
                r && r.jump(s[n]),
                t[n] = nN[n](l, a)
            }
            ),
            t
        }
          , nj = (t, e, n={}, r={}) => {
            e = {
                ...e
            },
            r = {
                ...r
            };
            let i = Object.keys(e).filter(nC)
              , a = []
              , o = !1
              , s = [];
            if (i.forEach(i => {
                let l;
                let u = t.getValue(i);
                if (!t.hasValue(i))
                    return;
                let c = n[i]
                  , h = (0,
                nE.C)(c)
                  , d = e[i];
                if ((0,
                tD.C)(d)) {
                    let t = d.length
                      , e = null === d[0] ? 1 : 0;
                    c = d[e],
                    h = (0,
                    nE.C)(c);
                    for (let n = e; n < t && null !== d[n]; n++)
                        l ? (0,
                        tV.k)((0,
                        nE.C)(d[n]) === l, "All keyframes must be of the same type") : (l = (0,
                        nE.C)(d[n]),
                        (0,
                        tV.k)(l === h || nR(h) && nR(l), "Keyframes must be of the same dimension as the current value"))
                } else
                    l = (0,
                    nE.C)(d);
                if (h !== l) {
                    if (nR(h) && nR(l)) {
                        let t = u.get();
                        "string" == typeof t && u.set(parseFloat(t)),
                        "string" == typeof d ? e[i] = parseFloat(d) : Array.isArray(d) && l === U.px && (e[i] = d.map(parseFloat))
                    } else
                        (null == h ? void 0 : h.transform) && (null == l ? void 0 : l.transform) && (0 === c || 0 === d) ? 0 === c ? u.set(l.transform(c)) : e[i] = h.transform(d) : (o || (a = function(t) {
                            let e = [];
                            return nM.forEach(n => {
                                let r = t.getValue(n);
                                void 0 !== r && (e.push([n, r.get()]),
                                r.set(n.startsWith("scale") ? 1 : 0))
                            }
                            ),
                            e.length && t.render(),
                            e
                        }(t),
                        o = !0),
                        s.push(i),
                        r[i] = void 0 !== r[i] ? r[i] : e[i],
                        u.jump(d))
                }
            }
            ),
            !s.length)
                return {
                    target: e,
                    transitionEnd: r
                };
            {
                let n = s.indexOf("height") >= 0 ? window.pageYOffset : null
                  , i = nL(e, t, s);
                return a.length && a.forEach( ([e,n]) => {
                    t.getValue(e).set(n)
                }
                ),
                t.render(),
                b.j && null !== n && window.scrollTo({
                    top: n
                }),
                {
                    target: i,
                    transitionEnd: r
                }
            }
        }
          , nF = (t, e, n, r) => {
            var i, a;
            let o = function(t, {...e}, n) {
                let r = t.current;
                if (!(r instanceof Element))
                    return {
                        target: e,
                        transitionEnd: n
                    };
                for (let i in n && (n = {
                    ...n
                }),
                t.values.forEach(t => {
                    let e = t.get();
                    if (!(0,
                    I.tm)(e))
                        return;
                    let n = nx(e, r);
                    n && t.set(n)
                }
                ),
                e) {
                    let t = e[i];
                    if (!(0,
                    I.tm)(t))
                        continue;
                    let a = nx(t, r);
                    a && (e[i] = a,
                    n || (n = {}),
                    void 0 === n[i] && (n[i] = t))
                }
                return {
                    target: e,
                    transitionEnd: n
                }
            }(t, e, r);
            return e = o.target,
            r = o.transitionEnd,
            i = e,
            a = r,
            nA(i) ? nj(t, i, n, a) : {
                target: i,
                transitionEnd: a
            }
        }
          , nV = {
            current: null
        }
          , nz = {
            current: !1
        };
        var nq = n(2490);
        let nU = new WeakMap
          , nB = Object.keys(_)
          , nG = nB.length
          , nW = ["AnimationStart", "AnimationComplete", "Update", "BeforeLayoutMeasure", "LayoutMeasure", "LayoutAnimationStart", "LayoutAnimationComplete"]
          , nH = p.length;
        class nQ {
            constructor({parent: t, props: e, presenceContext: n, reducedMotionConfig: r, visualState: i}, a={}) {
                this.current = null,
                this.children = new Set,
                this.isVariantNode = !1,
                this.isControllingVariants = !1,
                this.shouldReduceMotion = null,
                this.values = new Map,
                this.features = {},
                this.valueSubscriptions = new Map,
                this.prevMotionValues = {},
                this.events = {},
                this.propEventSubscriptions = {},
                this.notifyUpdate = () => this.notify("Update", this.latestValues),
                this.render = () => {
                    this.current && (this.triggerBuild(),
                    this.renderInstance(this.current, this.renderState, this.props.style, this.projection))
                }
                ,
                this.scheduleRender = () => tw.Wi.render(this.render, !1, !0);
                let {latestValues: o, renderState: s} = i;
                this.latestValues = o,
                this.baseTarget = {
                    ...o
                },
                this.initialValues = e.initial ? {
                    ...o
                } : {},
                this.renderState = s,
                this.parent = t,
                this.props = e,
                this.presenceContext = n,
                this.depth = t ? t.depth + 1 : 0,
                this.reducedMotionConfig = r,
                this.options = a,
                this.isControllingVariants = m(e),
                this.isVariantNode = y(e),
                this.isVariantNode && (this.variantChildren = new Set),
                this.manuallyAnimateOnMount = !!(t && t.current);
                let {willChange: l, ...u} = this.scrapeMotionValuesFromProps(e, {});
                for (let t in u) {
                    let e = u[t];
                    void 0 !== o[t] && (0,
                    A.i)(e) && (e.set(o[t], !1),
                    (0,
                    nq.L)(l) && l.add(t))
                }
            }
            scrapeMotionValuesFromProps(t, e) {
                return {}
            }
            mount(t) {
                this.current = t,
                nU.set(t, this),
                this.projection && !this.projection.instance && this.projection.mount(t),
                this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)),
                this.values.forEach( (t, e) => this.bindToMotionValue(e, t)),
                nz.current || function() {
                    if (nz.current = !0,
                    b.j) {
                        if (window.matchMedia) {
                            let t = window.matchMedia("(prefers-reduced-motion)")
                              , e = () => nV.current = t.matches;
                            t.addListener(e),
                            e()
                        } else
                            nV.current = !1
                    }
                }(),
                this.shouldReduceMotion = "never" !== this.reducedMotionConfig && ("always" === this.reducedMotionConfig || nV.current),
                this.parent && this.parent.children.add(this),
                this.update(this.props, this.presenceContext)
            }
            unmount() {
                for (let t in nU.delete(this.current),
                this.projection && this.projection.unmount(),
                (0,
                tw.Pn)(this.notifyUpdate),
                (0,
                tw.Pn)(this.render),
                this.valueSubscriptions.forEach(t => t()),
                this.removeFromVariantTree && this.removeFromVariantTree(),
                this.parent && this.parent.children.delete(this),
                this.events)
                    this.events[t].clear();
                for (let t in this.features)
                    this.features[t].unmount();
                this.current = null
            }
            bindToMotionValue(t, e) {
                let n = O.G.has(t)
                  , r = e.on("change", e => {
                    this.latestValues[t] = e,
                    this.props.onUpdate && tw.Wi.update(this.notifyUpdate, !1, !0),
                    n && this.projection && (this.projection.isTransformDirty = !0)
                }
                )
                  , i = e.on("renderRequest", this.scheduleRender);
                this.valueSubscriptions.set(t, () => {
                    r(),
                    i()
                }
                )
            }
            sortNodePosition(t) {
                return this.current && this.sortInstanceNodePosition && this.type === t.type ? this.sortInstanceNodePosition(this.current, t.current) : 0
            }
            loadFeatures({children: t, ...e}, n, r, i) {
                let a, o;
                for (let t = 0; t < nG; t++) {
                    let n = nB[t]
                      , {isEnabled: r, Feature: i, ProjectionNode: s, MeasureLayout: l} = _[n];
                    s && (a = s),
                    r(e) && (!this.features[n] && i && (this.features[n] = new i(this)),
                    l && (o = l))
                }
                if (!this.projection && a) {
                    this.projection = new a(this.latestValues,this.parent && this.parent.projection);
                    let {layoutId: t, layout: n, drag: r, dragConstraints: o, layoutScroll: s, layoutRoot: l} = e;
                    this.projection.setOptions({
                        layoutId: t,
                        layout: n,
                        alwaysMeasureLayout: !!r || o && c(o),
                        visualElement: this,
                        scheduleRender: () => this.scheduleRender(),
                        animationType: "string" == typeof n ? n : "both",
                        initialPromotionConfig: i,
                        layoutScroll: s,
                        layoutRoot: l
                    })
                }
                return o
            }
            updateFeatures() {
                for (let t in this.features) {
                    let e = this.features[t];
                    e.isMounted ? e.update() : (e.mount(),
                    e.isMounted = !0)
                }
            }
            triggerBuild() {
                this.build(this.renderState, this.latestValues, this.options, this.props)
            }
            measureViewportBox() {
                return this.current ? this.measureInstanceViewportBox(this.current, this.props) : et()
            }
            getStaticValue(t) {
                return this.latestValues[t]
            }
            setStaticValue(t, e) {
                this.latestValues[t] = e
            }
            makeTargetAnimatable(t, e=!0) {
                return this.makeTargetAnimatableFromInstance(t, this.props, e)
            }
            update(t, e) {
                (t.transformTemplate || this.props.transformTemplate) && this.scheduleRender(),
                this.prevProps = this.props,
                this.props = t,
                this.prevPresenceContext = this.presenceContext,
                this.presenceContext = e;
                for (let e = 0; e < nW.length; e++) {
                    let n = nW[e];
                    this.propEventSubscriptions[n] && (this.propEventSubscriptions[n](),
                    delete this.propEventSubscriptions[n]);
                    let r = t["on" + n];
                    r && (this.propEventSubscriptions[n] = this.on(n, r))
                }
                this.prevMotionValues = function(t, e, n) {
                    let {willChange: r} = e;
                    for (let i in e) {
                        let a = e[i]
                          , o = n[i];
                        if ((0,
                        A.i)(a))
                            t.addValue(i, a),
                            (0,
                            nq.L)(r) && r.add(i);
                        else if ((0,
                        A.i)(o))
                            t.addValue(i, (0,
                            e2.B)(a, {
                                owner: t
                            })),
                            (0,
                            nq.L)(r) && r.remove(i);
                        else if (o !== a) {
                            if (t.hasValue(i)) {
                                let e = t.getValue(i);
                                e.hasAnimated || e.set(a)
                            } else {
                                let e = t.getStaticValue(i);
                                t.addValue(i, (0,
                                e2.B)(void 0 !== e ? e : a, {
                                    owner: t
                                }))
                            }
                        }
                    }
                    for (let r in n)
                        void 0 === e[r] && t.removeValue(r);
                    return e
                }(this, this.scrapeMotionValuesFromProps(t, this.prevProps), this.prevMotionValues),
                this.handleChildMotionValue && this.handleChildMotionValue()
            }
            getProps() {
                return this.props
            }
            getVariant(t) {
                return this.props.variants ? this.props.variants[t] : void 0
            }
            getDefaultTransition() {
                return this.props.transition
            }
            getTransformPagePoint() {
                return this.props.transformPagePoint
            }
            getClosestVariantNode() {
                return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0
            }
            getVariantContext(t=!1) {
                if (t)
                    return this.parent ? this.parent.getVariantContext() : void 0;
                if (!this.isControllingVariants) {
                    let t = this.parent && this.parent.getVariantContext() || {};
                    return void 0 !== this.props.initial && (t.initial = this.props.initial),
                    t
                }
                let e = {};
                for (let t = 0; t < nH; t++) {
                    let n = p[t]
                      , r = this.props[n];
                    (h(r) || !1 === r) && (e[n] = r)
                }
                return e
            }
            addVariantChild(t) {
                let e = this.getClosestVariantNode();
                if (e)
                    return e.variantChildren && e.variantChildren.add(t),
                    () => e.variantChildren.delete(t)
            }
            addValue(t, e) {
                e !== this.values.get(t) && (this.removeValue(t),
                this.bindToMotionValue(t, e)),
                this.values.set(t, e),
                this.latestValues[t] = e.get()
            }
            removeValue(t) {
                this.values.delete(t);
                let e = this.valueSubscriptions.get(t);
                e && (e(),
                this.valueSubscriptions.delete(t)),
                delete this.latestValues[t],
                this.removeValueFromRenderState(t, this.renderState)
            }
            hasValue(t) {
                return this.values.has(t)
            }
            getValue(t, e) {
                if (this.props.values && this.props.values[t])
                    return this.props.values[t];
                let n = this.values.get(t);
                return void 0 === n && void 0 !== e && (n = (0,
                e2.B)(e, {
                    owner: this
                }),
                this.addValue(t, n)),
                n
            }
            readValue(t) {
                var e;
                return void 0 === this.latestValues[t] && this.current ? null !== (e = this.getBaseTargetFromProps(this.props, t)) && void 0 !== e ? e : this.readValueFromInstance(this.current, t, this.options) : this.latestValues[t]
            }
            setBaseTarget(t, e) {
                this.baseTarget[t] = e
            }
            getBaseTarget(t) {
                var e;
                let {initial: n} = this.props
                  , r = "string" == typeof n || "object" == typeof n ? null === (e = (0,
                tn.o)(this.props, n)) || void 0 === e ? void 0 : e[t] : void 0;
                if (n && void 0 !== r)
                    return r;
                let i = this.getBaseTargetFromProps(this.props, t);
                return void 0 === i || (0,
                A.i)(i) ? void 0 !== this.initialValues[t] && void 0 === r ? void 0 : this.baseTarget[t] : i
            }
            on(t, e) {
                return this.events[t] || (this.events[t] = new eA.L),
                this.events[t].add(e)
            }
            notify(t, ...e) {
                this.events[t] && this.events[t].notify(...e)
            }
        }
        class n$ extends nQ {
            sortInstanceNodePosition(t, e) {
                return 2 & t.compareDocumentPosition(e) ? 1 : -1
            }
            getBaseTargetFromProps(t, e) {
                return t.style ? t.style[e] : void 0
            }
            removeValueFromRenderState(t, {vars: e, style: n}) {
                delete e[t],
                delete n[t]
            }
            makeTargetAnimatableFromInstance({transition: t, transitionEnd: e, ...n}, {transformValues: r}, i) {
                let a = (0,
                nS.P$)(n, t || {}, this);
                if (r && (e && (e = r(e)),
                n && (n = r(n)),
                a && (a = r(a))),
                i) {
                    (0,
                    nS.GJ)(this, n, a);
                    let t = nF(this, n, a, e);
                    e = t.transitionEnd,
                    n = t.target
                }
                return {
                    transition: t,
                    transitionEnd: e,
                    ...n
                }
            }
        }
        class nY extends n$ {
            readValueFromInstance(t, e) {
                if (O.G.has(e)) {
                    let t = (0,
                    nw.A)(e);
                    return t && t.default || 0
                }
                {
                    let n = window.getComputedStyle(t)
                      , r = ((0,
                    I.f9)(e) ? n.getPropertyValue(e) : n[e]) || 0;
                    return "string" == typeof r ? r.trim() : r
                }
            }
            measureInstanceViewportBox(t, {transformPagePoint: e}) {
                return ey(t, e)
            }
            build(t, e, n, r) {
                N(t, e, n, r.transformTemplate)
            }
            scrapeMotionValuesFromProps(t, e) {
                return tt(t, e)
            }
            handleChildMotionValue() {
                this.childSubscription && (this.childSubscription(),
                delete this.childSubscription);
                let {children: t} = this.props;
                (0,
                A.i)(t) && (this.childSubscription = t.on("change", t => {
                    this.current && (this.current.textContent = `${t}`)
                }
                ))
            }
            renderInstance(t, e, n, r) {
                J(t, e, n, r)
            }
        }
        class nZ extends n$ {
            constructor() {
                super(...arguments),
                this.isSVGTag = !1
            }
            getBaseTargetFromProps(t, e) {
                return t[e]
            }
            readValueFromInstance(t, e) {
                if (O.G.has(e)) {
                    let t = (0,
                    nw.A)(e);
                    return t && t.default || 0
                }
                return e = X.has(e) ? e : (0,
                Z.D)(e),
                t.getAttribute(e)
            }
            measureInstanceViewportBox() {
                return et()
            }
            scrapeMotionValuesFromProps(t, e) {
                return te(t, e)
            }
            build(t, e, n, r) {
                H(t, e, n, this.isSVGTag, r.transformTemplate)
            }
            renderInstance(t, e, n, r) {
                K(t, e, n, r)
            }
            mount(t) {
                this.isSVGTag = $(t.tagName),
                super.mount(t)
            }
        }
        let nJ = (t, e) => E(t) ? new nZ(e,{
            enableHardwareAcceleration: !1
        }) : new nY(e,{
            enableHardwareAcceleration: !0
        })
          , nX = {
            animation: {
                Feature: class extends tb {
                    constructor(t) {
                        super(t),
                        t.animationState || (t.animationState = function(t) {
                            let e = e => Promise.all(e.map( ({animation: e, options: n}) => (0,
                            tM.d)(t, e, n)))
                              , n = {
                                animate: tj(!0),
                                whileInView: tj(),
                                whileHover: tj(),
                                whileTap: tj(),
                                whileDrag: tj(),
                                whileFocus: tj(),
                                exit: tj()
                            }
                              , r = !0
                              , i = (e, n) => {
                                let r = (0,
                                tP.x)(t, n);
                                if (r) {
                                    let {transition: t, transitionEnd: n, ...i} = r;
                                    e = {
                                        ...e,
                                        ...i,
                                        ...n
                                    }
                                }
                                return e
                            }
                            ;
                            function a(a, o) {
                                let s = t.getProps()
                                  , l = t.getVariantContext(!0) || {}
                                  , u = []
                                  , c = new Set
                                  , f = {}
                                  , p = 1 / 0;
                                for (let e = 0; e < tL; e++) {
                                    var m;
                                    let y = tN[e]
                                      , g = n[y]
                                      , v = void 0 !== s[y] ? s[y] : l[y]
                                      , _ = h(v)
                                      , b = y === o ? g.isActive : null;
                                    !1 === b && (p = e);
                                    let w = v === l[y] && v !== s[y] && _;
                                    if (w && r && t.manuallyAnimateOnMount && (w = !1),
                                    g.protectedKeys = {
                                        ...f
                                    },
                                    !g.isActive && null === b || !v && !g.prevProp || d(v) || "boolean" == typeof v)
                                        continue;
                                    let S = (m = g.prevProp,
                                    "string" == typeof v ? v !== m : !!Array.isArray(v) && !tI(v, m))
                                      , k = S || y === o && g.isActive && !w && _ || e > p && _
                                      , x = Array.isArray(v) ? v : [v]
                                      , E = x.reduce(i, {});
                                    !1 === b && (E = {});
                                    let {prevResolvedValues: T={}} = g
                                      , O = {
                                        ...T,
                                        ...E
                                    }
                                      , C = t => {
                                        k = !0,
                                        c.delete(t),
                                        g.needsAnimating[t] = !0
                                    }
                                    ;
                                    for (let t in O) {
                                        let e = E[t]
                                          , n = T[t];
                                        f.hasOwnProperty(t) || (e !== n ? (0,
                                        tD.C)(e) && (0,
                                        tD.C)(n) ? !tI(e, n) || S ? C(t) : g.protectedKeys[t] = !0 : void 0 !== e ? C(t) : c.add(t) : void 0 !== e && c.has(t) ? C(t) : g.protectedKeys[t] = !0)
                                    }
                                    g.prevProp = v,
                                    g.prevResolvedValues = E,
                                    g.isActive && (f = {
                                        ...f,
                                        ...E
                                    }),
                                    r && t.blockInitialAnimation && (k = !1),
                                    k && !w && u.push(...x.map(t => ({
                                        animation: t,
                                        options: {
                                            type: y,
                                            ...a
                                        }
                                    })))
                                }
                                if (c.size) {
                                    let e = {};
                                    c.forEach(n => {
                                        let r = t.getBaseTarget(n);
                                        void 0 !== r && (e[n] = r)
                                    }
                                    ),
                                    u.push({
                                        animation: e
                                    })
                                }
                                let y = !!u.length;
                                return r && !1 === s.initial && !t.manuallyAnimateOnMount && (y = !1),
                                r = !1,
                                y ? e(u) : Promise.resolve()
                            }
                            return {
                                animateChanges: a,
                                setActive: function(e, r, i) {
                                    var o;
                                    if (n[e].isActive === r)
                                        return Promise.resolve();
                                    null === (o = t.variantChildren) || void 0 === o || o.forEach(t => {
                                        var n;
                                        return null === (n = t.animationState) || void 0 === n ? void 0 : n.setActive(e, r)
                                    }
                                    ),
                                    n[e].isActive = r;
                                    let s = a(i, e);
                                    for (let t in n)
                                        n[t].protectedKeys = {};
                                    return s
                                },
                                setAnimateFunction: function(n) {
                                    e = n(t)
                                },
                                getState: () => n
                            }
                        }(t))
                    }
                    updateAnimationControlsSubscription() {
                        let {animate: t} = this.node.getProps();
                        this.unmount(),
                        d(t) && (this.unmount = t.subscribe(this.node))
                    }
                    mount() {
                        this.updateAnimationControlsSubscription()
                    }
                    update() {
                        let {animate: t} = this.node.getProps()
                          , {animate: e} = this.node.prevProps || {};
                        t !== e && this.updateAnimationControlsSubscription()
                    }
                    unmount() {}
                }
            },
            exit: {
                Feature: class extends tb {
                    constructor() {
                        super(...arguments),
                        this.id = tF++
                    }
                    update() {
                        if (!this.node.presenceContext)
                            return;
                        let {isPresent: t, onExitComplete: e, custom: n} = this.node.presenceContext
                          , {isPresent: r} = this.node.prevPresenceContext || {};
                        if (!this.node.animationState || t === r)
                            return;
                        let i = this.node.animationState.setActive("exit", !t, {
                            custom: null != n ? n : this.node.getProps().custom
                        });
                        e && !t && i.then( () => e(this.id))
                    }
                    mount() {
                        let {register: t} = this.node.presenceContext || {};
                        t && (this.unmount = t(this.id))
                    }
                    unmount() {}
                }
            },
            inView: {
                Feature: class extends tb {
                    constructor() {
                        super(...arguments),
                        this.hasEnteredView = !1,
                        this.isInView = !1
                    }
                    startObserver() {
                        this.unmount();
                        let {viewport: t={}} = this.node.getProps()
                          , {root: e, margin: n, amount: r="some", once: i} = t
                          , a = {
                            root: e ? e.current : void 0,
                            rootMargin: n,
                            threshold: "number" == typeof r ? r : tR[r]
                        };
                        return function(t, e, n) {
                            let r = function({root: t, ...e}) {
                                let n = t || document;
                                tO.has(n) || tO.set(n, {});
                                let r = tO.get(n)
                                  , i = JSON.stringify(e);
                                return r[i] || (r[i] = new IntersectionObserver(tA,{
                                    root: t,
                                    ...e
                                })),
                                r[i]
                            }(e);
                            return tT.set(t, n),
                            r.observe(t),
                            () => {
                                tT.delete(t),
                                r.unobserve(t)
                            }
                        }(this.node.current, a, t => {
                            let {isIntersecting: e} = t;
                            if (this.isInView === e || (this.isInView = e,
                            i && !e && this.hasEnteredView))
                                return;
                            e && (this.hasEnteredView = !0),
                            this.node.animationState && this.node.animationState.setActive("whileInView", e);
                            let {onViewportEnter: n, onViewportLeave: r} = this.node.getProps()
                              , a = e ? n : r;
                            a && a(t)
                        }
                        )
                    }
                    mount() {
                        this.startObserver()
                    }
                    update() {
                        if ("undefined" == typeof IntersectionObserver)
                            return;
                        let {props: t, prevProps: e} = this.node
                          , n = ["amount", "margin", "root"].some(function({viewport: t={}}, {viewport: e={}}={}) {
                            return n => t[n] !== e[n]
                        }(t, e));
                        n && this.startObserver()
                    }
                    unmount() {}
                }
            },
            tap: {
                Feature: class extends tb {
                    constructor() {
                        super(...arguments),
                        this.removeStartListeners = tx.Z,
                        this.removeEndListeners = tx.Z,
                        this.removeAccessibleListeners = tx.Z,
                        this.startPointerPress = (t, e) => {
                            if (this.removeEndListeners(),
                            this.isPressing)
                                return;
                            let n = this.node.getProps()
                              , r = tf(window, "pointerup", (t, e) => {
                                if (!this.checkPressEnd())
                                    return;
                                let {onTap: n, onTapCancel: r} = this.node.getProps();
                                tw.Wi.update( () => {
                                    tk(this.node.current, t.target) ? n && n(t, e) : r && r(t, e)
                                }
                                )
                            }
                            , {
                                passive: !(n.onTap || n.onPointerUp)
                            })
                              , i = tf(window, "pointercancel", (t, e) => this.cancelPress(t, e), {
                                passive: !(n.onTapCancel || n.onPointerCancel)
                            });
                            this.removeEndListeners = (0,
                            tp.z)(r, i),
                            this.startPress(t, e)
                        }
                        ,
                        this.startAccessiblePress = () => {
                            let t = tu(this.node.current, "keydown", t => {
                                "Enter" !== t.key || this.isPressing || (this.removeEndListeners(),
                                this.removeEndListeners = tu(this.node.current, "keyup", t => {
                                    "Enter" === t.key && this.checkPressEnd() && tE("up", (t, e) => {
                                        let {onTap: n} = this.node.getProps();
                                        n && tw.Wi.update( () => n(t, e))
                                    }
                                    )
                                }
                                ),
                                tE("down", (t, e) => {
                                    this.startPress(t, e)
                                }
                                ))
                            }
                            )
                              , e = tu(this.node.current, "blur", () => {
                                this.isPressing && tE("cancel", (t, e) => this.cancelPress(t, e))
                            }
                            );
                            this.removeAccessibleListeners = (0,
                            tp.z)(t, e)
                        }
                    }
                    startPress(t, e) {
                        this.isPressing = !0;
                        let {onTapStart: n, whileTap: r} = this.node.getProps();
                        r && this.node.animationState && this.node.animationState.setActive("whileTap", !0),
                        n && tw.Wi.update( () => n(t, e))
                    }
                    checkPressEnd() {
                        this.removeEndListeners(),
                        this.isPressing = !1;
                        let t = this.node.getProps();
                        return t.whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !1),
                        !t_()
                    }
                    cancelPress(t, e) {
                        if (!this.checkPressEnd())
                            return;
                        let {onTapCancel: n} = this.node.getProps();
                        n && tw.Wi.update( () => n(t, e))
                    }
                    mount() {
                        let t = this.node.getProps()
                          , e = tf(this.node.current, "pointerdown", this.startPointerPress, {
                            passive: !(t.onTapStart || t.onPointerStart)
                        })
                          , n = tu(this.node.current, "focus", this.startAccessiblePress);
                        this.removeStartListeners = (0,
                        tp.z)(e, n)
                    }
                    unmount() {
                        this.removeStartListeners(),
                        this.removeEndListeners(),
                        this.removeAccessibleListeners()
                    }
                }
            },
            focus: {
                Feature: class extends tb {
                    constructor() {
                        super(...arguments),
                        this.isActive = !1
                    }
                    onFocus() {
                        let t = !1;
                        try {
                            t = this.node.current.matches(":focus-visible")
                        } catch (e) {
                            t = !0
                        }
                        t && this.node.animationState && (this.node.animationState.setActive("whileFocus", !0),
                        this.isActive = !0)
                    }
                    onBlur() {
                        this.isActive && this.node.animationState && (this.node.animationState.setActive("whileFocus", !1),
                        this.isActive = !1)
                    }
                    mount() {
                        this.unmount = (0,
                        tp.z)(tu(this.node.current, "focus", () => this.onFocus()), tu(this.node.current, "blur", () => this.onBlur()))
                    }
                    unmount() {}
                }
            },
            hover: {
                Feature: class extends tb {
                    mount() {
                        this.unmount = (0,
                        tp.z)(tS(this.node, !0), tS(this.node, !1))
                    }
                    unmount() {}
                }
            },
            pan: {
                Feature: class extends tb {
                    constructor() {
                        super(...arguments),
                        this.removePointerDownListener = tx.Z
                    }
                    onPointerDown(t) {
                        this.session = new tU(t,this.createPanHandlers(),{
                            transformPagePoint: this.node.getTransformPagePoint()
                        })
                    }
                    createPanHandlers() {
                        let {onPanSessionStart: t, onPanStart: e, onPan: n, onPanEnd: r} = this.node.getProps();
                        return {
                            onSessionStart: ew(t),
                            onStart: ew(e),
                            onMove: n,
                            onEnd: (t, e) => {
                                delete this.session,
                                r && tw.Wi.update( () => r(t, e))
                            }
                        }
                    }
                    mount() {
                        this.removePointerDownListener = tf(this.node.current, "pointerdown", t => this.onPointerDown(t))
                    }
                    update() {
                        this.session && this.session.updateHandlers(this.createPanHandlers())
                    }
                    unmount() {
                        this.removePointerDownListener(),
                        this.session && this.session.end()
                    }
                }
            },
            drag: {
                Feature: class extends tb {
                    constructor(t) {
                        super(t),
                        this.removeGroupControls = tx.Z,
                        this.removeListeners = tx.Z,
                        this.controls = new e_(t)
                    }
                    mount() {
                        let {dragControls: t} = this.node.getProps();
                        t && (this.removeGroupControls = t.subscribe(this.controls)),
                        this.removeListeners = this.controls.addListeners() || tx.Z
                    }
                    unmount() {
                        this.removeGroupControls(),
                        this.removeListeners()
                    }
                }
                ,
                ProjectionNode: nb,
                MeasureLayout: eO
            },
            layout: {
                ProjectionNode: nb,
                MeasureLayout: eO
            }
        }
          , nK = function(t) {
            function e(e, n={}) {
                return function({preloadedFeatures: t, createVisualElement: e, useRender: n, useVisualState: r, Component: d}) {
                    t && function(t) {
                        for (let e in t)
                            _[e] = {
                                ..._[e],
                                ...t[e]
                            }
                    }(t);
                    let f = (0,
                    i.forwardRef)(function(f, p) {
                        var y;
                        let v;
                        let _ = {
                            ...(0,
                            i.useContext)(a),
                            ...f,
                            layoutId: function({layoutId: t}) {
                                let e = (0,
                                i.useContext)(w).id;
                                return e && void 0 !== t ? e + "-" + t : t
                            }(f)
                        }
                          , {isStatic: k} = _
                          , x = function(t) {
                            let {initial: e, animate: n} = function(t, e) {
                                if (m(t)) {
                                    let {initial: e, animate: n} = t;
                                    return {
                                        initial: !1 === e || h(e) ? e : void 0,
                                        animate: h(n) ? n : void 0
                                    }
                                }
                                return !1 !== t.inherit ? e : {}
                            }(t, (0,
                            i.useContext)(o));
                            return (0,
                            i.useMemo)( () => ({
                                initial: e,
                                animate: n
                            }), [g(e), g(n)])
                        }(f)
                          , E = r(f, k);
                        if (!k && b.j) {
                            x.visualElement = function(t, e, n, r) {
                                let {visualElement: c} = (0,
                                i.useContext)(o)
                                  , h = (0,
                                i.useContext)(u)
                                  , d = (0,
                                i.useContext)(s)
                                  , f = (0,
                                i.useContext)(a).reducedMotion
                                  , p = (0,
                                i.useRef)();
                                r = r || h.renderer,
                                !p.current && r && (p.current = r(t, {
                                    visualState: e,
                                    parent: c,
                                    props: n,
                                    presenceContext: d,
                                    blockInitialAnimation: !!d && !1 === d.initial,
                                    reducedMotionConfig: f
                                }));
                                let m = p.current;
                                (0,
                                i.useInsertionEffect)( () => {
                                    m && m.update(n, d)
                                }
                                ),
                                (0,
                                l.L)( () => {
                                    m && m.render()
                                }
                                ),
                                (0,
                                i.useEffect)( () => {
                                    m && m.updateFeatures()
                                }
                                );
                                let y = window.HandoffAppearAnimations ? l.L : i.useEffect;
                                return y( () => {
                                    m && m.animationState && m.animationState.animateChanges()
                                }
                                ),
                                m
                            }(d, E, _, e);
                            let n = (0,
                            i.useContext)(S)
                              , r = (0,
                            i.useContext)(u).strict;
                            x.visualElement && (v = x.visualElement.loadFeatures(_, r, t, n))
                        }
                        return i.createElement(o.Provider, {
                            value: x
                        }, v && x.visualElement ? i.createElement(v, {
                            visualElement: x.visualElement,
                            ..._
                        }) : null, n(d, f, (y = x.visualElement,
                        (0,
                        i.useCallback)(t => {
                            t && E.mount && E.mount(t),
                            y && (t ? y.mount(t) : y.unmount()),
                            p && ("function" == typeof p ? p(t) : c(p) && (p.current = t))
                        }
                        , [y])), E, k, x.visualElement))
                    });
                    return f[k] = d,
                    f
                }(t(e, n))
            }
            if ("undefined" == typeof Proxy)
                return e;
            let n = new Map;
            return new Proxy(e,{
                get: (t, r) => (n.has(r) || n.set(r, e(r)),
                n.get(r))
            })
        }( (t, e) => (function(t, {forwardMotionProps: e=!1}, n, r) {
            let a = E(t) ? ts : tl;
            return {
                ...a,
                preloadedFeatures: n,
                useRender: function(t=!1) {
                    return (e, n, r, {latestValues: a}, o) => {
                        let s = E(e) ? Y : F
                          , l = s(n, a, o, e)
                          , u = function(t, e, n) {
                            let r = {};
                            for (let i in t)
                                ("values" !== i || "object" != typeof t.values) && (q(i) || !0 === n && z(i) || !e && !z(i) || t.draggable && i.startsWith("onDrag")) && (r[i] = t[i]);
                            return r
                        }(n, "string" == typeof e, t)
                          , c = {
                            ...u,
                            ...l,
                            ref: r
                        }
                          , {children: h} = n
                          , d = (0,
                        i.useMemo)( () => (0,
                        A.i)(h) ? h.get() : h, [h]);
                        return (0,
                        i.createElement)(e, {
                            ...c,
                            children: d
                        })
                    }
                }(e),
                createVisualElement: r,
                Component: t
            }
        }
        )(t, e, nX, nJ))
    },
    3193: function(t, e, n) {
        "use strict";
        n.d(e, {
            D: function() {
                return r
            }
        });
        let r = t => t.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()
    },
    7630: function(t, e, n) {
        "use strict";
        n.d(e, {
            Xp: function() {
                return o
            },
            f9: function() {
                return i
            },
            tm: function() {
                return a
            }
        });
        let r = t => e => "string" == typeof e && e.startsWith(t)
          , i = r("--")
          , a = r("var(--")
          , o = /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g
    },
    9135: function(t, e, n) {
        "use strict";
        n.d(e, {
            T: function() {
                return o
            }
        });
        var r = n(1550)
          , i = n(7197)
          , a = n(2728);
        function o(t, e) {
            let n = (0,
            a.A)(t);
            return n !== i.h && (n = r.P),
            n.getAnimatableNone ? n.getAnimatableNone(e) : void 0
        }
    },
    2728: function(t, e, n) {
        "use strict";
        n.d(e, {
            A: function() {
                return s
            }
        });
        var r = n(5385)
          , i = n(7197)
          , a = n(6173);
        let o = {
            ...a.j,
            color: r.$,
            backgroundColor: r.$,
            outlineColor: r.$,
            fill: r.$,
            stroke: r.$,
            borderColor: r.$,
            borderTopColor: r.$,
            borderRightColor: r.$,
            borderBottomColor: r.$,
            borderLeftColor: r.$,
            filter: i.h,
            WebkitFilter: i.h
        }
          , s = t => o[t]
    },
    6440: function(t, e, n) {
        "use strict";
        n.d(e, {
            $: function() {
                return o
            },
            C: function() {
                return s
            }
        });
        var r = n(1649)
          , i = n(6190)
          , a = n(8340);
        let o = [r.Rx, i.px, i.aQ, i.RW, i.vw, i.vh, {
            test: t => "auto" === t,
            parse: t => t
        }]
          , s = t => o.find((0,
        a.l)(t))
    },
    6173: function(t, e, n) {
        "use strict";
        n.d(e, {
            j: function() {
                return o
            }
        });
        var r = n(1649)
          , i = n(6190);
        let a = {
            ...r.Rx,
            transform: Math.round
        }
          , o = {
            borderWidth: i.px,
            borderTopWidth: i.px,
            borderRightWidth: i.px,
            borderBottomWidth: i.px,
            borderLeftWidth: i.px,
            borderRadius: i.px,
            radius: i.px,
            borderTopLeftRadius: i.px,
            borderTopRightRadius: i.px,
            borderBottomRightRadius: i.px,
            borderBottomLeftRadius: i.px,
            width: i.px,
            maxWidth: i.px,
            height: i.px,
            maxHeight: i.px,
            size: i.px,
            top: i.px,
            right: i.px,
            bottom: i.px,
            left: i.px,
            padding: i.px,
            paddingTop: i.px,
            paddingRight: i.px,
            paddingBottom: i.px,
            paddingLeft: i.px,
            margin: i.px,
            marginTop: i.px,
            marginRight: i.px,
            marginBottom: i.px,
            marginLeft: i.px,
            rotate: i.RW,
            rotateX: i.RW,
            rotateY: i.RW,
            rotateZ: i.RW,
            scale: r.bA,
            scaleX: r.bA,
            scaleY: r.bA,
            scaleZ: r.bA,
            skew: i.RW,
            skewX: i.RW,
            skewY: i.RW,
            distance: i.px,
            translateX: i.px,
            translateY: i.px,
            translateZ: i.px,
            x: i.px,
            y: i.px,
            z: i.px,
            perspective: i.px,
            transformPerspective: i.px,
            opacity: r.Fq,
            originX: i.$C,
            originY: i.$C,
            originZ: i.px,
            zIndex: a,
            fillOpacity: r.Fq,
            strokeOpacity: r.Fq,
            numOctaves: a
        }
    },
    8340: function(t, e, n) {
        "use strict";
        n.d(e, {
            l: function() {
                return r
            }
        });
        let r = t => e => e.test(t)
    },
    4714: function(t, e, n) {
        "use strict";
        n.d(e, {
            G: function() {
                return i
            },
            _: function() {
                return r
            }
        });
        let r = ["transformPerspective", "x", "y", "z", "translateX", "translateY", "translateZ", "scale", "scaleX", "scaleY", "rotate", "rotateX", "rotateY", "rotateZ", "skew", "skewX", "skewY"]
          , i = new Set(r)
    },
    2248: function(t, e, n) {
        "use strict";
        n.d(e, {
            x: function() {
                return i
            }
        });
        var r = n(9432);
        function i(t, e, n) {
            let i = t.getProps();
            return (0,
            r.o)(i, e, void 0 !== n ? n : i.custom, function(t) {
                let e = {};
                return t.values.forEach( (t, n) => e[n] = t.get()),
                e
            }(t), function(t) {
                let e = {};
                return t.values.forEach( (t, n) => e[n] = t.getVelocity()),
                e
            }(t))
        }
    },
    9432: function(t, e, n) {
        "use strict";
        function r(t, e, n, r={}, i={}) {
            return "function" == typeof e && (e = e(void 0 !== n ? n : t.custom, r, i)),
            "string" == typeof e && (e = t.variants && t.variants[e]),
            "function" == typeof e && (e = e(void 0 !== n ? n : t.custom, r, i)),
            e
        }
        n.d(e, {
            o: function() {
                return r
            }
        })
    },
    8172: function(t, e, n) {
        "use strict";
        n.d(e, {
            GJ: function() {
                return v
            },
            P$: function() {
                return _
            },
            CD: function() {
                return m
            },
            gg: function() {
                return g
            }
        });
        let r = t => /^\-?\d*\.?\d+$/.test(t);
        var i = n(681)
          , a = n(8715)
          , o = n(3234)
          , s = n(1550)
          , l = n(9135)
          , u = n(5385)
          , c = n(6440)
          , h = n(8340);
        let d = [...c.$, u.$, s.P]
          , f = t => d.find((0,
        h.l)(t));
        var p = n(2248);
        function m(t, e) {
            let n = (0,
            p.x)(t, e)
              , {transitionEnd: r={}, transition: i={}, ...s} = n ? t.makeTargetAnimatable(n, !1) : {};
            for (let e in s = {
                ...s,
                ...r
            }) {
                let n = (0,
                a.Y)(s[e]);
                t.hasValue(e) ? t.getValue(e).set(n) : t.addValue(e, (0,
                o.B)(n))
            }
        }
        function y(t, e) {
            let n = [...e].reverse();
            n.forEach(n => {
                let r = t.getVariant(n);
                r && m(t, r),
                t.variantChildren && t.variantChildren.forEach(t => {
                    y(t, e)
                }
                )
            }
            )
        }
        function g(t, e) {
            return Array.isArray(e) ? y(t, e) : "string" == typeof e ? y(t, [e]) : void m(t, e)
        }
        function v(t, e, n) {
            var a, u;
            let c = Object.keys(e).filter(e => !t.hasValue(e))
              , h = c.length;
            if (h)
                for (let d = 0; d < h; d++) {
                    let h = c[d]
                      , p = e[h]
                      , m = null;
                    Array.isArray(p) && (m = p[0]),
                    null === m && (m = null !== (u = null !== (a = n[h]) && void 0 !== a ? a : t.readValue(h)) && void 0 !== u ? u : e[h]),
                    null != m && ("string" == typeof m && (r(m) || (0,
                    i.W)(m)) ? m = parseFloat(m) : !f(m) && s.P.test(p) && (m = (0,
                    l.T)(h, p)),
                    t.addValue(h, (0,
                    o.B)(m, {
                        owner: t
                    })),
                    void 0 === n[h] && (n[h] = m),
                    null !== m && t.setBaseTarget(h, m))
                }
        }
        function _(t, e, n) {
            let r = {};
            for (let i in t) {
                let t = function(t, e) {
                    if (!e)
                        return;
                    let n = e[t] || e.default || e;
                    return n.from
                }(i, e);
                if (void 0 !== t)
                    r[i] = t;
                else {
                    let t = n.getValue(i);
                    t && (r[i] = t.get())
                }
            }
            return r
        }
    },
    10: function(t, e, n) {
        "use strict";
        function r(t, e) {
            -1 === t.indexOf(e) && t.push(e)
        }
        function i(t, e) {
            let n = t.indexOf(e);
            n > -1 && t.splice(n, 1)
        }
        n.d(e, {
            cl: function() {
                return i
            },
            y4: function() {
                return r
            }
        })
    },
    4169: function(t, e, n) {
        "use strict";
        n.d(e, {
            u: function() {
                return r
            }
        });
        let r = (t, e, n) => Math.min(Math.max(n, t), e)
    },
    5487: function(t, e, n) {
        "use strict";
        n.d(e, {
            K: function() {
                return i
            },
            k: function() {
                return a
            }
        });
        var r = n(1662);
        let i = r.Z
          , a = r.Z
    },
    1741: function(t, e, n) {
        "use strict";
        n.d(e, {
            j: function() {
                return r
            }
        });
        let r = "undefined" != typeof document
    },
    681: function(t, e, n) {
        "use strict";
        n.d(e, {
            W: function() {
                return r
            }
        });
        let r = t => /^0[^.\s]+$/.test(t)
    },
    22: function(t, e, n) {
        "use strict";
        n.d(e, {
            C: function() {
                return r
            }
        });
        let r = (t, e, n) => -n * t + n * e + t
    },
    1662: function(t, e, n) {
        "use strict";
        n.d(e, {
            Z: function() {
                return r
            }
        });
        let r = t => t
    },
    3624: function(t, e, n) {
        "use strict";
        n.d(e, {
            z: function() {
                return i
            }
        });
        let r = (t, e) => n => e(t(n))
          , i = (...t) => t.reduce(r)
    },
    3967: function(t, e, n) {
        "use strict";
        n.d(e, {
            Y: function() {
                return r
            }
        });
        let r = (t, e, n) => {
            let r = e - t;
            return 0 === r ? 1 : (n - t) / r
        }
    },
    8715: function(t, e, n) {
        "use strict";
        n.d(e, {
            Y: function() {
                return a
            },
            p: function() {
                return i
            }
        });
        var r = n(8488);
        let i = t => !!(t && "object" == typeof t && t.mix && t.toValue)
          , a = t => (0,
        r.C)(t) ? t[t.length - 1] || 0 : t
    },
    1560: function(t, e, n) {
        "use strict";
        n.d(e, {
            L: function() {
                return i
            }
        });
        var r = n(10);
        class i {
            constructor() {
                this.subscriptions = []
            }
            add(t) {
                return (0,
                r.y4)(this.subscriptions, t),
                () => (0,
                r.cl)(this.subscriptions, t)
            }
            notify(t, e, n) {
                let r = this.subscriptions.length;
                if (r) {
                    if (1 === r)
                        this.subscriptions[0](t, e, n);
                    else
                        for (let i = 0; i < r; i++) {
                            let r = this.subscriptions[i];
                            r && r(t, e, n)
                        }
                }
            }
            getSize() {
                return this.subscriptions.length
            }
            clear() {
                this.subscriptions.length = 0
            }
        }
    },
    6917: function(t, e, n) {
        "use strict";
        n.d(e, {
            X: function() {
                return i
            },
            w: function() {
                return r
            }
        });
        let r = t => 1e3 * t
          , i = t => t / 1e3
    },
    6681: function(t, e, n) {
        "use strict";
        n.d(e, {
            h: function() {
                return i
            }
        });
        var r = n(7294);
        function i(t) {
            let e = (0,
            r.useRef)(null);
            return null === e.current && (e.current = t()),
            e.current
        }
    },
    8868: function(t, e, n) {
        "use strict";
        n.d(e, {
            L: function() {
                return a
            }
        });
        var r = n(7294)
          , i = n(1741);
        let a = i.j ? r.useLayoutEffect : r.useEffect
    },
    3038: function(t, e, n) {
        "use strict";
        function r(t, e) {
            return e ? t * (1e3 / e) : 0
        }
        n.d(e, {
            R: function() {
                return r
            }
        })
    },
    3234: function(t, e, n) {
        "use strict";
        n.d(e, {
            B: function() {
                return l
            }
        });
        var r = n(1560)
          , i = n(3038)
          , a = n(2074);
        let o = t => !isNaN(parseFloat(t));
        class s {
            constructor(t, e={}) {
                this.version = "10.15.1",
                this.timeDelta = 0,
                this.lastUpdated = 0,
                this.canTrackVelocity = !1,
                this.events = {},
                this.updateAndNotify = (t, e=!0) => {
                    this.prev = this.current,
                    this.current = t;
                    let {delta: n, timestamp: r} = a.frameData;
                    this.lastUpdated !== r && (this.timeDelta = n,
                    this.lastUpdated = r,
                    a.Wi.postRender(this.scheduleVelocityCheck)),
                    this.prev !== this.current && this.events.change && this.events.change.notify(this.current),
                    this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()),
                    e && this.events.renderRequest && this.events.renderRequest.notify(this.current)
                }
                ,
                this.scheduleVelocityCheck = () => a.Wi.postRender(this.velocityCheck),
                this.velocityCheck = ({timestamp: t}) => {
                    t !== this.lastUpdated && (this.prev = this.current,
                    this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()))
                }
                ,
                this.hasAnimated = !1,
                this.prev = this.current = t,
                this.canTrackVelocity = o(this.current),
                this.owner = e.owner
            }
            onChange(t) {
                return this.on("change", t)
            }
            on(t, e) {
                this.events[t] || (this.events[t] = new r.L);
                let n = this.events[t].add(e);
                return "change" === t ? () => {
                    n(),
                    a.Wi.read( () => {
                        this.events.change.getSize() || this.stop()
                    }
                    )
                }
                : n
            }
            clearListeners() {
                for (let t in this.events)
                    this.events[t].clear()
            }
            attach(t, e) {
                this.passiveEffect = t,
                this.stopPassiveEffect = e
            }
            set(t, e=!0) {
                e && this.passiveEffect ? this.passiveEffect(t, this.updateAndNotify) : this.updateAndNotify(t, e)
            }
            setWithVelocity(t, e, n) {
                this.set(e),
                this.prev = t,
                this.timeDelta = n
            }
            jump(t) {
                this.updateAndNotify(t),
                this.prev = t,
                this.stop(),
                this.stopPassiveEffect && this.stopPassiveEffect()
            }
            get() {
                return this.current
            }
            getPrevious() {
                return this.prev
            }
            getVelocity() {
                return this.canTrackVelocity ? (0,
                i.R)(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0
            }
            start(t) {
                return this.stop(),
                new Promise(e => {
                    this.hasAnimated = !0,
                    this.animation = t(e),
                    this.events.animationStart && this.events.animationStart.notify()
                }
                ).then( () => {
                    this.events.animationComplete && this.events.animationComplete.notify(),
                    this.clearAnimation()
                }
                )
            }
            stop() {
                this.animation && (this.animation.stop(),
                this.events.animationCancel && this.events.animationCancel.notify()),
                this.clearAnimation()
            }
            isAnimating() {
                return !!this.animation
            }
            clearAnimation() {
                delete this.animation
            }
            destroy() {
                this.clearListeners(),
                this.stop(),
                this.stopPassiveEffect && this.stopPassiveEffect()
            }
        }
        function l(t, e) {
            return new s(t,e)
        }
    },
    6382: function(t, e, n) {
        "use strict";
        n.d(e, {
            $: function() {
                return a
            }
        });
        var r = n(819)
          , i = n(8834);
        let a = {
            test: (0,
            i.i)("#"),
            parse: function(t) {
                let e = ""
                  , n = ""
                  , r = ""
                  , i = "";
                return t.length > 5 ? (e = t.substring(1, 3),
                n = t.substring(3, 5),
                r = t.substring(5, 7),
                i = t.substring(7, 9)) : (e = t.substring(1, 2),
                n = t.substring(2, 3),
                r = t.substring(3, 4),
                i = t.substring(4, 5),
                e += e,
                n += n,
                r += r,
                i += i),
                {
                    red: parseInt(e, 16),
                    green: parseInt(n, 16),
                    blue: parseInt(r, 16),
                    alpha: i ? parseInt(i, 16) / 255 : 1
                }
            },
            transform: r.m.transform
        }
    },
    3184: function(t, e, n) {
        "use strict";
        n.d(e, {
            J: function() {
                return s
            }
        });
        var r = n(1649)
          , i = n(6190)
          , a = n(6430)
          , o = n(8834);
        let s = {
            test: (0,
            o.i)("hsl", "hue"),
            parse: (0,
            o.d)("hue", "saturation", "lightness"),
            transform: ({hue: t, saturation: e, lightness: n, alpha: o=1}) => "hsla(" + Math.round(t) + ", " + i.aQ.transform((0,
            a.Nw)(e)) + ", " + i.aQ.transform((0,
            a.Nw)(n)) + ", " + (0,
            a.Nw)(r.Fq.transform(o)) + ")"
        }
    },
    5385: function(t, e, n) {
        "use strict";
        n.d(e, {
            $: function() {
                return s
            }
        });
        var r = n(6430)
          , i = n(6382)
          , a = n(3184)
          , o = n(819);
        let s = {
            test: t => o.m.test(t) || i.$.test(t) || a.J.test(t),
            parse: t => o.m.test(t) ? o.m.parse(t) : a.J.test(t) ? a.J.parse(t) : i.$.parse(t),
            transform: t => (0,
            r.HD)(t) ? t : t.hasOwnProperty("red") ? o.m.transform(t) : a.J.transform(t)
        }
    },
    819: function(t, e, n) {
        "use strict";
        n.d(e, {
            m: function() {
                return u
            }
        });
        var r = n(4169)
          , i = n(1649)
          , a = n(6430)
          , o = n(8834);
        let s = t => (0,
        r.u)(0, 255, t)
          , l = {
            ...i.Rx,
            transform: t => Math.round(s(t))
        }
          , u = {
            test: (0,
            o.i)("rgb", "red"),
            parse: (0,
            o.d)("red", "green", "blue"),
            transform: ({red: t, green: e, blue: n, alpha: r=1}) => "rgba(" + l.transform(t) + ", " + l.transform(e) + ", " + l.transform(n) + ", " + (0,
            a.Nw)(i.Fq.transform(r)) + ")"
        }
    },
    8834: function(t, e, n) {
        "use strict";
        n.d(e, {
            d: function() {
                return a
            },
            i: function() {
                return i
            }
        });
        var r = n(6430);
        let i = (t, e) => n => !!((0,
        r.HD)(n) && r.mj.test(n) && n.startsWith(t) || e && Object.prototype.hasOwnProperty.call(n, e))
          , a = (t, e, n) => i => {
            if (!(0,
            r.HD)(i))
                return i;
            let[a,o,s,l] = i.match(r.KP);
            return {
                [t]: parseFloat(a),
                [e]: parseFloat(o),
                [n]: parseFloat(s),
                alpha: void 0 !== l ? parseFloat(l) : 1
            }
        }
    },
    7197: function(t, e, n) {
        "use strict";
        n.d(e, {
            h: function() {
                return l
            }
        });
        var r = n(1550)
          , i = n(6430);
        let a = new Set(["brightness", "contrast", "saturate", "opacity"]);
        function o(t) {
            let[e,n] = t.slice(0, -1).split("(");
            if ("drop-shadow" === e)
                return t;
            let[r] = n.match(i.KP) || [];
            if (!r)
                return t;
            let o = n.replace(r, "")
              , s = a.has(e) ? 1 : 0;
            return r !== n && (s *= 100),
            e + "(" + s + o + ")"
        }
        let s = /([a-z-]*)\(.*?\)/g
          , l = {
            ...r.P,
            getAnimatableNone: t => {
                let e = t.match(s);
                return e ? e.map(o).join(" ") : t
            }
        }
    },
    1550: function(t, e, n) {
        "use strict";
        n.d(e, {
            P: function() {
                return y
            },
            V: function() {
                return d
            }
        });
        var r = n(7630)
          , i = n(1662)
          , a = n(5385)
          , o = n(1649)
          , s = n(6430);
        let l = {
            regex: r.Xp,
            countKey: "Vars",
            token: "${v}",
            parse: i.Z
        }
          , u = {
            regex: s.dA,
            countKey: "Colors",
            token: "${c}",
            parse: a.$.parse
        }
          , c = {
            regex: s.KP,
            countKey: "Numbers",
            token: "${n}",
            parse: o.Rx.parse
        };
        function h(t, {regex: e, countKey: n, token: r, parse: i}) {
            let a = t.tokenised.match(e);
            a && (t["num" + n] = a.length,
            t.tokenised = t.tokenised.replace(e, r),
            t.values.push(...a.map(i)))
        }
        function d(t) {
            let e = t.toString()
              , n = {
                value: e,
                tokenised: e,
                values: [],
                numVars: 0,
                numColors: 0,
                numNumbers: 0
            };
            return n.value.includes("var(--") && h(n, l),
            h(n, u),
            h(n, c),
            n
        }
        function f(t) {
            return d(t).values
        }
        function p(t) {
            let {values: e, numColors: n, numVars: r, tokenised: i} = d(t)
              , o = e.length;
            return t => {
                let e = i;
                for (let i = 0; i < o; i++)
                    e = i < r ? e.replace(l.token, t[i]) : i < r + n ? e.replace(u.token, a.$.transform(t[i])) : e.replace(c.token, (0,
                    s.Nw)(t[i]));
                return e
            }
        }
        let m = t => "number" == typeof t ? 0 : t
          , y = {
            test: function(t) {
                var e, n;
                return isNaN(t) && (0,
                s.HD)(t) && ((null === (e = t.match(s.KP)) || void 0 === e ? void 0 : e.length) || 0) + ((null === (n = t.match(s.dA)) || void 0 === n ? void 0 : n.length) || 0) > 0
            },
            parse: f,
            createTransformer: p,
            getAnimatableNone: function(t) {
                let e = f(t)
                  , n = p(t);
                return n(e.map(m))
            }
        }
    },
    1649: function(t, e, n) {
        "use strict";
        n.d(e, {
            Fq: function() {
                return a
            },
            Rx: function() {
                return i
            },
            bA: function() {
                return o
            }
        });
        var r = n(4169);
        let i = {
            test: t => "number" == typeof t,
            parse: parseFloat,
            transform: t => t
        }
          , a = {
            ...i,
            transform: t => (0,
            r.u)(0, 1, t)
        }
          , o = {
            ...i,
            default: 1
        }
    },
    6190: function(t, e, n) {
        "use strict";
        n.d(e, {
            $C: function() {
                return c
            },
            RW: function() {
                return a
            },
            aQ: function() {
                return o
            },
            px: function() {
                return s
            },
            vh: function() {
                return l
            },
            vw: function() {
                return u
            }
        });
        var r = n(6430);
        let i = t => ({
            test: e => (0,
            r.HD)(e) && e.endsWith(t) && 1 === e.split(" ").length,
            parse: parseFloat,
            transform: e => `${e}${t}`
        })
          , a = i("deg")
          , o = i("%")
          , s = i("px")
          , l = i("vh")
          , u = i("vw")
          , c = {
            ...o,
            parse: t => o.parse(t) / 100,
            transform: t => o.transform(100 * t)
        }
    },
    6430: function(t, e, n) {
        "use strict";
        n.d(e, {
            HD: function() {
                return s
            },
            KP: function() {
                return i
            },
            Nw: function() {
                return r
            },
            dA: function() {
                return a
            },
            mj: function() {
                return o
            }
        });
        let r = t => Math.round(1e5 * t) / 1e5
          , i = /(-)?([\d]*\.?[\d])+/g
          , a = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi
          , o = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
        function s(t) {
            return "string" == typeof t
        }
    },
    2490: function(t, e, n) {
        "use strict";
        n.d(e, {
            L: function() {
                return i
            }
        });
        var r = n(406);
        function i(t) {
            return !!((0,
            r.i)(t) && t.add)
        }
    },
    406: function(t, e, n) {
        "use strict";
        n.d(e, {
            i: function() {
                return r
            }
        });
        let r = t => !!(t && t.getVelocity)
    }
}, function(t) {
    var e = function(e) {
        return t(t.s = e)
    };
    t.O(0, [774, 179], function() {
        return e(4822),
        e(6840),
        e(6885)
    }),
    _N_E = t.O()
}
]);
